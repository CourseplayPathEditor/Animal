<!DOCTYPE html>
<html lang="en-US"><head>
        <title>GIANTS Game Engine v5 Documentation</title>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta name="title" content="Documentation">
        <meta name="description" content="Documentation - Printable Version">
        <link rel="stylesheet" type="text/css" href="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/style.htm" media="screen, tv, projection, print" title="Default">
    </head>
    <body>
        <h1 style="page-break-before:auto;">GIANTS Game Engine v5 Documentation</h1>
<br><br>
<h2>Table of Contents</h2>

<ol style="list-style-type:none;">
    <li><b>Chapter 01:</b> <a href="#overview">Overview</a>
		<ol style="list-style-type:none;">
            <li><a href="#dev_controls">Enable development controls</a></li>
            <li><a href="#runtime_keys">Runtime development key short-cuts</a></li>
            <li><a href="#runtime_console">Console Command Reference</a></li>
        </ol>
    </li>
    
    <li><b>Chapter 02:</b> <a href="#editor">Editor</a>
        <ol style="list-style-type:none;">
            <li><a href="#editor_viewport">Viewport</a></li>
            <li><a href="#editor_scenegraph">Scenegraph</a></li>
            <li><a href="#editor_attributes">Attributes</a></li>
            <li><a href="#editor_toolbar">Toolbar</a></li>
            <li><a href="#editor_terrain">Terrain</a></li>
            <li><a href="#editor_user_attributes">User Attributes</a></li>
            <li><a href="#editor_scripting">Scripting</a></li>
            <li><a href="#editor_terrain">Terrain Editing</a></li>
            <li><a href="#editor_replace_dialog">Replace Dialog</a></li>
            <li><a href="#editor_interactive_placement">Interactive Placement</a></li>
            <li><a href="#editor_other_functionality">Other functionality</a></li>
            <li><a href="#editor_keys">Key short-cuts</a></li>
        </ol>
    </li>
    
    <li><b>Chapter 03:</b> <a href="#tutorials">Tutorials</a>
        <ol style="list-style-type:none;">
            <li><a href="#tutorial01">Tutorial 1 - Load i3d files and basics</a></li>
            <li><a href="#tutorial02">Tutorial 2 - Light functions, global time and rendering text</a></li>
            <li><a href="#tutorial03">Tutorial 3 - User Attributes</a></li>
            <li><a href="#tutorial04">Tutorial 4 - Timers</a></li>
            <li><a href="#tutorial05">Tutorial 5 - Physics</a></li>
            <li><a href="#tutorial06">Tutorial 6 - Overlays</a></li>
            <li><a href="#tutorial07">Tutorial 7 - Audio</a></li>
        </ol>
    </li>
    
    <li><b>Chapter 04:</b> <a href="#scripting">Scripting Reference</a>
        <ol style="list-style-type:none;">
            <li><a href="#runtime_function_reference">Function Reference</a>
                <ol style="list-style-type:none;">
                	<li><a href="#runtime_function_reference_general">General</a></li>
                	<li><a href="#runtime_function_reference_entity">Entity</a></li>
                	<li><a href="#runtime_function_reference_node">Node</a></li>
                	<li><a href="#runtime_function_reference_scenegraph">Scenegraph</a></li>
                	<li><a href="#runtime_function_reference_lighting">Lighting</a></li>
                	<li><a href="#runtime_function_reference_camera">Camera</a></li>
                	<li><a href="#runtime_function_reference_shape">Shape</a></li>
                	<li><a href="#runtime_function_reference_physics">Physics</a></li>
                	<li><a href="#runtime_function_reference_spline">Spline</a></li>
                	<li><a href="#runtime_function_reference_animation">Animation</a></li>
                	<li><a href="#runtime_function_reference_overlays">Overlays</a></li>
                	<li><a href="#runtime_function_reference_sound">Sound</a></li>
                	<li><a href="#runtime_function_reference_input">Input</a></li>
                	<li><a href="#runtime_function_reference_XML">XML</a></li>
                	<li><a href="#runtime_function_reference_network">Network</a></li>
                	<li><a href="#runtime_function_reference_callbacks">Callbacks</a></li>
                </ol>
            </li>
            <li><a href="#runtime_foundation_reference">Foundation Reference</a>
                <ol style="list-style-type:none;">
                	<li><a href="#runtime_foundation_reference_scenegraph">Scenegraph</a></li>
                	<li><a href="#runtime_foundation_reference_input">Input</a></li>
                </ol>
            </li>
        </ol>
    </li>
    
    <li><b>Chapter 05:</b> <a href="#exporter">Exporter</a>
        <ol style="list-style-type:none;">
            <li>
                <a href="#exporter_maya_installation">Autodesk Maya<sup style="font-size: 10px;">1</sup> i3d exporter</a>
                <ol style="list-style-type:none;">
                    <li><a href="#exporter_maya_material">Material export options</a></li>
                </ol>
            </li>
            <li><a href="#exporter_max_installation">Autodesk 3ds MAX<sup style="font-size: 10px;">2</sup> i3d exporter</a></li>
            <li><a href="#exporter_blender_installation">Blender i3d exporter</a></li>
        </ol>
    </li>
    
    <li><b>Chapter 06:</b> <a href="#artwork_guide">Content Creation - Artwork Guide</a>
        <ol style="list-style-type:none;">
            <li><a href="#artwork_guide_maya">Autodesk Maya</a></li>
            <li><a href="#artwork_guide_max">Autodesk 3DS MAX</a></li>
            <li><a href="#artwork_guide_texturing">Texturing</a></li>
        </ol>
    </li>
    
    <li><b>Chapter 07:</b> <a href="#i3d">I3D Format</a>
        <ol style="list-style-type:none;">
            <li><a href="#i3d_introduction">Introduction</a></li>
            <li><a href="#i3d_features">Features</a></li>
            <li><a href="#i3d_overview">Overview</a></li>
            <li><a href="#i3d_specification">Specification</a>
                <ol style="list-style-type:none;">
                    <li><a href="#i3d_general_layout">General Layout</a></li>
                    <li><a href="#i3d_materials">Materials</a></li>
                    <li><a href="#i3d_shapes">Shapes</a></li>
                    <li><a href="#i3d_dynamics">Dynamics</a></li>
                    <li><a href="#i3d_scenegraph">Scenegraph</a></li>
                    <li><a href="#i3d_animation">Animation</a></li>
                </ol>
            </li>
        </ol>
    </li>
</ol>
<br><br>

<!--a name="overview"><h1 style="page-break-before:always">Overview</h1></a-->
<h1 id="overview" style="page-break-before:always">Overview</h1>
<br><br>
<a name="runtime"></a>
<h2 id="dev_controls">Enable development controls</h2>
<br><br>
Open the file game.xml and change the value of controls from false to true.<br>
<br>
&lt;?xml version="1.0" encoding="utf-8" standalone="no" ?&gt;<br>
&lt;game&gt;<br>
&nbsp;&nbsp;...<br>
&nbsp;&nbsp;&lt;development&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;controls&gt;<span style="color:red;">true</span>&lt;/controls&gt;<br>
&nbsp;&nbsp;&lt;/development&gt;<br>
&lt;/game&gt;<br><br><br>

<h2 id="runtime_keys">Runtime development key short-cuts</h2>
<br>
<table cellpadding="6">
    <tbody><tr>
        <th class="list" align="left"><b>Key</b></th>
        <th class="list" align="left"><b>Function</b></th>
    </tr>
    <tr>
        <td class="list"><i>~ or `</i></td>
        <td class="list">Toggle console</td>
    </tr>
    <tr>
        <td class="list"><i>F2</i></td>
        <td class="list">Show frame rate</td>
    </tr>
    <tr>
        <td class="list"><i>F3</i></td>
        <td class="list">Toggle frame rate limiter</td>
    </tr>
    <tr>
        <td class="list"><i>F4</i></td>
        <td class="list">Wireframe mode</td>
    </tr>
    <tr>
        <td class="list"><i>F5</i></td>
        <td class="list">Toggle debug rendering</td>
    </tr>
    <tr>
        <td class="list"><i>F7</i></td>
        <td class="list">Toggle camera</td>
    </tr>
    <tr>
        <td class="list"><i>F8</i></td>
        <td class="list">Toggle stats</td>
    </tr>
</tbody></table>
<br><br>

<h2 id="runtime_console">Console command reference</h2>
<br>

<h3>help</h3>
<b>Description</b><br>
<blockquote>List all available commands</blockquote><br>

<h3>showFps</h3>
<b>Description</b><br>
<blockquote>Show frames per second</blockquote><br>

<h3>enableFramerateLimit</h3>
<b>Description</b><br>
<blockquote>Enable/disable frame per second limiter</blockquote><br>

<h3>framerateLimitFPS</h3>
<b>Description</b><br>
<blockquote>Frame per second limit attribute</blockquote><br>

<h3>listEntities</h3>
<b>Description</b><br>
<blockquote>Print detailed entity list</blockquote><br>

<h3>listResources</h3>
<b>Description</b><br>
<blockquote>Print detailed resource list</blockquote><br>

<h3>parallelRenderingAndPhysics</h3>
<b>Description</b><br>
<blockquote>Enable parallel rendering and physics</blockquote><br>

<h3>exit, quit or q</h3>
<b>Description</b><br>
<blockquote>Quits application</blockquote><br>

<br><br><br>
<br><br>
<!--a name="editor"><h1 id="editor" style="page-break-before:always">Editor</h1></a-->
<h1 id="editor" style="page-break-before:always">Editor</h1>
<h2>Table of Contents</h2>
<ol type="none">
    <li><a href="#editor_viewport">Viewport</a></li>
    <li><a href="#editor_scenegraph">Scenegraph Panel</a></li>
    <li><a href="#editor_attributes">Attributes Panel</a></li>
    <li><a href="#editor_toolbar">Toolbar</a></li>
    <li><a href="#editor_terrain">Terrain Editing</a></li>
    <li><a href="#editor_user_attributes">User Attributes</a></li>
    <li><a href="#editor_animation">Animation Panel</a></li>
    <li><a href="#editor_particle_system">Particle System Panel</a></li>
    <li><a href="#editor_splines">Spline Editing</a></li>
    <li><a href="#editor_scripting">Scripting</a></li>
    <li><a href="#editor_replace_dialog">Replace Dialog</a></li>
    <li><a href="#editor_interactive_placement">Interactive Placement</a></li>
    <li><a href="#editor_other_functionality">Other functionality</a></li>
    <li><a href="#editor_keys">Keyboard short-cuts</a></li>
</ol>


<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_editor.png" alt=""><br>
<br>

If you start up the Editor, you might not have all the panel windows open. To
open other panel windows open the menu option window and enable the panel you want.
You can adjust the width and height of the panels by dragging the outlines and if you
want to close a window you can simply press the cross right of the panel name.<br>
<br>
<br>

<h2 id="editor_viewport">Viewport</h2>

<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_viewport.png" alt=""><br>
<br>

<h3>Navigation</h3>
The navigation is quite like in Maya. If you have nothing open in your editor I
suggest you quickly open a simple i3d file otherwise you won’t see much of an
effect. If its to dark in your scene just create a light by going to Create–&gt;Light.
<br>
<br>
Some shortcuts:<br>
LMB = Left Mouse Button<br>
RMB = Right Mouse Button<br>
MMB = Middle Mouse Button<br>
Alt <b>+</b> LMB = Press and hold the Alt-Key and the left mouse button.<br>
<br>
<b>Alt + LMB</b> rotates the camera.<br>
<b>Alt + RMB</b> moves the camera forward and backward.<br>
<b>Alt + MMB</b> causes the camera to pan.<br>
<br>
If you don’t have a middle mouse button, you can press LMB and RMB instead.<br>
<br>

<h3>View Options</h3>
By simply right-clicking into the viewport panel you get the View Options.
Sometimes it’s useful too use different cameras in a scene. You can create them
once and then with the View Options you can choose the camera to view at your
scene from different angles quickly.<br>
<br>
You might notice that if you rotate, the camera is rotated. If you have a big
level this behaviour is very useful, but if you want to look at one particular
object this can be quite awkward. To change the rotation to Framed Rotate you
first have to select your object either  by clicking on it directly or by
choosing it from the scene-graph and the framing the selected object by pressing
the F key. Now you can simply click (RMB) on the screen to open the View Options
and choose Framed Rotate. Now the camera is rotating around your the last framed object.<br>
<br>
With solid or wireframe you can choose if you want the view shaded.<br>
<br>
If you have large scenes, you can toggle the visibility of lights,
audio sources, physics and the cameras by checking them on the show submenu.<br>
<br>
You can also use the Selectable submenu to toggle whether you can select
lights, audio sources or cameras.<br>
<br>
Furthermore you can toggle the grid and the polycount on and off.<br>
<br>
<br>

<h2 id="editor_scenegraph">Scenegraph Panel</h2>
A very useful feature of the GIANTS Editor is the scenegraph. If you don’t
have it on the screen, just go to menu window and hit scenegraph. It is basically
the same you have in Maya. It shows all objects you have in your scene
and also the parent-child relationship between your objects.<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_scenegraph.png" alt=""><br>
<br>
Let’s just make a little scene with some Transform Groups. The Transform Group is
the basic building block of your scene. You can use a TransformGroup to move
all the attached objects just by moving the Transform Group since the children
inherit the transformations of the parent. To create a new Transform Group go to
Create and hit TransformGroup. Now you can see it in the Scenegraph, its name is
transform. To change the name just select it and go to the attributes panel.
At the very top of the panel you can choose the name of your object. Make two
TransformGroups and name them Parent and Child. If you move them around you see
that their transformations are independent, the movement of the parent
doesn’t affect the child. Now let’s make the appropriate relationship between
the two. Select the child in the scenegraph panel and go to Edit-&gt;Cut. Now select
your parent and hit Edit-&gt;Paste.<br>
<br>
As you can see now, the child is now connected to the parent. If you now move
around the parent, the transformation of the child is affected too whereas the child
can be moved around without affecting the parent.<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_scenegraph2.png" alt=""><br>
<br>
<br>
There can be 6 types of objects in your scene: Triangle Meshes, Splines,
Cameras, Transform Groups, Lights, Terrains and Audio Sources.<br>
<br>
It is also possible to use CTRL + C to copy objets, CTRL + X to cut objects and
CTRL + V to paste objects. Notice that pasted objects are always children of the
currently selected object. If you want to paste an object on the highest hierarchy
level of the scenegraph be sure that nothing is selected in the scenegraph. This can
be achieved by clicking at an empty space in the scenegraph panel.<br>
<br>
<br>

<h2 id="editor_attributes">Attributes Panel</h2>
If you don’t see the attributes panel go to Windows-&gt;Attributes then select
an object in the scenegraph or the viewport. One important thing to notice is,
that if the background color of an attribute turns red, you entered a value that isn’t allowed.
(eg scale values other than 1 for a dynamic rigid body object) The background
color of animated attributes is yellow.<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_attributes.png" alt=""><br>
<br>
<br>
<h2 id="editor_toolbar">Toolbar</h2>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_toolbar.png" alt=""><br>
<br>
The toolbar looks like this. If your pointing on the icons with your mouse, a text with the functionality of
the tool is displayed.<br>
<br>
Let’s quickly go through them from left to right.<br>
<br>
<b>File Operations</b><br>
<ul>
    <li>Create a new i3d-File</li>
    <li>Open a i3d-File</li>
    <li>Open i3d in text editor</li>
    <li>Reload i3d</li>
    <li>Save the i3d-File</li>
    <li>Save the i3d-File as</li>
    <li>Import an i3d-file</li>
</ul>
<b>History</b><br>
<ul>
    <li>Undo last action</li>
    <li>Redo last action</li>
</ul>
<b>Physics</b><br>
<ul>
    <li>Play/Stop</li>
</ul>
If you hit the play icon, the physics will simulate.<br>
<br>
<b>Toggle Local- World Mode</b><br>
A handy tool is the toggle Local- World Mode, it changes the orientation of the
viewport transform gizmo from the local space of your object to world space.<br>
<br>

<b>Grid Snapping</b><br>
Use this option to snap objects to a predefined grid.<br>
<br>

<b>Terrain and Terrain Foliage</b><br>
<ul>
    <li>Terrain Sculpt Mode</li>
    <li>Terrain Detail Texture Paint Mode</li>
    <li>Terrain Foliage Paint Mode</li>
    <li>Save Terrain Data</li>
</ul>
<b>Texture Reload</b><br>
<ul>
    <li>Reload all Textures</li>
    <li>Reload Textures of selected objects</li>
</ul>
<b>Script Editor</b><br>
<ul>
    <li>Open Script Editor</li>
</ul>
<br>
<br>

<h2 id="editor_terrain">Terrain Editing</h2>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_terrain.png" alt=""><br>
<br>
To test the terrain sculpting, just open the terrain test scene. Now you have
a terrain to play with. Open the terrain editing panel with window-&gt;Terrain Editing.
(If the scenegraph panel is still open it might cut off a bit, just close it
to get more space.)<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_terrain2.png" alt=""><br>
<br>
If the terrain sculpt mode is active now, you can rise or lower the surface of
your terrain by using RMB and LMB. MMB can be used to smooth and the value
defines the force with which you pull or push. What happens here is, that you
are painting a height map, that defines the height of each point of your
terrain by giving it a grey-value. The attributes Opacity, Hardness and the
Value are defining the "brush" you are painting the height map with. Just play
around with the setting. You can change the radius of the brush with the shortcuts "V" and "B"
and you can change the opacity value of the brush quickly with "N" and "M".<br>
<br>
In the terrain texture paint mode next to the terrain sculpt icon you can
colorize your terrain with different textures.<br>
The used texture layers are defined in the i3d-file. (If you want to change the texture layers,
you have to open the i3d with a text editor and change the layers there) Just
choose your texture and paint onto your terrain. With the Chunk vis checkbox on,
you can see exactly which texture layers you used in a chunk by what amout. You can
use as many texture layers as you want, but you are limited to a maximum of four
texture layers per chunk.<br>
<br>
With the Terrain Foliage Paint Mode active, you can paint your foliage onto
your terrain, it`s the same thing as if you would paint onto your terrain -
not with a texture but with foliage. LMB adds foliage, RMB removes foliage.<br>
<br>
<br>

<h2 id="editor_user_attributes">User Attributes</h2>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_user_attributes.png" alt=""><br>
<br>
The user attributes panel is typically not visible if you open the editor for
the first time. So go to Windows-&gt;User Attributes. Select an object in the
scenegraph to see its user attributes.<br>
<br>
User Attributes can be defined in the editor and then be used in the engine
(eg. within a script). This enables you to define object specific attributes for
every object in the scene.<br>
<br>
<br>

<h2 id="editor_animation">Animation Panel</h2>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_animation.png" alt=""><br><br>
You can preview animation sets with the animation panel.
<br>
<br>

<h2 id="editor_particle_system">Particle System Panel</h2>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_particle_system.png" alt=""><br><br>
The particle system panel allows you to edit particle systems with real time preview.
<br>
<br>

<h2 id="editor_splines">Spline Editing</h2>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_splines.png" alt=""><br><br>
You can edit splines by picking a control vertex (CV) of a spline an moving it around.
Delete or insert new control vertices with the keys delete and insert.
<br>
<br>

<h2 id="editor_scripting">Scripting</h2>
Here you can execute script snippets. With ENTER, you can add new lines.
SHIFT+ENTER will execute the code in the text field.<br>
<br>
Type in the following:<br>
<br>
    <div class="code">
        print("hello world from the GIANTS Editor");<br>
    </div>
<br>
Then hit SHIFT + ENTER and the string is printed out above.<br>
<br><br>
The scripting can be useful for many things. For example you can run this script snippet to test the fog settings in
an i3d scene:<br>
<br>
    <div class="code">
        setFog("exp2", 0.002, 0, 0.8, 0.81, 0.97);<br>
    </div>
<br>
<br>

<h2 id="editor_replace_dialog">Replace Dialog</h2>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/editor_replace.png" alt=""><br>
<br>
If you want to replace an object in your scene, you can go to Edit-&gt;Replace to
open the replace panel. Select the object you want to replace, then hit load.
Do likewise with the object you want to replace with and choose whether you want
to keep the User Attributes or not. Now you can replace one single object by
hitting replace or you can replace all objects that are similar to the one you
selected by hitting replace all.<br>
<br>
Note: replace all does only work with single objects, but not with hierarchies of objects,
however the single replace function works.
<br>
This feature is quite useful because you can use it to substitute an object
reference feature within your i3d scene file.<br>
<br>
<br>

<h2 id="editor_interactive_placement">Interactive Placement</h2>
This is a really nice feature of the editor, you should try it at least once!<br>
To place an object on the surface of another object, you can simply select the
object you want to place and then press CTRL + B + LMB, while pointing at your
desired location. The selected object will then instantly be set to the
location you’ve chosen.<br>
<br>
Hint: you can do this with all your objects within your scenegraph and also
with the camera or light sources. E.g. you can select the current camera and then place the
camera at a location far away, allowing for fast relocation of the camera.<br>
<br>
If you keep the LMB pressed and hit SHIFT or CRTL you can clone the selected object
at the currect mouse position. SHIFT will just clone the object while CRTL will
add a random rotation in the Y-axis. (Useful feature if you want to
create a group with hundreds of randomly rotated objects like a forest)

<br>
<br>

<h2 id="editor_other_functionality">Other functionality</h2>
<br>
Edit-&gt;Clear History: This clears the undo/redo history.<br>
<br>
Edit-&gt;Move to Camera: Moves the selected object in front of the current camera<br>
<br>
Navigation Speed: Moves the camera faster or slower. Use - and + to ajust the speed.<br>
<br>
<br>

<h2 id="editor_keys">Keyboard short-cuts</h2>

<table cellpadding="6">
    <tbody><tr>
        <th class="list" align="left"><b>Key</b></th>
        <th class="list" align="left"><b>Function</b></th>
    </tr>
    <tr>
        <td class="list"><i>Alt + LMB</i></td>
        <td class="list">Rotate camera</td>
    </tr>
    <tr>
        <td class="list"><i>Alt + MMB</i></td>
        <td class="list">Pan camera</td>
    </tr>
    <tr>
        <td class="list"><i>Alt + RMB</i></td>
        <td class="list">Zoom camera</td>
    </tr>
    <tr>
        <td class="list"><i>Alt + LMB + RMB</i></td>
        <td class="list">Move camera up or down and left or right camera</td>
    </tr>
    <tr>
        <td class="list"><i>F</i></td>
        <td class="list">Frame selected object</td>
    </tr>
    <tr>
        <td class="list"><i>-</i></td>
        <td class="list">Decrease navigation speed</td>
    </tr>
    <tr>
        <td class="list"><i>+</i></td>
        <td class="list">Increase navigation speed</td>
    </tr>
    <tr>
        <td class="list"><i>4</i></td>
        <td class="list">Wireframe mode</td>
    </tr>
    <tr>
        <td class="list"><i>6</i></td>
        <td class="list">Shaded mode</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-S</i></td>
        <td class="list">Save</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-Z</i></td>
        <td class="list">Undo</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-W</i></td>
        <td class="list">Replace Dialog</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-X</i></td>
        <td class="list">Cut</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-C</i></td>
        <td class="list">Copy</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-V</i></td>
        <td class="list">Paste</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-Shift-C</i></td>
        <td class="list">Copy X,Y,Z components at once</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-Shift-V</i></td>
        <td class="list">Paste X,Y,Z components at once (can also be copied from a text source in the format "x y z")</td>
    </tr>
    <tr>
        <td class="list"><i>Delete</i></td>
        <td class="list">Delete</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-D</i></td>
        <td class="list">Duplicate</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-F</i></td>
        <td class="list">Move to Camera</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-B</i></td>
        <td class="list">Interactive placement (hold left mouse button to move around)</td>
    </tr>
    <tr>
        <td class="list"><i>Shift</i></td>
        <td class="list">Interactive placement paint</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl</i></td>
        <td class="list">Interactive placement paint with random rotation around y axis</td>
    </tr>
    <tr>
        <td class="list"><i>Ctrl-R</i></td>
        <td class="list">Pick replace value in viewport (Terrain edit modes)</td>
    </tr>
    <tr>
        <td class="list"><i>V</i></td>
        <td class="list">Decrease brush radius</td>
    </tr>
    <tr>
        <td class="list"><i>B</i></td>
        <td class="list">Increase brush radius</td>
    </tr>
    <tr>
        <td class="list"><i>N</i></td>
        <td class="list">Decrease brush opacity</td>
    </tr>
    <tr>
        <td class="list"><i>M</i></td>
        <td class="list">Increase brush opacity</td>
    </tr>
    <tr>
        <td class="list"><i>F8</i></td>
        <td class="list">Toggle stats</td>
    </tr>
    <tr>
        <td class="list"><i>Shift + Enter</i></td>
        <td class="list">Execute Script (Script Window)</td>
    </tr>
    <tr>
        <td class="list"><i>X</i></td>
        <td class="list">Grid Snapping</td>
    </tr>
    <tr>
        <td class="list"><i>Delete</i></td>
        <td class="list">Delete spline control vertex</td>
    </tr>
    <tr>
        <td class="list"><i>Insert</i></td>
        <td class="list">Insert new spline control vertex</td>
    </tr>
    <tr>
        <td class="list"><i>Left</i></td>
        <td class="list">Previous spline control vertex</td>
    </tr>
    <tr>
        <td class="list"><i>Right</i></td>
        <td class="list">Next spline control vertex</td>
    </tr>
    <tr>
        <td class="list"><i>Up or Down</i></td>
        <td class="list">First spline control vertex</td>
    </tr>
    <tr>
        <td class="list"><i>S</i></td>
        <td class="list">Stitch spline endpoints</td>
    </tr>
    <tr>
        <td class="list"><i>O</i></td>
        <td class="list">Toggle spline open/close</td>
    </tr>
    <tr>
        <td class="list"><i>R</i></td>
        <td class="list">Reverse spline</td>
    </tr>
</tbody></table>
<br>
<br>
<h1 id="tutorials" style="page-break-before:always">Tutorials</h1>
<br><br>
<h2 id="tutorial01" style="page-break-before: always;">Tutorial 1 - Basic setup and loading i3d files</h2>
The goal of this tutorial is to teach you the very basics of the GIANTS engine. 
You simply load an i3d with a cube in it and then rotate the cube by using 
LUA script.<br>
<br>
<b>Sample name:</b> SampleI3DLoading<br>
<b>Script source code file:</b> <i>sample/i3dLoading/main.lua</i><br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/SampleI3DLoading.jpg" alt="SampleI3DLoading"><br>
<br>
<b>The goal of this tutorial is to show you</b><br>
<ul>
    <li>how the engine uses ids</li>
    <li>how to load i3d files</li>
    <li>how to access objects within a loaded i3d</li>
    <li>what the base callback functions of the engine are</li>
    <li>how to access keyboard commands</li>
</ul>

<b>New functions in this tutorial</b><br>
<br>
<i>init()</i><br>
<i>keyEvent()</i><br>
<i>update()</i><br>
<i>rotate()</i><br>
<i>getRootNode()</i><br>
<i>loadI3DFile()</i><br>
<i>link()</i><br>
<i>getChildAt()</i><br>
<i>print()</i><br>
<i>requestExit()</i><br>
<br>
The most important script file is your main.lua. It is a lua file that is 
loaded and executed when your exe file is started.<br>
<br>
The first thing you need to know is how the engine exactly knows where your 
main.lua is. Well there has to be an xml file in the same folder as your exe 
with exactly the same name as your exe. In this case it is named 
SampleI3DLoading.xml. Open it with a text editor.<br>
<br>
<div class="code">
    &lt;?xml version="1.0" encoding="iso-8859-1" standalone="no" ?&gt;<br>
    &lt;startup&gt;<br>
    &nbsp;&lt;cmdline&gt;game.exe -script sample/i3dLoading/main.lua&lt;/cmdline&gt;<br>
    &lt;/startup&gt;<br>
</div>
<br>
In the third line you see where your main.lua is located. If you want to move 
your main.lua, you have to change the path in this xml as well.<br>
<br>
So, let's have a look at this main.lua, open it with any text editor. There 
are 5 essential functions: init(), mouseEvent(), keyEvent(), update() and 
draw(). Let's look at these functions in detail:<br>
<br>
<h2>init()</h2>
<br>
init() is executed once when you start your exe. Let’s go through the function 
line by line:<br>
<br>
<i>&nbsp;local worldRootNode = getRootNode();</i><br>
<br>
The variable worldRootNode is defined and assigned with the result of a 
function called getRootNode();<br>
<br>
If you meet a new function and you don’t exactly know what it does, simply look  
<a href="http://gdn.giants-software.com/documentation_scripting.php">here</a> and search for the function. Then you get 
detailed information about the function. In the tutorials those function 
descriptions are always blue.<br>
Here is what you find if you search for the getRootNode function:<br>
<br>

<div style="color:blue;">
    <h3>getRootNode</h3>
    <b>Description</b>
    <blockquote>Get scenegraph root node</blockquote>
    <b>Definition</b>
    <blockquote><i>function getRootNode()</i></blockquote>
    <b>Return Values</b>
    <blockquote><table class="scripting">
        <tbody><tr><td><i>integer</i></td><td><i>rootNodeId</i></td><td>id of the root node</td></tr>
    </tbody></table></blockquote>
</div>
The descriptions of the functions are quite self-explanatory and can be really 
helpful.<br>
<br>
It's important to see that the GIANTS engine works with ids also called handles.
This function returns the id from the root node of your root scene graph.<br>
<br>
Your entire world is attached to this root node. Each object you want to see 
later on must be a child of this root node.<br>
<br>
Now we need to load the i3d that contains the cube we want to rotate later on.<br> 
<br>
<i>&nbsp;local sceneToLoad = loadI3DFile("sample/i3dLoading/cube.i3d");</i><br>
<br>
With this function, you load an i3d file, and its id (which is an integer) is 
returned. Now that we’ve got both things, the worldRootNode and the i3d we 
want to load, we have to link them together, which is the next line of code.<br>
<br>
<i>&nbsp;link(getRootNode(), sceneToLoad);</i><br>
<br>
Now we want the cube's id to rotate. Be aware that the i3d we've already loaded 
is the whole scene which contains not only the cube, but also a light and the 
camera. So now we need to know which id the cube has. Since the cube is a child 
of the i3d we can use the following function:<br>
<br>
<i>&nbsp;cubeId = getChildAt(sceneToLoad, 0);</i><br>
<br>
First you name the i3d that  you want the child from and then you say which 
child you want. 0 is the first child, 1 is the second. You need to know which 
child is your cube. Just open the cube .i3d with the Editor and you can see 
that the cube is the first position in your scenegraph (reading from top 
down)<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/tutorial01_scenegraph.png" alt="Scenegraph"><br>
<br>
A very important thing you need in programming are prints. The function needed 
here is simply called print(). The thing you want to print are the parameters. 
Be careful with strings, they always need quotes. You can link strings and 
variables by using .. as shown in the example.<br>
<br>
<i>&nbsp;print("this is a print: cube id: " .. cubeId);</i><br>
<br>
You can see the printed text in the in game console. Just press tilde '~' to 
make the console visible.<br>
<br>
Now we have all the information we need, but one thing remains to be done. 
Since the camera is located right in the center (inside the cube actually) 
we won’t be able to see anything. So we grab the camera and move it a bit. 
With the getCamera() function we first get the id of the camera, because the 
setTranslation function needs to know which id has to be translated. The next 
parameters are the desired x, y, z values.<br>
<br>
<i>&nbsp;setTranslation(getCamera(), 5, 10.0, 10.0);</i><br>
<br>
Then we rotate the camera so that we can see our cube nicely. The function is 
similar to the setTranslation but you define the rotations around the three 
axes of course. You need a radian value, that’s why the functions math.rad() 
are used. They convert a degree value into a radian value.<br>
<br>
<i>setRotation(getCamera(), math.rad(-45), math.rad(20), 0);</i><br>
<br>
<h2>mouseEvent()</h2>
We don’t use this function right now, but of course you can access the mouse 
commands with it.<br>
<br>
<div class="code">
    function mouseEvent(posX, posY, isDown, isUp, button)<br>
    end;<br>
</div>
<br>
<h2>keyEvent()</h2>
This function is used to access any keyboard commands. In this case, we only 
want to know if the escape key is pressed. If this is the case, then the 
program closes with the command requestExit();<br>
<br>
<div class="code">
    function keyEvent(unicode, sym, modifier, isDown)<br>
    &nbsp;-- Check for escape key<br>
    &nbsp;if sym == Input.KEY_esc and isDown == true then<br>
    &nbsp;&nbsp;-- Request quit<br>
    &nbsp;&nbsp;requestExit();<br>
    &nbsp;end;<br>
    end;<br>
</div>
<br>
<h2>update(dt)</h2>
The update function is a function that is called after every frame. The 
parameter dt is the time that has passed since the last update call in 
milliseconds.<br> 
<br>
So, this is the place where we can finally make our cube rotate. For this we 
use the rotate(dt) function. It needs the id of the object that should rotate, 
in this case the cubeId, and also the rate of rotation on the x, y and z-axis. 
We just let it rotate on the x-axis with the value of 0.08 degree per 
millisecond.<br>
<br>
<div class="code">
    function update(dt)<br>
    &nbsp;rotate(cubeId, math.rad(0.08)*dt, 0, 0);<br>
    end;<br>
</div>
<br>
<h2>draw()</h2>
The draw function is needed to draw something onto the screen. This will be 
discussed later on.<br>
<br>
<div class="code">
    function draw()<br>
    end;<br>
</div><h2 id="tutorial02" style="page-break-before: always;">Tutorial 2 - Light functions, global time and rendering text</h2>
w<b>Sample name:</b> SampleLighting<br>
<b>Script source code file:</b> <i>sample/lighting/main.lua</i><br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/SampleLighting.jpg" alt="SampleLighting"><br>
<br>
<b>The goal of this tutorial is to show you</b><br>
<ul>
    <li>how to manipulate lights in your scene</li>
    <li>how to handle time</li>
    <li>how to print a text on the screen</li>
</ul>

<b>New functions in this tutorial</b><br>
<br>
<i>setLightDiffuseColor()</i><br>
<i>getLightDiffuseColor()</i><br>
<i>setLightRange()</i><br>
<i>getLightRange()</i><br>
<i>renderText()</i><br>
<br>
The first thing you might notice is that there are two new additional variables 
that we’re going to use:<br>
<i>&nbsp;local globalTime = 0;</i><br>
<i>&nbsp;local lightRadius = 7;</i><br>
<br>
In this, and also in further tutorials, we will just cover the new functions 
and variables. So, if there is anything you don’t understand, have a look at  
<a href="http://gdn.giants-software.com/tutorial01.php">Tutorial 1</a>.<br>
<br>
<h2>init()</h2>
In the init() function we additionally store the id of the point light in the 
variable pointLightId.<br>
<br>
<i>&nbsp;pointLightId = getChildAt(id, 2);</i><br>
<br>
When you open the i3d file cubeWithPointLight.i3d, you can see that the light 
is in third position. Since the function getChildAt()starts counting from 0, 
the argument 2 points to the third child.<br>
<br>
Set the light radius to an initial value of 7.<br>
<br>
<i>&nbsp;setLightRange(pointLightId, lightRadius);</i><br>
<br>
<h2>keyEvent()</h2>
Here are two more keys: Key 1 and Key 2. When they are pressed, the functions 
decreaseLightRadius and increaseLightRadius are called.<br>
<br>
<div class="code">
    if sym == Input.KEY_1 and isDown == true then<br>
    &nbsp;decreaseLightRadius();<br>
    end;<br>
    <br>
    if sym == Input.KEY_2 and isDown == true then<br>
    &nbsp;increaseLightRadius();<br>
    end;<br>
</div>
<br>
increase- decreaseLightRadius()<br>
These two functions change the variable lightRadius by 0.5 and then call the 
lightRadius function with the new value.<br>
<br>
<div class="code">
    function increaseLightRadius()<br>
    &nbsp;lightRadius = lightRadius + 0.5<br>
    &nbsp;setLightRange(pointLightId,lightRadius);<br>
    end;<br>
</div>
<h2>update(dt)</h2>
Two variables are new here:<br>
<br>
Why do we need a globalTime here? Well, we want the light to rotate around the 
cube. Therefore, we need a value that constantly changes in corrrespondence 
with time. Of course you could also increase a number every frame, but since 
the framerate isn’t constant we also use the time which has passed since the 
last frame and thus get an exact and constantly growing number that isn’t 
affected by the different framerates. Remember that dt is the time passed 
between the last and the actual frame in milliseconds. So, if dt is multiplied 
by 0.001 you get seconds. We also need a distance to the center which is 
stored in the variable radius.<br>
<br>
<i>&nbsp;globalTime = globalTime+dt*0.001;</i><br>
<i>&nbsp;local radius = 2;</i><br>
<br>
This function handles the translation of the pointLight using the globalTime 
and the radius 2.<br>
<br>
<i>&nbsp;setTranslation(pointLightId, math.sin(globalTime)*radius, 3, math.cos(globalTime)*radius);</i><br>
<br>
We also change the color of the diffuse color of the light. This is done with 
the setLightDiffuseColor() function. As arguments it uses the id, and then the 
three values for red, green and blue as floats between 0 and 1. As r we use 
the sinus of the globalTime.<br>
<br>
<i>&nbsp;setLightDiffuseColor(pointLightId, math.sin(globalTime), 0.4, 0.2);</i><br>
<br>
When you execute the program, you see that there is a white box where the point 
light is. This may seem a bit odd since you probably don’t want this cube to be 
visible at all. When you open the file cubeWithPointLight.i3d and click on the 
plus left of the light in the scene graph, you see that we have attached a 
little cube to the light. We have done this to to give you a better visual 
feedback on where the pointLight is. On top of that, it shows also another 
important thing: as a child it inherits the translations of the parent and 
thus also moves with it.<br>
<br>
<h2>draw()</h2>
Like the update function, the draw function is executed after every frame.<br>
<br>
First we store the rgb values of the pointLight using the getLightDiffuseColor() 
function. It returns three different values. So be careful, you need to 
separate the different variables by commas!<br>
<br>
<i>&nbsp;local r, g, b = getLightDiffuseColor(pointLightId);</i><br>
<br>
Then we use the function renderText() to render the result directly onto the screen.<br>
<br>
<div style="color:blue;">
    <h3>renderText</h3>
    <b>Description</b>
    <blockquote>Render text to viewport</blockquote>
    <b>Definition</b>
    <blockquote><i>function renderText(float x, float y, float size, string str)</i></blockquote>
    <b>Arguments</b>
    <blockquote><table class="scripting">
        <tbody><tr><td><i>float</i></td><td><i>x</i></td><td>x position [0, 1]</td></tr>
        <tr><td><i>float</i></td><td><i>y</i></td><td>y position [0, 1]</td></tr>
        <tr><td><i>float</i></td><td><i>size</i></td><td>font size</td></tr>
        <tr><td><i>string</i></td><td><i>str</i></td><td>string to print</td></tr>
    </tbody></table></blockquote>
</div>

When using renderText you can also weld parts together with the .. operator to 
concatenate variables and strings like in the example.<br>
<br>
<i>&nbsp;renderText(0,0.95,0.05,"r value: " .. r);</i><br>
<i>&nbsp;renderText(0,0.90,0.05,"g value: " .. g);</i><br>
<i>&nbsp;renderText(0,0.85,0.05,"b value: " .. b);</i><br>
<br>
The next line stores the value of the getLightRange() function in the 
lightRadius variable<br>
<br>
<i>&nbsp;local lightRadius = getLightRange(pointLightId);</i><br>
<br>
and then the variable is rendered onto the screen:<br>
<br>
<i>&nbsp;renderText(0,0.75,0.05,"LightRadius: " .. lightRadius);</i><br>
<br>
With the last line we simply render the globalTime. Since it is a float we use 
math.floor to get an integer.<br>
<br>
<i>&nbsp;renderText(0,0.65,0.05,"seconds: " .. math.floor(globalTime));</i><br>

<h2 id="tutorial03" style="page-break-before: always;">Tutorial 3 - Using user attributes</h2>
<b>Sample name:</b> SampleUserAttributes<br>
<b>Script source code file:</b> <i>sample/userAttributes/main.lua</i><br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/SampleUserAttributes.jpg" alt="SampleUserAttributes"><br>
<br>
<b>The goal of this tutorial is to show you</b><br>
<ul>
    <li>how to create user attributes</li>
    <li>how to access user attributes from script</li>
    <li>how to use the onCreate script callback</li>
</ul>

<b>New functions in this tutorial</b><br>
<br>
<i>getUserAttribute()</i><br>
<i>setUserAttribute()</i><br>
<i>setScale()</i><br>
<i>translate()</i><br>
<br>
Open sceneWithUserAttributes.i3d and main.lua which are located in 
\sample\userAttributes.<br>
<br>
Run the sample SampleUserAttributes.exe. You see three cubes with different 
scales and one cube that is rotating. If you press 1,2 or 3, the related cube 
is translated onto the y-axis and the number of translations is also 
displayed.<br>
<br>
If you look at sceneWithUserAttributes.i3d in the editor, you will see, that 
all three cubes in the back have the same size.
Open the User Attributes window.<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/tutorial03_editor.png" alt="Editor"><br>
<br>
In the User Attributes window you see the name of your object, followed by the 
user attributes and at the bottom there is the possibility to create new 
attributes. Select the different objects to see what kind of user attributes 
they have.<br>
<br>
You’ll notice that both cubes in the back have two user attributes labeled 
count and size. The bigger cube in the front only has an onCreate script 
callback.<br>
<br>
<b>How to create new user attributes</b><br>
To create your own attributes, just enter the name of your attribute and then 
choose the according type of your attribute. You can choose whether your 
attribute is a boolean, integer, float, a string or a script callback. Then 
hit add and your attribute will appear.<br>
<br>
Let’s have a look at the LUA code in main.lua. The very first line of code is 
the creation of an empty array called cubeIdArray.<br>
<br>
<h2>init()</h2>
<br>
You should be familiar with the first two lines, otherwise have a look at 
<a href="http://gdn.giants-software.com/tutorial01.php">Tutorial 1</a>.<br>
What follows is a for loop from 0 to 2 where the array cubeIdArray is filled 
up with three new arrays containing the cubeIds of the three cubes.<br>
<br>
Then the variable size gets filled with the result of the getUserAttributes 
function. The getUserAttributes function needs the id of the object and the 
name of the attribute as arguments. Be careful here, the name has to be exactly 
the same as you have specified in the editor.<br>
<br>
Finally, there is a check whether size has a value and then the function 
setScale is used to scale the cube accordingly. Try to enter new size values 
in the i3d and then see the result by running the program.<br>
<br>
<div class="code">
    for&nbsp;index=0,&nbsp;2&nbsp;do<br>
    --&nbsp;Get&nbsp;current&nbsp;cube&nbsp;id&nbsp;and&nbsp;store&nbsp;it&nbsp;for&nbsp;later<br>
    local&nbsp;cubeId&nbsp;=&nbsp;getChildAt(i3dRoot,&nbsp;index);<br>
    &nbsp;&nbsp;&nbsp;cubeIdArray[index]&nbsp;=&nbsp;{};<br>
    &nbsp;&nbsp;&nbsp;cubeIdArray[index].id&nbsp;=&nbsp;cubeId;<br>
    <br>
    &nbsp;&nbsp;&nbsp;--&nbsp;Get&nbsp;scale&nbsp;value&nbsp;from&nbsp;user&nbsp;attributes<br>
    &nbsp;&nbsp;&nbsp;local&nbsp;size&nbsp;=&nbsp;getUserAttribute(cubeId,&nbsp;"size");<br>
    &nbsp;&nbsp;&nbsp;if&nbsp;size&nbsp;~=&nbsp;nil&nbsp;then<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Set&nbsp;scale&nbsp;of&nbsp;current&nbsp;cube<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setScale(cubeId,&nbsp;size,&nbsp;size,&nbsp;size);<br>
    &nbsp;&nbsp;&nbsp;end;<br>
    end;<br>
</div>
<br>
<h2>keyEvent()</h2>
<br>
First we check if esc is pressed.<br>
<br>
Then, if the keys 1,2 or 3 are pressed, the rest of the code is executed. The 
id of the corresponding cube is stored within the variable cubeId. Then the 
count of the cube is stored in the variable count by using the return value 
of the function <b>getUserAttribute</b>. If the count isn’t nil, the count is 
increased by one using the <b>setUserAttribute</b> function.<br>
<br>
The setUserAttribute function can either be used to create new attributes or 
to overwrite values of existing attributes. It uses the id of the object 
(cubeId), the name of the attribute("count"), the data type(Integer) and the 
new value as arguments(count+1). Finally, the corresponding cube is translated 
onto the y-axis with the value 0.1 using the translate function.<br>
<br>
<div class="code">
    if isDown == true then<br>
    <br>
    &nbsp;&nbsp;-- Check for escape key<br>
    &nbsp;&nbsp;if sym == Input.KEY_esc then<br>
    &nbsp;&nbsp;&nbsp;-- Request quit<br>
    &nbsp;&nbsp;&nbsp;requestExit();<br>
    &nbsp;&nbsp;end;<br>
    <br>
    &nbsp;&nbsp;-- Check for key 1 to 3<br>
    &nbsp;&nbsp;if sym &gt;= Input.KEY_1 and sym &lt;= Input.KEY_3 then<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;-- Get id of current cube<br>
    &nbsp;&nbsp;&nbsp;&nbsp;local cubeId = cubeIdArray[sym-Input.KEY_1].id;<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;-- Get count user attribute<br>
    &nbsp;&nbsp;&nbsp;&nbsp;local count = getUserAttribute(cubeId, "count");<br>
    &nbsp;&nbsp;&nbsp;&nbsp;if count ~= nil then<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-- Set count user attribute<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setUserAttribute(cubeId, "count", "Integer", count+1);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-- Translate cube a bit<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;translate(cubeId, 0, 0.1, 0);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;end;<br>
    <br>
    &nbsp;&nbsp;end;<br>
    <br>
    end;<br>
</div>
<br>
<h2>cubeOnCreate(id)</h2>
<br>
This function isn't called anywhere in the LUA code. So what is it used for? 
As soon as the cube in the front gets loaded, its attribute script callback 
causes the function cubeOnCreate to run once. The script also provides the id 
of the object that caused the script callback. Be careful with the spelling, 
the function in your LUA script has to be exactly the same as your 
ScriptCallback in the i3d. What we do in the cubeOnCreate function is quite 
simple: we store the id in the new variable rotatingCubeId.<br>
<br>
<div class="code">
    function cubeOnCreate(id)<br>
    &nbsp;&nbsp;-- Store the id for later<br>
    &nbsp;&nbsp;rotatingCubeId = id;<br>
    end;<br>
</div>
<br>
<h2>update(dt)</h2>
<br>
Here we first check if rotatingCubeId exists and then we rotate the cube using 
the rotate function with the id we stored in the variable rotatingCubeId.<br>
<br>
<div class="code">
    function update(dt)<br>
    <br>
    &nbsp;&nbsp;-- Rotate cube3<br>
    &nbsp;&nbsp;if rotatingCubeId ~= nil then<br>
    &nbsp;&nbsp;&nbsp;&nbsp;rotate(rotatingCubeId, 0, 0.05, 0);<br>
    &nbsp;&nbsp;end;<br>
    <br>
    end;<br>
</div>
<br>
<h2>draw()</h2>
<br>
Here you can see how flexibly you can use the renderText function: using it 
within a for loop, for  welding text and variables as well as for calling 
functions like the getUserAttributes in this case.<br>
<br>
<div class="code">
    function draw()<br>
    <br>    
    &nbsp;&nbsp;for index=0, 2 do<br>
    &nbsp;&nbsp;&nbsp;&nbsp;renderText(0,0.95-index*0.05, 0.04,"Cube " .. index .. ": "<br>
    &nbsp;&nbsp;&nbsp;&nbsp;.. getUserAttribute(cubeIdArray[index].id, "count") .. " press key " .. index+1);<br>
    &nbsp;&nbsp;end;<br>
    <br>
    end;<br>
</div><h2 id="tutorial04" style="page-break-before: always;">Tutorial 4 - Using timers</h2>
<b>Sample name:</b> SampleTimer<br>
<b>Script source code file:</b> <i>sample/timer/main.lua</i><br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/SampleTimer.jpg" alt="SampleTimer"><br>
<br>
<b>The goal of this tutorial is to show you</b><br>
<ul>
    <li>how to create and use timers</li>
</ul>

<b>New functions in this tutorial</b><br>
<br>
<i>addTimer()</i><br>
<i>setTimerTime()</i><br>
<i>removeTimer()</i><br>
<br>
Run the sample SampleTimer.exe. Only three lines of text are rendered. The 
first shows you a random timer interval, the second is a string that says 
that you can remove the timer with the space key and finally, there is a 
line showing a flashing text :"Timer called".<br>
<br>
Before we start looking at the code we should get a rough idea about what a 
timer is, and what functionalities it has.<br>
<br>
A timer is a simple object that has a certain set time and the name of the 
callback function. As soon as the timer is activated, the defined time is 
counted down to zero.  When this happens, the timer calls the callback 
function. This behavior can be used in various situations, for instance if 
a trigger shouldn’t react immediately but only after a certain delay.<br>
<br>
Open the the main.lua which is located in the directory /sample/timer.<br>
<br>
At first, four variables are defined:<br>
<br>
<div class="code">
    timerId = 0;<br>
    timerInterval = 0;<br>
    renderCount = 0;<br>
    timerRemoved = false;<br>
</div>
<br>
<h2>init()</h2>
<br>
In the init function the first line calls the function setRandomTimerInterval. 
This function simply generates a random value between 1000 and 5000 for the 
variable timerInterval.<br>
<br>
<div class="code">
    function setRandomTimerInterval()<br>
    &nbsp;&nbsp;timerInterval = math.random(1000, 5000);<br>
    end;<br>
</div>
<br>
The variable timerInterval is used immediately because a new timer is created 
with the line:<br>
<br>
<i>&nbsp;timerId = addTimer(timerInterval, "onTimer");</i><br>
<br>
The variable timerId stores the Id of the new timer which is returned by the 
function addTimer. Here is how this function is described in the 
documentation:<br>
<br>
<div style="color:blue;">
    <h3>addTimer</h3>
    <b>Description</b>
    <blockquote>Adds timer callback function</blockquote>
    <b>Definition</b>
    <blockquote><i>function addTimer(float time, string timerFunctionCallback, object instance)</i></blockquote>
    <b>Arguments</b>
    <blockquote><table class="scripting">
        <tbody><tr><td><i>float</i></td><td><i>time</i></td><td>time in milliseconds</td></tr>
        <tr><td><i>string</i></td><td><i>triggerFunctionCallback</i></td><td>trigger function callback</td></tr>
        <tr><td><i>object</i></td><td><i>instance</i></td><td>instance object (optional)</td></tr>
    </tbody></table></blockquote>
    <b>Return Values</b>
    <blockquote><table class="scripting">
        <tbody><tr><td><i>integer</i></td><td><i>timerId</i></td><td>timer id</td></tr>
    </tbody></table></blockquote>
</div>
The first argument is the time in milliseconds and the second argument is the 
function that is called when the time reaches zero. In this case, the variable 
timerInterval defines how long the timer will wait, until it calls its callback 
function. After this time, the function onTimer is called.<br>
<br>
<h2>keyEvent()</h2>
<br>
If you hit the space key the timer is removed and the boolean timerRemoved is 
switched to true.<br>
<br>
<div class="code">
    if sym == Input.KEY_space then<br>
    &nbsp;&nbsp;-- Remove timer<br>
    &nbsp;&nbsp;removeTimer(timerId);<br>
    &nbsp;&nbsp;timerRemoved = true;<br>
    end;<br>
</div>
<br>
<h2>onTimer()</h2>
<br>
This function is called as soon as the timer reaches zero.<br>
<br>
The first line defines the variable renderCount to be 100. This defines the 
number of frames the line "timer called" is rendered in the draw function 
later on.<br>
<br>
The second line defines a new timerInterval by calling the 
setRandomTimerInterval function again.<br>
<br>
The third line sets a new timer time with the new timerInterval time. The 
setTimerTime function needs the id of the timer (timerId) and the new time 
(timerInterval). After the timer reaches zero again, the onTimer function is 
called again. You can remove a timer within the callback function by returning 
false.<br>
<br>
<div class="code">
    -- Timer callback<br>
    function onTimer()<br>
    &nbsp;&nbsp;renderCount = 100;<br>
    &nbsp;&nbsp;setRandomTimerInterval();<br>
    &nbsp;&nbsp;setTimerTime(timerId, timerInterval);<br>
    &nbsp;&nbsp;return true;<br>
    end;<br>
</div>
<br>
<h2>draw()</h2>
<br>
First we have an if-else construct that handles the two states, i.e. whether 
the timer is removed or not. Depending on the state of the boolean 
timerRemoved, the different renderText functions are executed.<br>
<br>
The string "timer called" is only called if the variable renderCount is not 
zero. Remember that we set the renderCount to 100 in the onTimer function 
which is the trigger callback of the timer. With each frame the renderCount 
is decreased by 1. <br>
<br><h2 id="tutorial05" style="page-break-before: always;">Tutorial 5 - Objects with physics</h2>
<b>Sample name:</b> SamplePhysics<br>
<b>Script source code file:</b> <i>sample/physics/main.lua</i><br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/SamplePhysics.jpg" alt="SamplePhysics"><br>
<br>
<b>The goal of this tutorial is to show you</b><br>
<ul>
    <li>the difference between rigid body and no rigid body</li>
    <li>the difference between static, kinematic and dynamic objects</li>
    <li>how to create objects with physical behavior</li>
</ul>
<br>
Basically, there are two different types of objects available. Objects with 
rigid body and objects without rigid body.<br>
<br>
<h2>No rigid body</h2>
<br>
Objects with no rigid body are only rendered. They can be moved freely and 
they don’t cause any collision, thus other objects can move through them. 
These objects only use a minimum of the engine's performance. If you export 
a new object from Maya without having changed the attributes, the rigid body 
is activated by default. You should turn it off in the editor, when you don’t 
need it.<br>
<br>
<h2>Rigid body</h2>
<br>
Objects with rigid body behave like real objects. If another object with rigid 
body tries to go trough it, there will be a collision. Since the used up power 
of this behavior has to be calculated, it should only be used when necessary. 
There are three rigid body types:<br>
<br>
<h3>Static</h3>
These objects offer collision, but they can’t be moved, nor do they react to 
gravity.<br>
<br>
<h3>Kinematic</h3>
These objects offer collisions with dynamic objects and can be moved in a 
predefined way. E.g. if you have a train that goes from A to B along a 
predefined path and a collision occurs with a kinematic object, the train 
will simply continue its movement, while the dynamic object will be pushed 
away. If the same train hits a static or another kinematic object, nothing 
will happen.<br>
<br>
<h3>Dynamic</h3>
This kind of objects react dynamically to collisions and can't be moved 
manually. The movement of dynamic objects is a result of external forces and 
isn’t predefined.<br>
<br>
Run SamplePhysics.exe.<br>
<br>
Since it is self-explanatory, just open the sceneWithPhysics.i3d which is 
located in /sample/physics to see how it is done.<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/tutorial05_editor.png" alt="Editor"><br>
<br>
You probably need to zoom out a bit to see the whole scene.<br>
<br>
Select the different objects and look at the Rigid Body Type in the red marked 
area. In this scene all objects are rigid bodies, but the Rigid Body Type is 
different, depending on how their physics should react.<br>
<br>
If you want to select a cube which is within the sphere of the 
multi-selection-tool, you’ll first have to select something that is a bit 
further away.<br>
<br>
Try to change the Rigid Body Type of the different objects and see what 
happens, when you run the program. To change it, simply open the dropdown 
menu and select the desired Rigid Body Type. Hit enter, and don’t forget to 
save your scene.<br>
<br>
Instead of defining the physical behavior of an object in the editor, you 
could specify these settings directly in Maya. Launch the i3d exporter and 
open the attributes panel where you can see all the Rigid Body options 
available. Just select the desired mesh, click <i>Load Current</i> and then set 
the Rigid Body settings as you wish. Don’t forget to click <i>Save Current</i> 
when you've done it. If you export the mesh as an i3d file, the rigid body 
settings are already included. This method has the advantage that attributes 
defined in Maya remain in the saved scene file. If you export the same scene 
more than once, you might save time by defining it once in Maya instead of 
redoing it every time in the editor.<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/tutorial05_maya.png" alt="Maya"><br><h2 id="tutorial06" style="page-break-before: always;">Tutorial 6 - Rendering overlays</h2>
<b>Sample name:</b> SampleOverlay<br>
<b>Script source code file:</b> <i>sample/overlay/main.lua</i><br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/SampleOverlay.jpg" alt="SampleOverlay"><br>
<br>
<b>The goal of this tutorial is to show you</b><br>
<ul>
    <li>how overlays work</li>
    <li>how to create overlays</li>
</ul>

<b>New functions in this tutorial:</b><br>
<br>
<i>createOverlay()</i><br>
<i>setOverlayColor()</i><br>
<i>renderOverlay()</i><br>
<br>
When you run sampleOverlay.exe you see an overlay displayed on the screen. If 
you click on it, its position changes randomly.<br>
<br>
Open main.lua which is in /sample/overlay to take a look at the code.<br>
<br>
First there are three variables: overlayId holds the id of the overlay, 
overlayX and overlayY are used to define the position of the overlay.<br>
<br>
<h2>init()</h2>
<br>
In the first line, the variable overlayId is filled with the result of the 
function createOverlay which returns the id of the newly created overlay. The 
documentation describes the createOverlay functions as follows:<br>
<br>
<div style="color:blue;">
    <h3>createOverlay</h3>
    <b>Description</b>
    <blockquote>Create overlay object</blockquote>
    <b>Definition</b>
    <blockquote><i>function createOverlay(string overlayName, string textureFilename)</i></blockquote>
    <b>Arguments</b>
    <blockquote><table class="scripting">
        <tbody><tr><td><i>string</i></td><td><i>overlayName</i></td><td>overlay name</td></tr>
        <tr><td><i>string</i></td><td><i>textureFilename</i></td><td>texture file name</td></tr>
    </tbody></table></blockquote>
</div>
<br>
Take note that you have to use the relative path to your file.<br> 
<br>
&nbsp;<i>overlayId = createOverlay("overlay", "sample/overlay/overlay.png");</i><br> 
<br>
The second line consists of the setOverlayColor function.<br>
Try to comment it out by adding -- in front of the line. Save the script and 
run the program. You see that this sample also works without the 
setOverlayColor function. It isn’t needed to display an overlay, but it gives 
you the possibility to change its appearance. Here is how it is described in 
the documentation:<br>
<br>
<div style="color:blue;">
    <h3>setOverlayColor</h3>
    <b>Description</b>
    <blockquote>Set overlay color</blockquote>
    <b>Definition</b>
    <blockquote><i>function setOverlayColor(integer overlayId, float red, float green, float blue, float alpha)</i></blockquote>
    <b>Arguments</b>
    <blockquote><table class="scripting">
        <tbody><tr><td><i>integer</i></td><td><i>overlayId</i></td><td>overlay id</td></tr>
        <tr><td><i>float</i></td><td><i>red</i></td><td>red value</td></tr>
        <tr><td><i>float</i></td><td><i>green</i></td><td>green value</td></tr>
        <tr><td><i>float</i></td><td><i>blue</i></td><td>blue value</td></tr>
        <tr><td><i>float</i></td><td><i>alpha</i></td><td>alpha value</td></tr>
    </tbody></table></blockquote>
</div>
<br>
The used arguments in the example result in white with an opacity of 0.75.<br> 
<br>
&nbsp;<i>setOverlayColor(overlayId, 1, 1, 1, 0.75);</i><br>
<br>
Try the arguments 1, 0, 0, 0.75, to see the difference.<br>
<br>
<h2>mouseEvent()</h2>
<br>
This function runs every time you move the mouse or click on it. If the mouse 
is inactive this function isn’t executed. It provides the position of the 
cursor, and the state of the buttons which can be used within the function.<br>
We first check, if the state of a mouse button is down, which is done by the 
isDown part of the if-construct. The rest of the if-construct is a simple hit 
test, it checks whether the cursor is within the overlay or not. If the 
if-construct returns true, you have clicked on the button. Then the overlayX 
and overlayY values are overwritten with a random number between 0.05 and 
0.8.<br>
<br>
<div class="code">
    function mouseEvent(posX, posY, isDown, isUp, button)<br>
    &nbsp;&nbsp;-- Check if overlay has been clicked<br>
    &nbsp;&nbsp;if isDown and posX &gt; overlayX and posX &lt; overlayX+0.16 and <br>
    &nbsp;&nbsp;&nbsp;&nbsp;posY &gt; overlayY and posY &lt; overlayY+0.04 then<br>
    &nbsp;&nbsp;&nbsp;&nbsp;overlayX = math.random(50, 800)/1000;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;overlayY = math.random(50, 900)/1000;<br>
    &nbsp;&nbsp;end;
    end;
</div>
<br>
<h2>draw()</h2>
<br>
What happens here is essential : try commenting out the renderOverlay function 
once. If you run the sample now, nothing will be rendered at all. This function 
is needed to render an overlay. This allows you to display or hide components 
(e.g. menu options) depending on the state of your program.<br>
<br>
Here is how the function is described in the documentation:<br>
<br>
<div style="color:blue;">
    <h3>renderOverlay</h3>
    <b>Description</b>
    <blockquote>Render overlay</blockquote>
    <b>Definition</b>
    <blockquote><i>function renderOverlay(integer overlayId, float x1, float y1, float width, float height)</i></blockquote>
    <b>Arguments</b>
    <blockquote><table class="scripting">
        <tbody><tr><td><i>integer</i></td><td><i>overlayId</i></td><td>overlay id</td></tr>
        <tr><td><i>float</i></td><td><i>x</i></td><td>x position [0,1]</td></tr>
        <tr><td><i>float</i></td><td><i>y</i></td><td>y position [0,1]</td></tr>
        <tr><td><i>float</i></td><td><i>width</i></td><td>width [0,1]</td></tr>
        <tr><td><i>float</i></td><td><i>height</i></td><td>height [0,1]</td></tr>
    </tbody></table></blockquote>
</div>
<br>
A width and height of 1 means that the overlay has exactly the size of the screen.<br>
<br>
Since overlayX and overlayY change when you click on the overlay, it is 
instantly rendered in the new position.<br>
<br>
<div class="code">
    function draw()<br>
    &nbsp;&nbsp;-- Render overlay<br>
    &nbsp;&nbsp;renderOverlay(overlayId, overlayX, overlayY, 0.16, 0.04);<br>
    end;<br>
</div>
<br>

<h2 id="tutorial07" style="page-break-before: always;">Tutorial 7 - Playing audio samples</h2>
<b>Sample name:</b> SampleAudio<br>
<b>Script source code file:</b> <i>sample/audio/main.lua</i><br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/SampleAudio.jpg" alt="SampleAudio"><br>
<br>
<b>The goal of this tutorial is to show you</b><br>
<ul>
    <li>how to use audio samples</li>
    <li>the difference between 2d and 3d sounds</li>
</ul>
<b>New functions in this tutorial</b><br>
<br>
<i>createSample()</i><br>
<i>loadSample()</i><br>
<i>playSample()</i><br>
<br>
Run sampleAudio.exe. Every two seconds you should hear a "pling" and if you 
press space you should hear a water splash.<br>
<br>
Open main.lua which is in /sample/audio to see the code of this example.<br>
<br>
First there are three variables: time, sample1Id and sample2Id<br>
<br>
<h2>init()</h2>
<br>
The first line creates a sample using the createSample function and stores the 
id in the variable sample1Id. The only argument here is the name of the 
sample.<br>
<br>
&nbsp;<i>sample1Id = createSample("sample1");</i><br>
<br>
The sample is like an empty shell which needs filling with an audio file. 
That’s what the second line does. It needs the id of the sample and the 
filename as arguments. The last argument is a boolean and defines whether 
your sound is 3D or not.<br>
<br>
3D sounds can be placed in your scene. They are surrounded by a sphere which 
defines the distance over which the sound can be heard. The closer you get to 
the sound the louder it is.<br>
<br>
A 2D sound simply plays at full volume when it is triggered.<br>
<br>
For the filename you need to indicate the relative path.<br>
<br>
&nbsp;<i>loadSample(sample1Id, "sample/audio/sample1.wav", false);</i><br>
<br>
<h2>keyEvent()</h2>
<br>
If you press the space key, the sample2 is played via the playSample function. 
Here is how this function is described in the documentation:<br>
<br>
<div style="color:blue;">
    <h3>playSample</h3>
    <b>Description</b>
    <blockquote>Play sample object</blockquote>
    <b>Definition</b>
    <blockquote><i>function playSample(integer objectId, integer loops, float volume, float offset)</i></blockquote>
    <b>Arguments</b>
    <blockquote><table class="scripting">
        <tbody><tr><td><i>integer</i></td><td><i>objectId</i></td><td>id of sample object</td></tr>
        <tr><td><i>integer</i></td><td><i>loops</i></td><td>number of loops [0,n] 0 = endless looping</td></tr>
        <tr><td><i>float</i></td><td><i>volume</i></td><td>volume [0,1]</td></tr>
        <tr><td><i>float</i></td><td><i>offset</i></td><td>offset in milliseconds</td></tr>
    </tbody></table></blockquote>
</div>
<br>
The offset defines from which position within the sample it starts playing. 
E.g. if you define an offset of 3000, the first three seconds of your sample 
are cut off the first time the sample gets played.<br>
<br>
<div class="code">
    if sym == Input.KEY_space then<br>
    &nbsp;&nbsp;playSample(sample2Id, 1, 1, 0);<br>
    end;<br>
</div>
<br>
<h2>update()</h2>
<br>
First the time is increased and if it is larger than 2000 milliseconds the 
sample1 is played and the time is reset to 0.<br>
<br>
<div class="code">
    function update(dt)<br>
    <br>
    &nbsp;&nbsp;time = time + dt;<br>
    <br>    
    &nbsp;&nbsp;if time &gt; 2000 then<br>
    &nbsp;&nbsp;&nbsp;&nbsp;playSample(sample1Id, 1, 1, 0);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;time = 0;<br>
    &nbsp;&nbsp;end;<br>
    end;<br>
</div>
<br>
<h1 id="scripting" style="page-break-before:always">Scripting</h1>
<a name="runtime_function_reference"></a><h2>Function Reference</h2>

<a name="runtime_function_reference_general"></a><h2>General Function Reference</h2>
<br>

<a name="print"></a>
        <h3>print</h3>
        <b>Description</b>
        <blockquote>Print to console</blockquote>
        <b>Definition</b>
<blockquote><i>print(any type arg1,any type ...)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>any type</i></td>
                <td><i>arg1</i></td>
                <td></td>
                </tr>
<tr>
                <td><i>any type</i></td>
                <td><i>...</i></td>
                <td></td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="source"></a>
        <h3>source</h3>
        <b>Description</b>
        <blockquote>Source script file</blockquote>
        <b>Definition</b>
<blockquote><i>source(string filename,ref environment)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>filename</i></td>
                <td>name of script file</td>
                </tr>
<tr>
                <td><i>ref</i></td>
                <td><i>environment</i></td>
                <td>ref to custom environment</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="requestExit"></a>
        <h3>requestExit</h3>
        <b>Description</b>
        <blockquote>Request application to exit at the end of this frame</blockquote>
        <b>Definition</b>
<blockquote><i>requestExit()</i></blockquote>
<br><br><br><br><a name="drawDebugPoint"></a>
        <h3>drawDebugPoint</h3>
        <b>Description</b>
        <blockquote>Render a point. Only use for debug rendering</blockquote>
        <b>Definition</b>
<blockquote><i>drawDebugPoint(float x,float y,float z,float r,float g,float b,float a)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>r</i></td>
                <td>red color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g</i></td>
                <td>green color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b</i></td>
                <td>blue color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>a</i></td>
                <td>alpha color component [0, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="drawDebugLine"></a>
        <h3>drawDebugLine</h3>
        <b>Description</b>
        <blockquote>Render a line. Only use for debug rendering</blockquote>
        <b>Definition</b>
<blockquote><i>drawDebugLine(float x0,float y0,float z0,float r0,float g0,float b0,float x1,float y1,float z1,float r1,float g1,float b1)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x0</i></td>
                <td>start x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y0</i></td>
                <td>start y position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z0</i></td>
                <td>start z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>r0</i></td>
                <td>start red color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g0</i></td>
                <td>start green color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b0</i></td>
                <td>start blue color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x1</i></td>
                <td>end x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y1</i></td>
                <td>end y position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z1</i></td>
                <td>end z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>r1</i></td>
                <td>end red color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g1</i></td>
                <td>end green color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b1</i></td>
                <td>end blue color component [0, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="drawDebugArrow"></a>
        <h3>drawDebugArrow</h3>
        <b>Description</b>
        <blockquote>Render an arrow. Only use for debug rendering</blockquote>
        <b>Definition</b>
<blockquote><i>drawDebugArrow(float x,float y,float z,float dirX,float 
dirY,float dirZ,float tangX,float tangY,float tangZ,float r,float 
g,float b)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dirX</i></td>
                <td>direction x coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dirY</i></td>
                <td>direction y coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dirZ</i></td>
                <td>direction z coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>tangX</i></td>
                <td>tangential x direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>tangY</i></td>
                <td>tangential y direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>tangZ</i></td>
                <td>tangential z direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>r</i></td>
                <td>red color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g</i></td>
                <td>green color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b</i></td>
                <td>blue color component [0, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="asciiToUtf8"></a>
        <h3>asciiToUtf8</h3>
        <b>Description</b>
        <blockquote>Converts an ascii latin1 (ISO 88859-1) encoded string to an utf8 string</blockquote>
        <b>Definition</b>
<blockquote><i>asciiToUtf8(string asciiString)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>asciiString</i></td>
                <td>ascii string</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 encoded string</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="unicodeToUtf8"></a>
        <h3>unicodeToUtf8</h3>
        <b>Description</b>
        <blockquote>Converts an unicode value to an utf8 string</blockquote>
        <b>Definition</b>
<blockquote><i>unicodeToUtf8(integer unicode)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>unicode</i></td>
                <td>unicode value</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 encoded string representing the unicode</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="utf8ToUnicode"></a>
        <h3>utf8ToUnicode</h3>
        <b>Description</b>
        <blockquote>Converts an utf8 string to unicode</blockquote>
        <b>Definition</b>
<blockquote><i>utf8ToUnicode(string utf8string)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 encoded string</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>unicode</i></td>
                <td>unicode value</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>utf8Len</i></td>
                <td>length of the given string</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="utf8Strlen"></a>
        <h3>utf8Strlen</h3>
        <b>Description</b>
        <blockquote>Returns the length of an utf8 formated string</blockquote>
        <b>Definition</b>
<blockquote><i>utf8Strlen(string utf8string)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 formated string</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>length</i></td>
                <td>length of the given string</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="utf8Substr"></a>
        <h3>utf8Substr</h3>
        <b>Description</b>
        <blockquote>Returns a sub string of an utf8 formated string</blockquote>
        <b>Definition</b>
<blockquote><i>utf8Substr(string utf8string,integer startIndex,integer length)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 formated string</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>startIndex</i></td>
                <td>zero based start index</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>length</i></td>
                <td>maximal length of the sub string (optional)</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>subString</i></td>
                <td>utf8 formated sub string</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="utf8ToUpper"></a>
        <h3>utf8ToUpper</h3>
        <b>Description</b>
        <blockquote>Returns a upper case string of an utf8 formated string</blockquote>
        <b>Definition</b>
<blockquote><i>utf8ToUpper(string utf8string)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 formated string</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>upper case string of the given string</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="utf8ToLower"></a>
        <h3>utf8ToLower</h3>
        <b>Description</b>
        <blockquote>Returns a lower case string of an utf8 formated string</blockquote>
        <b>Definition</b>
<blockquote><i>utf8ToLower(string utf8string)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 formated string</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>lower case string of the given string</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setFog"></a>
        <h3>setFog</h3>
        <b>Description</b>
        <blockquote>Set fog properties</blockquote>
        <b>Definition</b>
<blockquote><i>setFog(string fogType,float startDistanceOrDensity,float endDistance,float r,float g,float b)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>fogType</i></td>
                <td>fog type ("none", "linear", "exp" or "exp2")</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>startDistanceOrDensity</i></td>
                <td>start distance (linear) or density (exp and exp2)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>endDistance</i></td>
                <td>end distance (linear)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>r</i></td>
                <td>red color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g</i></td>
                <td>green color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b</i></td>
                <td>blue color component [0, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="wrapMousePosition"></a>
        <h3>wrapMousePosition</h3>
        <b>Description</b>
        <blockquote>Wrap mouse position</blockquote>
        <b>Definition</b>
<blockquote><i>wrapMousePosition(float x,float y)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x coord [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>x coord [0, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setShowMouseCursor"></a>
        <h3>setShowMouseCursor</h3>
        <b>Description</b>
        <blockquote>Set show mouse cursor</blockquote>
        <b>Definition</b>
<blockquote><i>setShowMouseCursor(boolean state)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>state</i></td>
                <td>enable state</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setCaption"></a>
        <h3>setCaption</h3>
        <b>Description</b>
        <blockquote>Set caption</blockquote>
        <b>Definition</b>
<blockquote><i>setCaption(string caption)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>caption</i></td>
                <td>application caption</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="loadI3DFile"></a>
        <h3>loadI3DFile</h3>
        <b>Description</b>
        <blockquote>Load I3D file</blockquote>
        <b>Definition</b>
<blockquote><i>loadI3DFile(string filename,boolean addPhysics,boolean callOnCreate,boolean verbose)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>filename</i></td>
                <td>i3d filename</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>addPhysics</i></td>
                <td>add node to physics</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>callOnCreate</i></td>
                <td>call onCreate</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>verbose</i></td>
                <td>verbose mode</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>rootNodeId</i></td>
                <td>id of root node</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="project"></a>
        <h3>project</h3>
        <b>Description</b>
        <blockquote>Transform vector from world space into screen space</blockquote>
        <b>Definition</b>
<blockquote><i>project(float wx,float wy,float wz)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>wx</i></td>
                <td>world space x coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>wy</i></td>
                <td>world space y coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>wz</i></td>
                <td>world space z coordinate</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>sx</i></td>
                <td>screen space x coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>sy</i></td>
                <td>screen space y coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>sz</i></td>
                <td>screen space z coordinate</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="unProject"></a>
        <h3>unProject</h3>
        <b>Description</b>
        <blockquote>Transform vector from screen space into world space</blockquote>
        <b>Definition</b>
<blockquote><i>unProject(float sx,float sy,float sz)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>sx</i></td>
                <td>screen space x coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>sy</i></td>
                <td>screen space y coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>sz</i></td>
                <td>screen space z coordinate</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>wx</i></td>
                <td>world space x coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>wy</i></td>
                <td>world space y coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>wz</i></td>
                <td>world space z coordinate</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="saveScreenshot"></a>
        <h3>saveScreenshot</h3>
        <b>Description</b>
        <blockquote>Save screenshot</blockquote>
        <b>Definition</b>
<blockquote><i>saveScreenshot(string filename)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>filename</i></td>
                <td>filename</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_entity"></a><h2>Entity Function Reference</h2>
<br>


<a name="delete"></a>
        <h3>delete</h3>
        <b>Description</b>
        <blockquote>Delete Entity/Object</blockquote>
        <b>Definition</b>
<blockquote><i>delete(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getClassName"></a>
        <h3>getClassName</h3>
        <b>Description</b>
        <blockquote>Get class name of object</blockquote>
        <b>Definition</b>
<blockquote><i>getClassName(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>className</i></td>
                <td>class name of object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getClassId"></a>
        <h3>getClassId</h3>
        <b>Description</b>
        <blockquote>Get class name of object</blockquote>
        <b>Definition</b>
<blockquote><i>getClassId(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>classId</i></td>
                <td>class id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getHasClassId"></a>
        <h3>getHasClassId</h3>
        <b>Description</b>
        <blockquote>Get has class id</blockquote>
        <b>Definition</b>
<blockquote><i>getHasClassId(integer objectId,integer classId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>classId</i></td>
                <td>class id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>hasClassId</i></td>
                <td>has class id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_node"></a><h2>Node Function Reference</h2>
<br>

<a name="getParent"></a>
        <h3>getParent</h3>
        <b>Description</b>
        <blockquote>Get parent id</blockquote>
        <b>Definition</b>
<blockquote><i>getParent(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>parentId</i></td>
                <td>parent  id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="link"></a>
        <h3>link</h3>
        <b>Description</b>
        <blockquote>Link node to another node</blockquote>
        <b>Definition</b>
<blockquote><i>link(integer parentNodeId,integer childNodeId,integer index)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>parentNodeId</i></td>
                <td>id of parent node</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>childNodeId</i></td>
                <td>id of child node</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>index</i></td>
                <td>insert index (optional)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="unlink"></a>
        <h3>unlink</h3>
        <b>Description</b>
        <blockquote>Unlink node from parent</blockquote>
        <b>Definition</b>
<blockquote><i>unlink(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getNumOfChildren"></a>
        <h3>getNumOfChildren</h3>
        <b>Description</b>
        <blockquote>Get number of children</blockquote>
        <b>Definition</b>
<blockquote><i>getNumOfChildren(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numOfChildren</i></td>
                <td>number of children</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getChildAt"></a>
        <h3>getChildAt</h3>
        <b>Description</b>
        <blockquote>Get child id at given index</blockquote>
        <b>Definition</b>
<blockquote><i>getChildAt(integer objectId,integer index)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>index</i></td>
                <td>index of child</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>childId</i></td>
                <td>id of child node</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getChild"></a>
        <h3>getChild</h3>
        <b>Description</b>
        <blockquote>Get child id</blockquote>
        <b>Definition</b>
<blockquote><i>getChild(integer objectId,string childName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>childName</i></td>
                <td>child name</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>childId</i></td>
                <td>id of child node</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getChildIndex"></a>
        <h3>getChildIndex</h3>
        <b>Description</b>
        <blockquote>Get child index</blockquote>
        <b>Definition</b>
<blockquote><i>getChildIndex()</i></blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>childIndex</i></td>
                <td>index of child node</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getName"></a>
        <h3>getName</h3>
        <b>Description</b>
        <blockquote>Get object name</blockquote>
        <b>Definition</b>
<blockquote><i>getName(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>objectName</i></td>
                <td>object name</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setName"></a>
        <h3>setName</h3>
        <b>Description</b>
        <blockquote>Set object name</blockquote>
        <b>Definition</b>
<blockquote><i>setName(integer objectId,string objectName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>objectName</i></td>
                <td>new object name</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_scenegraph"></a><h2>Node Function Reference</h2>
<br>

<a name="createTransformGroup"></a>
        <h3>createTransformGroup</h3>
        <b>Description</b>
        <blockquote>Create transform group</blockquote>
        <b>Definition</b>
<blockquote><i>createTransformGroup(string transformName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>transformName</i></td>
                <td>name of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setTranslation"></a>
        <h3>setTranslation</h3>
        <b>Description</b>
        <blockquote>Set translation of a transform object</blockquote>
        <b>Definition</b>
<blockquote><i>setTranslation(integer transformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of translation</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of translation</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of translation</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getTranslation"></a>
        <h3>getTranslation</h3>
        <b>Description</b>
        <blockquote>Get translation of a transform object</blockquote>
        <b>Definition</b>
<blockquote><i>getTranslation(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of translation</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of translation</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of translation</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getWorldTranslation"></a>
        <h3>getWorldTranslation</h3>
        <b>Description</b>
        <blockquote>Get world translation of a transform object</blockquote>
        <b>Definition</b>
<blockquote><i>getWorldTranslation(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of world translation</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of world translation</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of world translation</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="localToWorld"></a>
        <h3>localToWorld</h3>
        <b>Description</b>
        <blockquote>Local space to world space transformation</blockquote>
        <b>Definition</b>
<blockquote><i>localToWorld(integer transformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of local position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of local position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of local position</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of world position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of world position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of world position</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="localDirectionToWorld"></a>
        <h3>localDirectionToWorld</h3>
        <b>Description</b>
        <blockquote>Local space to world space transformation, only direction without translation</blockquote>
        <b>Definition</b>
<blockquote><i>localDirectionToWorld(integer transformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of local position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of local position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of local position</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of world direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of world direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of world direction</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="worldToLocal"></a>
        <h3>worldToLocal</h3>
        <b>Description</b>
        <blockquote>World space to local space transformation</blockquote>
        <b>Definition</b>
<blockquote><i>worldToLocal(integer transformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of world position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of world position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of world position</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of local direction</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="worldDirectionToLocal"></a>
        <h3>worldDirectionToLocal</h3>
        <b>Description</b>
        <blockquote>World space to local space transformation, only direction without translation</blockquote>
        <b>Definition</b>
<blockquote><i>worldDirectionToLocal(integer transformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of world direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of world direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of world direction</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of local direction</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="localToLocal"></a>
        <h3>localToLocal</h3>
        <b>Description</b>
        <blockquote>Local space to local space transformation</blockquote>
        <b>Definition</b>
<blockquote><i>localToLocal(integer transformId,integer targetTransformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>targetTransformId</i></td>
                <td>id of target transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of local direction</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of local direction</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="localDirectionToLocal"></a>
        <h3>localDirectionToLocal</h3>
        <b>Description</b>
        <blockquote>Local space to local space transformation, only direction without translation</blockquote>
        <b>Definition</b>
<blockquote><i>localDirectionToLocal(integer transformId,integer targetTransformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>targetTransformId</i></td>
                <td>id of target transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of local direction</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of local direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of local direction</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="rotateAboutLocalAxis"></a>
        <h3>rotateAboutLocalAxis</h3>
        <b>Description</b>
        <blockquote>Rotate about local axis</blockquote>
        <b>Definition</b>
<blockquote><i>rotateAboutLocalAxis(integer transformId,float rotation,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>rotation</i></td>
                <td>angle in radians</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of local axis</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of local axis</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of local axis</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setRotation"></a>
        <h3>setRotation</h3>
        <b>Description</b>
        <blockquote>Set euler rotation of a transform object. Order ZY'X''</blockquote>
        <b>Definition</b>
<blockquote><i>setRotation(integer transformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of rotation (radian units)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of rotation (radian units)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of rotation (radian units)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getRotation"></a>
        <h3>getRotation</h3>
        <b>Description</b>
        <blockquote>Get rotation of a transform object</blockquote>
        <b>Definition</b>
<blockquote><i>getRotation(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of rotation (radian units)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of rotation (radian units)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of rotation (radian units)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getWorldRotation"></a>
        <h3>getWorldRotation</h3>
        <b>Description</b>
        <blockquote>Get world rotation of a transform object</blockquote>
        <b>Definition</b>
<blockquote><i>getWorldRotation(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of world rotation (radian units)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of world rotation (radian units)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of world rotation (radian units)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setDirection"></a>
        <h3>setDirection</h3>
        <b>Description</b>
        <blockquote>Set the direction of an object, the positive z-axis 
points towards the given direction. The y-axis lies in the 
direction-up-plane.</blockquote>
        <b>Definition</b>
<blockquote><i>setDirection(integer transformId,float x,float y,float z,float upX,float upY,float upZ)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>upX</i></td>
                <td>x value of up vector</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>upY</i></td>
                <td>y value of up vector</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>upZ</i></td>
                <td>z value of up vector</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setScale"></a>
        <h3>setScale</h3>
        <b>Description</b>
        <blockquote>Set scale of a transform object</blockquote>
        <b>Definition</b>
<blockquote><i>setScale(integer transformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of scale</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of scale</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of scale</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getScale"></a>
        <h3>getScale</h3>
        <b>Description</b>
        <blockquote>Get scale of a transform object</blockquote>
        <b>Definition</b>
<blockquote><i>getScale(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of scale</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of scale</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of scale</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setVisibility"></a>
        <h3>setVisibility</h3>
        <b>Description</b>
        <blockquote>Set transform object visibility</blockquote>
        <b>Definition</b>
<blockquote><i>setVisibility(integer transformId,boolean visibility)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>visibility</i></td>
                <td>visibility state</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getVisibility"></a>
        <h3>getVisibility</h3>
        <b>Description</b>
        <blockquote>Get transform object visibility</blockquote>
        <b>Definition</b>
<blockquote><i>getVisibility(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>visibility</i></td>
                <td>visibility state</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="clone"></a>
        <h3>clone</h3>
        <b>Description</b>
        <blockquote>Clone scenegraph object</blockquote>
        <b>Definition</b>
<blockquote><i>clone(id objectId,boolean groupUnderParent,boolean callOnCreate,boolean addPhysics)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>id of scenegraph object</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>groupUnderParent</i></td>
                <td>if true the clone will be linked to the the same parent as objectId, otherwise it is not linked to the scenegraph</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>callOnCreate</i></td>
                <td>call onCreate</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>addPhysics</i></td>
                <td>add node to physics</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>cloneId</i></td>
                <td>id of clone object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getUserAttribute"></a>
        <h3>getUserAttribute</h3>
        <b>Description</b>
        <blockquote>Get user attribute value</blockquote>
        <b>Definition</b>
<blockquote><i>getUserAttribute(id objectId,string attributeName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributeName</i></td>
                <td>name of the user attribute</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer/float/boolean/string</i></td>
                <td><i>attributeValue</i></td>
                <td>value of the user attribute, return type is the type of the attribute. Returns nil if attributeName doest not exist</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setUserAttribute"></a>
        <h3>setUserAttribute</h3>
        <b>Description</b>
        <blockquote>Set user attribute value</blockquote>
        <b>Definition</b>
<blockquote><i>setUserAttribute(id objectId,string attributeName,string typeName,integer/float/boolean/string value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributeName</i></td>
                <td>name of the user attribute</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>typeName</i></td>
                <td>name of the type ("Integer", "Float", "String", "Boolean")</td>
                </tr>
<tr>
                <td><i>integer/float/boolean/string</i></td>
                <td><i>value</i></td>
                <td>value of the user attribute, must match typeName</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAnimCharacterSet"></a>
        <h3>getAnimCharacterSet</h3>
        <b>Description</b>
        <blockquote>Get animation character set id</blockquote>
        <b>Definition</b>
<blockquote><i>getAnimCharacterSet(id objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>animId</i></td>
                <td>animation character set id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setObjectMask"></a>
        <h3>setObjectMask</h3>
        <b>Description</b>
        <blockquote>Set object mask</blockquote>
        <b>Definition</b>
<blockquote><i>setObjectMask(id objectId,integer mask)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>mask</i></td>
                <td>the object mask to set</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getObjectMask"></a>
        <h3>getObjectMask</h3>
        <b>Description</b>
        <blockquote>Get object mask</blockquote>
        <b>Definition</b>
<blockquote><i>getObjectMask(id objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>mask</i></td>
                <td>the object mask</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setClipDistance"></a>
        <h3>setClipDistance</h3>
        <b>Description</b>
        <blockquote>Set object clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>setClipDistance(id objectId,float distance)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>distance</i></td>
                <td>clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getClipDistance"></a>
        <h3>getClipDistance</h3>
        <b>Description</b>
        <blockquote>Get object clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>getClipDistance(id objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>distance</i></td>
                <td>clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getEffectiveClipDistance"></a>
        <h3>getEffectiveClipDistance</h3>
        <b>Description</b>
        <blockquote>Get effective object clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>getEffectiveClipDistance(id objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>distance</i></td>
                <td>effective clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setMinClipDistance"></a>
        <h3>setMinClipDistance</h3>
        <b>Description</b>
        <blockquote>Set minimum clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>setMinClipDistance(id objectId,float minDist)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>minDist</i></td>
                <td>minimum clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getMinClipDistance"></a>
        <h3>getMinClipDistance</h3>
        <b>Description</b>
        <blockquote>Get minimum clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>getMinClipDistance(id objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>minDist</i></td>
                <td>minimum clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getEffectiveMinClipDistance"></a>
        <h3>getEffectiveMinClipDistance</h3>
        <b>Description</b>
        <blockquote>Get effective minimum clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>getEffectiveMinClipDistance(id objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>minDist</i></td>
                <td>effective minimum clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_lighting"></a><h2>Node Function Reference</h2>
<br>

<a name="getLightDiffuseColor"></a>
        <h3>getLightDiffuseColor</h3>
        <b>Description</b>
        <blockquote>Get diffuse color of a light</blockquote>
        <b>Definition</b>
<blockquote><i>getLightDiffuseColor(integer lightId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>lightId</i></td>
                <td>id of light</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>r</i></td>
                <td>red value of diffuse color</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g</i></td>
                <td>green value of diffuse color</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b</i></td>
                <td>blue value of diffuse color</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setLightDiffuseColor"></a>
        <h3>setLightDiffuseColor</h3>
        <b>Description</b>
        <blockquote>Set diffuse color of a light</blockquote>
        <b>Definition</b>
<blockquote><i>setLightDiffuseColor(integer lightId,float r,float g,float b)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>lightId</i></td>
                <td>id of light</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>r</i></td>
                <td>red value of diffuse color</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g</i></td>
                <td>green value of diffuse color</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b</i></td>
                <td>blue value of diffuse color</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getLightSpecularColor"></a>
        <h3>getLightSpecularColor</h3>
        <b>Description</b>
        <blockquote>Get specular color of a light</blockquote>
        <b>Definition</b>
<blockquote><i>getLightSpecularColor(integer lightId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>lightId</i></td>
                <td>id of light</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>r</i></td>
                <td>red value of specular color</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g</i></td>
                <td>green value of specular color</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b</i></td>
                <td>blue value of specular color</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setLightSpecularColor"></a>
        <h3>setLightSpecularColor</h3>
        <b>Description</b>
        <blockquote>Set specular color of a light</blockquote>
        <b>Definition</b>
<blockquote><i>setLightSpecularColor(integer lightId,float r,float g,float b)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>lightId</i></td>
                <td>id of light</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>r</i></td>
                <td>red value of specular color</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g</i></td>
                <td>green value of specular color</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b</i></td>
                <td>blue value of specular color</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getLightRange"></a>
        <h3>getLightRange</h3>
        <b>Description</b>
        <blockquote>Get range of a light</blockquote>
        <b>Definition</b>
<blockquote><i>getLightRange(integer lightId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>lightId</i></td>
                <td>id of light</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>range</i></td>
                <td>light range</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setLightRange"></a>
        <h3>setLightRange</h3>
        <b>Description</b>
        <blockquote>Set range of a light</blockquote>
        <b>Definition</b>
<blockquote><i>setLightRange(integer lightId,float range)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>lightId</i></td>
                <td>id of light</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>range</i></td>
                <td>light range</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>
<a name="runtime_function_reference_camera"></a><h2>Camera Function Reference</h2>
<br>

<a name="createCamera"></a>
        <h3>createCamera</h3>
        <b>Description</b>
        <blockquote>Create camera</blockquote>
        <b>Definition</b>
<blockquote><i>createCamera(string cameraName,float fovy,float nearClip,float farClip)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>cameraName</i></td>
                <td>camera name</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>fovy</i></td>
                <td>field of view angle (degree)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>nearClip</i></td>
                <td>near clip</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>farClip</i></td>
                <td>far clip</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setFovy"></a>
        <h3>setFovy</h3>
        <b>Description</b>
        <blockquote>Set the field of view angle</blockquote>
        <b>Definition</b>
<blockquote><i>setFovy(integer cameraId,float fovy)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>cameraId</i></td>
                <td>camera id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>fovy</i></td>
                <td>field of view angle (degree)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getFovy"></a>
        <h3>getFovy</h3>
        <b>Description</b>
        <blockquote>Get the field of view angle</blockquote>
        <b>Definition</b>
<blockquote><i>getFovy(integer cameraId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>cameraId</i></td>
                <td>camera id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>fovy</i></td>
                <td>field of view angle (degree)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setNearClip"></a>
        <h3>setNearClip</h3>
        <b>Description</b>
        <blockquote>Set the near clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>setNearClip(integer cameraId,float nearClip)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>cameraId</i></td>
                <td>camera id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>nearClip</i></td>
                <td>near clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getNearClip"></a>
        <h3>getNearClip</h3>
        <b>Description</b>
        <blockquote>Set the near clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>getNearClip(integer cameraId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>cameraId</i></td>
                <td>camera id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>nearClip</i></td>
                <td>near clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setFarClip"></a>
        <h3>setFarClip</h3>
        <b>Description</b>
        <blockquote>Set the far clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>setFarClip(integer cameraId,float farClip)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>cameraId</i></td>
                <td>camera id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>farClip</i></td>
                <td>far clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getFarClip"></a>
        <h3>getFarClip</h3>
        <b>Description</b>
        <blockquote>Get the far clip distance</blockquote>
        <b>Definition</b>
<blockquote><i>getFarClip(integer cameraId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>cameraId</i></td>
                <td>camera id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>farClip</i></td>
                <td>far clip distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="aimCamera"></a>
        <h3>aimCamera</h3>
        <b>Description</b>
        <blockquote>Aim camera (spring/damper)</blockquote>
        <b>Definition</b>
<blockquote><i>aimCamera(integer cameraId,float x,float y,float z,float distance,float dt,float springStrength)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>cameraId</i></td>
                <td>camera id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>target x coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>target y coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>target z coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>distance</i></td>
                <td>distance from target</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dt</i></td>
                <td>delta time</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>springStrength</i></td>
                <td>spring strength</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>
<a name="runtime_function_reference_shape"></a><h2>Shape Function Reference</h2>
<br>

<a name="getGeometry"></a>
        <h3>getGeometry</h3>
        <b>Description</b>
        <blockquote>Get shape geometry id</blockquote>
        <b>Definition</b>
<blockquote><i>getGeometry(integer shapeId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>geometryId</i></td>
                <td>geometry id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setShaderParameter"></a>
        <h3>setShaderParameter</h3>
        <b>Description</b>
        <blockquote>Set shader parameter</blockquote>
        <b>Definition</b>
<blockquote><i>setShaderParameter(integer shapeId,string parameterName,float x,float y,float z,float w,boolean shared)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>parameterName</i></td>
                <td>the name of the parameter</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>w</i></td>
                <td>w value</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>shared</i></td>
                <td>if true, the value is applied to all shapes with the same material</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getShaderParameter"></a>
        <h3>getShaderParameter</h3>
        <b>Description</b>
        <blockquote>Get shader parameter</blockquote>
        <b>Definition</b>
<blockquote><i>getShaderParameter(integer shapeId,string parameterName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>parameterName</i></td>
                <td>the name of the parameter</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>w</i></td>
                <td>w value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getHasShaderParameter"></a>
        <h3>getHasShaderParameter</h3>
        <b>Description</b>
        <blockquote>Get hash shader parameter</blockquote>
        <b>Definition</b>
<blockquote><i>getHasShaderParameter(integer shapeId,string parameterName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>parameterName</i></td>
                <td>the name of the parameter</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>hasParam</i></td>
                <td>has parameter</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setReflectionMapObjectMask"></a>
        <h3>setReflectionMapObjectMask</h3>
        <b>Description</b>
        <blockquote>Set reflection object mask</blockquote>
        <b>Definition</b>
<blockquote><i>setReflectionMapObjectMask(integer shapeId,integer mask,boolean isShared)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>mask</i></td>
                <td>the mask</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isShared</i></td>
                <td>is shared parameter</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getNumMaterials"></a>
        <h3>getNumMaterials</h3>
        <b>Description</b>
        <blockquote>Get number of materials</blockquote>
        <b>Definition</b>
<blockquote><i>getNumMaterials(integer shapeId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numMaterials</i></td>
                <td>number of materials</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getMaterial"></a>
        <h3>getMaterial</h3>
        <b>Description</b>
        <blockquote>Get material by index</blockquote>
        <b>Definition</b>
<blockquote><i>getMaterial(integer shapeId,integer materialIdx)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>materialIdx</i></td>
                <td>index of attached material</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>materialId</i></td>
                <td>id of material</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setMaterial"></a>
        <h3>setMaterial</h3>
        <b>Description</b>
        <blockquote>Set material by index</blockquote>
        <b>Definition</b>
<blockquote><i>setMaterial(integer shapeId,integer materialId,integer material index)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>materialId</i></td>
                <td>id of material</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>material index</i></td>
                <td>index of material</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getSplitType"></a>
        <h3>getSplitType</h3>
        <b>Description</b>
        <blockquote>Get split type</blockquote>
        <b>Definition</b>
<blockquote><i>getSplitType(integer shapeId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>splitType</i></td>
                <td>split type</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="createFillPlaneShape"></a>
        <h3>createFillPlaneShape</h3>
        <b>Description</b>
        <blockquote>Creates a fill plane shape based on shapeId</blockquote>
        <b>Definition</b>
<blockquote><i>createFillPlaneShape(integer shapeId,string 
shapeName,float volume,float deltaMax,float maxSurfaceAngle,float 
maxPhysicalSurfaceAngle,float maxSubDivEdgeLength,boolean 
createSidePlanes)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>shape id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>shapeName</i></td>
                <td>name of shape</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>volume</i></td>
                <td>volume of the fill plane shape (m^3)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>deltaMax</i></td>
                <td>value of how much the fill plane can be excessed (in meter)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxSurfaceAngle</i></td>
                <td>maximum surface angle (geometric tuning value in radian)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxPhysicalSurfaceAngle</i></td>
                <td>maximum physical surface angle (this is usually material dependent in radian)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxSubDivEdgeLength</i></td>
                <td>defines the maximum edge-length of the subdivision surface (in meter)</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>createSidePlanes</i></td>
                <td>state of side plane creation</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>fillPlaneShapeId</i></td>
                <td>id of fill plane shape type</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="fillPlaneAdd"></a>
        <h3>fillPlaneAdd</h3>
        <b>Description</b>
        <blockquote>Add material/volume to a fill plane</blockquote>
        <b>Definition</b>
<blockquote><i>fillPlaneAdd(integer fillPlaneId,float dTvolume,float 
x,float y,float z,float dx1,float dy1,float dz1,float dx2,float 
dy2,float dz2)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>fillPlaneId</i></td>
                <td>id of fill plane</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dTvolume</i></td>
                <td>delta volume (m^3)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dx1</i></td>
                <td>frame x position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dy1</i></td>
                <td>frame y position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dz1</i></td>
                <td>frame z position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dx2</i></td>
                <td>frame x position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dy2</i></td>
                <td>frame y position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dz2</i></td>
                <td>frame z position in world space</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="findPolyline"></a>
        <h3>findPolyline</h3>
        <b>Description</b>
        <blockquote>find nearest polyline</blockquote>
        <b>Definition</b>
<blockquote><i>findPolyline(integer fillPlaneId,float x,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>fillPlaneId</i></td>
                <td>id of fill plane</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position in local space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position in local space</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>polyLineId</i></td>
                <td>id of polyLineId</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setPolylineTranslation"></a>
        <h3>setPolylineTranslation</h3>
        <b>Description</b>
        <blockquote>translate polylines</blockquote>
        <b>Definition</b>
<blockquote><i>setPolylineTranslation(integer fillPlaneId,integer polyLineIdx,float dx,float dz)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>fillPlaneId</i></td>
                <td>id of fill plane</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>polyLineIdx</i></td>
                <td>polyline index</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dx</i></td>
                <td>x value of translation</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dz</i></td>
                <td>z value of translation</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getFillPlaneHeightAtLocalPos"></a>
        <h3>getFillPlaneHeightAtLocalPos</h3>
        <b>Description</b>
        <blockquote>Get the fill plane height at a specific position</blockquote>
        <b>Definition</b>
<blockquote><i>getFillPlaneHeightAtLocalPos(integer fillPlaneId,float x,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>fillPlaneId</i></td>
                <td>id of fill plane</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>x value of position</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setFillPlaneMaxPhysicalSurfaceAngle"></a>
        <h3>setFillPlaneMaxPhysicalSurfaceAngle</h3>
        <b>Description</b>
        <blockquote>Set fill plane physical surface angle</blockquote>
        <b>Definition</b>
<blockquote><i>setFillPlaneMaxPhysicalSurfaceAngle(integer fillPlaneId,float physicalSurfAngle)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>fillPlaneId</i></td>
                <td>id of fill plane</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>physicalSurfAngle</i></td>
                <td>value of physical surface angle (in radian)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_particleSystem"></a><h2>Particle System Function Reference</h2>
<br>

<a name="setEmittingState"></a>
        <h3>setEmittingState</h3>
        <b>Description</b>
        <blockquote>Set whether the particle system should emit new particles</blockquote>
        <b>Definition</b>
<blockquote><i>setEmittingState(integer particleSystemId,boolean state)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>state</i></td>
                <td>if true, new particles are emitted</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setEmitCountScale"></a>
        <h3>setEmitCountScale</h3>
        <b>Description</b>
        <blockquote>Set particle system count scale</blockquote>
        <b>Definition</b>
<blockquote><i>setEmitCountScale(integer particleSystemId,float countScale)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>countScale</i></td>
                <td>value of count scale</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="resetNumOfEmittedParticles"></a>
        <h3>resetNumOfEmittedParticles</h3>
        <b>Description</b>
        <blockquote>Resets the counter of emitted particles. This is used if the maxEmit attribute is set for the particle system.</blockquote>
        <b>Definition</b>
<blockquote><i>resetNumOfEmittedParticles(integer particleSystemId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="resetEmitStartTimer"></a>
        <h3>resetEmitStartTimer</h3>
        <b>Description</b>
        <blockquote>Resets the start timer of emitted particles.</blockquote>
        <b>Definition</b>
<blockquote><i>resetEmitStartTimer(integer particleSystemId,float timer scale)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>timer scale</i></td>
                <td>time scale (default is 1)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="resetEmitStopTimer"></a>
        <h3>resetEmitStopTimer</h3>
        <b>Description</b>
        <blockquote>Resets the stop timer of emitted particles.</blockquote>
        <b>Definition</b>
<blockquote><i>resetEmitStopTimer(integer particleSystemId,float timer scale)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>timer scale</i></td>
                <td>time scale (default is 1)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getEmitStartTime"></a>
        <h3>getEmitStartTime</h3>
        <b>Description</b>
        <blockquote>Get emitter starting time.</blockquote>
        <b>Definition</b>
<blockquote><i>getEmitStartTime(integer particleSystemId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>emitStartTime</i></td>
                <td>emitter start time</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setEmitStartTime"></a>
        <h3>setEmitStartTime</h3>
        <b>Description</b>
        <blockquote>Set emitter starting time.</blockquote>
        <b>Definition</b>
<blockquote><i>setEmitStartTime(integer particleSystemId,float emitStartTime)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>emitStartTime</i></td>
                <td>emitter start time</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getEmitStopTime"></a>
        <h3>getEmitStopTime</h3>
        <b>Description</b>
        <blockquote>Get emitter stop time.</blockquote>
        <b>Definition</b>
<blockquote><i>getEmitStopTime(integer particleSystemId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>emitStopTime</i></td>
                <td>emitter stop time</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setEmitStopTime"></a>
        <h3>setEmitStopTime</h3>
        <b>Description</b>
        <blockquote>Set emitter stop time.</blockquote>
        <b>Definition</b>
<blockquote><i>setEmitStopTime(integer particleSystemId,float emitStopTime)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>emitStopTime</i></td>
                <td>emitter stop time</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setParticleSystemTimeScale"></a>
        <h3>setParticleSystemTimeScale</h3>
        <b>Description</b>
        <blockquote>Sets the time scale for the particle simulation.</blockquote>
        <b>Definition</b>
<blockquote><i>setParticleSystemTimeScale(integer particleSystemId,float timeScale)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>timeScale</i></td>
                <td>time scale for the particle simulation</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getParticleSystemLifespan"></a>
        <h3>getParticleSystemLifespan</h3>
        <b>Description</b>
        <blockquote>Get particle system life span.</blockquote>
        <b>Definition</b>
<blockquote><i>getParticleSystemLifespan(integer particleSystemId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>lifeSpan</i></td>
                <td>value of life span</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setParticleSystemLifespan"></a>
        <h3>setParticleSystemLifespan</h3>
        <b>Description</b>
        <blockquote>Set particle system life span.</blockquote>
        <b>Definition</b>
<blockquote><i>setParticleSystemLifespan(integer particleSystemId,float lifeSpan,boolean keepBlendTimes)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>lifeSpan</i></td>
                <td>value of life span</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>keepBlendTimes</i></td>
                <td>if true, blend times are kept</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setParticleSystemLifespan"></a>
        <h3>setParticleSystemLifespan</h3>
        <b>Description</b>
        <blockquote>Set particle system life span.</blockquote>
        <b>Definition</b>
<blockquote><i>setParticleSystemLifespan(integer particleSystemId,float lifeSpan,boolean keepBlendTimes)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>lifeSpan</i></td>
                <td>value of life span</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>keepBlendTimes</i></td>
                <td>if true, blend times are kept</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getParticleSystemAverageSpeed"></a>
        <h3>getParticleSystemAverageSpeed</h3>
        <b>Description</b>
        <blockquote>Get particle system average speed.</blockquote>
        <b>Definition</b>
<blockquote><i>getParticleSystemAverageSpeed(integer particleSystemId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>normalSpeed</i></td>
                <td>value of normal speed</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>tangentSpeed</i></td>
                <td>value of tangential speed</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getEmitterShape"></a>
        <h3>getEmitterShape</h3>
        <b>Description</b>
        <blockquote>Returns the emitter shape of the particle system</blockquote>
        <b>Definition</b>
<blockquote><i>getEmitterShape(integer particleSystemId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>id of the emitter shape</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setEmitterShape"></a>
        <h3>setEmitterShape</h3>
        <b>Description</b>
        <blockquote>Sets the emitter shape of the particle system</blockquote>
        <b>Definition</b>
<blockquote><i>setEmitterShape(integer particleSystemId,integer shapeId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>id of the emitter shape</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="addParticleSystemSimulationTime"></a>
        <h3>addParticleSystemSimulationTime</h3>
        <b>Description</b>
        <blockquote>add particle system simulation time</blockquote>
        <b>Definition</b>
<blockquote><i>addParticleSystemSimulationTime(integer particleSystemId,float dt)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>particleSystemId</i></td>
                <td>particle system id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dt</i></td>
                <td>value of simulation time to be added</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_physics"></a><h2>Physics Function Reference</h2>
<br>

<a name="simulatePhysics"></a>
        <h3>simulatePhysics</h3>
        <b>Description</b>
        <blockquote>Enable/disable physics simulation</blockquote>
        <b>Definition</b>
<blockquote><i>simulatePhysics(boolean state)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>state</i></td>
                <td>enable simulation state</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="simulatePhysicsTimeScale"></a>
        <h3>simulatePhysicsTimeScale</h3>
        <b>Description</b>
        <blockquote>Time scale of physics simulation</blockquote>
        <b>Definition</b>
<blockquote><i>simulatePhysicsTimeScale(float scale)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>scale</i></td>
                <td>physics time scale</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="createCCT"></a>
        <h3>createCCT</h3>
        <b>Description</b>
        <blockquote>Create character controller (y axis capsule based)</blockquote>
        <b>Definition</b>
<blockquote><i>createCCT(integer transformId,float radius,float 
height,float stepOffset,float slopeLimit,float skinWidth,integer 
collisionMask,float mass)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>radius</i></td>
                <td>physics time scale</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>height</i></td>
                <td>physics time scale</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>stepOffset</i></td>
                <td>physics time scale</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>slopeLimit</i></td>
                <td>physics time scale</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>skinWidth</i></td>
                <td>skin width</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>collisionMask</i></td>
                <td>collision mask</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>mass</i></td>
                <td>character mass [kg]</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterIndex</i></td>
                <td>character index numbe</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="moveCCT"></a>
        <h3>moveCCT</h3>
        <b>Description</b>
        <blockquote>Enqueue character movement</blockquote>
        <b>Definition</b>
<blockquote><i>moveCCT(integer characterIndex,float x,float y,float z,float collisionMasks)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterIndex</i></td>
                <td>character index number</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>collisionMasks</i></td>
                <td>collision masks</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="removeCCT"></a>
        <h3>removeCCT</h3>
        <b>Description</b>
        <blockquote>Remove character controller</blockquote>
        <b>Definition</b>
<blockquote><i>removeCCT(integer characterIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterIndex</i></td>
                <td>character index number</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getCCTCollisionFlags"></a>
        <h3>getCCTCollisionFlags</h3>
        <b>Description</b>
        <blockquote>Get character controller collision flags</blockquote>
        <b>Definition</b>
<blockquote><i>getCCTCollisionFlags(integer characterIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterIndex</i></td>
                <td>character index number</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>side</i></td>
                <td>side flag</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>up</i></td>
                <td>up flag</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>down</i></td>
                <td>down flag</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="raycastAll"></a>
        <h3>raycastAll</h3>
        <b>Description</b>
        <blockquote>Raycast objects, see <a href="http://gdn.giants-software.com/documentation_scripting.php#function_callback_raycastCallback">raycast callback function</a></blockquote>
        <b>Definition</b>
<blockquote><i>raycastAll(float x,float y,float z,float nx,float 
ny,float nz,string raycastFunctionCallback,float maxDistance,object 
targetObject,integer collisionMask,boolean generateNormal)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>origin x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>origin y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>origin z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>nx</i></td>
                <td>direction x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>ny</i></td>
                <td>direction y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>nz</i></td>
                <td>direction z</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>raycastFunctionCallback</i></td>
                <td>raycast function callback. See <a href="http://gdn.giants-software.com/documentation_scripting.php#function_callback_raycastCallback">raycast callback function</a> function</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxDistance</i></td>
                <td>max distance</td>
                </tr>
<tr>
                <td><i>object</i></td>
                <td><i>targetObject</i></td>
                <td>target object (optional), the callback function is called as a member function of targetObject (default nil)</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>collisionMask</i></td>
                <td>collision mask (optional), the mask to filter colliding objects (default 0xFFFFFFFF)</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>generateNormal</i></td>
                <td>generate normal (optional), if set and true, the 
normal at the collision point is passed as arguments to the callback 
function (default false)</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numShapes</i></td>
                <td>number of shapes hit</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="raycastClosest"></a>
        <h3>raycastClosest</h3>
        <b>Description</b>
        <blockquote>Raycast closest object, see <a href="http://gdn.giants-software.com/documentation_scripting.php#function_callback_raycastCallback">raycast callback function</a></blockquote>
        <b>Definition</b>
<blockquote><i>raycastClosest(float x,float y,float z,float nx,float 
ny,float nz,string raycastFunctionCallback,float maxDistance,object 
targetObject,integer collisionMask,boolean generateNormal)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>origin x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>origin y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>origin z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>nx</i></td>
                <td>direction x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>ny</i></td>
                <td>direction y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>nz</i></td>
                <td>direction z</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>raycastFunctionCallback</i></td>
                <td>raycast function callback. See <a href="http://gdn.giants-software.com/documentation_scripting.php#function_callback_raycastCallback">raycast callback function</a> function</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxDistance</i></td>
                <td>max distance</td>
                </tr>
<tr>
                <td><i>object</i></td>
                <td><i>targetObject</i></td>
                <td>target object (optional), the callback function is called as a member function of targetObject (default nil)</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>collisionMask</i></td>
                <td>collision mask (optional), the mask to filter colliding objects (default 0xFFFFFFFF)</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>generateNormal</i></td>
                <td>generate normal (optional), if set and true, the 
normal at the collision point is passed as arguments to the callback 
function (default false)</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numShapes</i></td>
                <td>number of shapes hit</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="overlapSphere"></a>
        <h3>overlapSphere</h3>
        <b>Description</b>
        <blockquote>Overlap sphere objects</blockquote>
        <b>Definition</b>
<blockquote><i>overlapSphere(float x,float y,float z,float radius,string overlapFunctionCallback,object targetObject)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>center x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>center y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>center z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>radius</i></td>
                <td>radius</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>overlapFunctionCallback</i></td>
                <td>overlap function callback</td>
                </tr>
<tr>
                <td><i>object</i></td>
                <td><i>targetObject</i></td>
                <td>target object (optional), the callback function is called as a member function of targetObject</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numShapes</i></td>
                <td>number of shape overlaps</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="overlapBox"></a>
        <h3>overlapBox</h3>
        <b>Description</b>
        <blockquote>Overlap box objects</blockquote>
        <b>Definition</b>
<blockquote><i>overlapBox(float x,float y,float z,float rx,float 
ry,float rz,float ex,float ey,float ez,string 
overlapFunctionCallback,object targetObject)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>center x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>center y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>center z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>rx</i></td>
                <td>rotation x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>ry</i></td>
                <td>rotation y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>rz</i></td>
                <td>rotation z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>ex</i></td>
                <td>extent  x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>ey</i></td>
                <td>extent  y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>ez</i></td>
                <td>extent  z</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>overlapFunctionCallback</i></td>
                <td>overlap function callback</td>
                </tr>
<tr>
                <td><i>object</i></td>
                <td><i>targetObject</i></td>
                <td>target object (optional), the callback function is called as a member function of targetObject</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numShapes</i></td>
                <td>number of shape overlaps</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="addForce"></a>
        <h3>addForce</h3>
        <b>Description</b>
        <blockquote>Add force to object</blockquote>
        <b>Definition</b>
<blockquote><i>addForce(integer transformId,float forceX,float 
forceY,float forceZ,float positionX,float positionY,float 
positionZ,boolean isPositionLocal)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>forceX</i></td>
                <td>force x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>forceY</i></td>
                <td>force y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>forceZ</i></td>
                <td>force z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionX</i></td>
                <td>position x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionY</i></td>
                <td>position y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionZ</i></td>
                <td>position z</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isPositionLocal</i></td>
                <td>is position local</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="addImpulse"></a>
        <h3>addImpulse</h3>
        <b>Description</b>
        <blockquote>Add impulse to object</blockquote>
        <b>Definition</b>
<blockquote><i>addImpulse(integer transformId,float impulseX,float 
impulseY,float impulseZ,float positionX,float positionY,float 
positionZ,boolean isPositionLocal)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>impulseX</i></td>
                <td>impulse x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>impulseY</i></td>
                <td>impulse y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>impulseZ</i></td>
                <td>impulse z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionX</i></td>
                <td>position x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionY</i></td>
                <td>position y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionZ</i></td>
                <td>position z</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isPositionLocal</i></td>
                <td>is position local</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setJointDrive"></a>
        <h3>setJointDrive</h3>
        <b>Description</b>
        <blockquote>Set joint drive. Drives orientation if position drive or angular velocity if velocity drive.</blockquote>
        <b>Definition</b>
<blockquote><i>setJointDrive(integer transformId,boolean isLinear,boolean isPosition,float valueX,float valueY,float valueZ,float angle)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isLinear</i></td>
                <td>is linear</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isPosition</i></td>
                <td>is position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>valueX</i></td>
                <td>orientation axis x or angular velocity x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>valueY</i></td>
                <td>orientation axis y or angular velocity y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>valueZ</i></td>
                <td>orientation axis z or angular velocity z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>angle</i></td>
                <td>orientation angle</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="createWheelShape"></a>
        <h3>createWheelShape</h3>
        <b>Description</b>
        <blockquote>Create wheel shape</blockquote>
        <b>Definition</b>
<blockquote><i>createWheelShape(integer transformId,float 
positionX,float positionY,float positionZ,float radius,float 
suspensionTravel,float spring,float damper,float mass,integer 
collisionMask,integer wheelShapeIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionX</i></td>
                <td>position x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionY</i></td>
                <td>position y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionZ</i></td>
                <td>position z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>radius</i></td>
                <td>radius</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>suspensionTravel</i></td>
                <td>suspension travel</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>spring</i></td>
                <td>spring</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>damper</i></td>
                <td>damper</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>mass</i></td>
                <td>mass</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>collisionMask</i></td>
                <td>collision mask</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setWheelShapeProps"></a>
        <h3>setWheelShapeProps</h3>
        <b>Description</b>
        <blockquote>Set wheel shape properties</blockquote>
        <b>Definition</b>
<blockquote><i>setWheelShapeProps(integer transformId,integer wheelShapeIndex,float motorTorque,float brakeTorque,float steerAngle)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>motorTorque</i></td>
                <td>motor torque</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>brakeTorque</i></td>
                <td>brake torque</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>steerAngle</i></td>
                <td>steer angle</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setWheelShapeTireFriction"></a>
        <h3>setWheelShapeTireFriction</h3>
        <b>Description</b>
        <blockquote>Set wheel shape tire friction</blockquote>
        <b>Definition</b>
<blockquote><i>setWheelShapeTireFriction(integer transformId,integer 
wheelShapeIndex,float maxLongStiffness,float maxLatStiffness,float 
maxLatStiffnessTireLoad,float frictionMultiplier)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxLongStiffness</i></td>
                <td>longitudal stiffness [t/rad] (force per slip ratio)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxLatStiffness</i></td>
                <td>peak lateral stiffness [t/rad] (force per slip angle)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxLatStiffnessTireLoad</i></td>
                <td>tire load at which the peak lateral stiffness is reached [t]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>frictionMultiplier</i></td>
                <td>friction multiplier modeling ground friction properties</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setWheelShapeForcePoint"></a>
        <h3>setWheelShapeForcePoint</h3>
        <b>Description</b>
        <blockquote>Set wheel shape force point</blockquote>
        <b>Definition</b>
<blockquote><i>setWheelShapeForcePoint(integer transformId,integer wheelShapeIndex,float positionX,float positionY,float positionZ)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionX</i></td>
                <td>position x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionY</i></td>
                <td>position y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionZ</i></td>
                <td>position z</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getWheelShapeAxleSpeed"></a>
        <h3>getWheelShapeAxleSpeed</h3>
        <b>Description</b>
        <blockquote>Get wheel shape axle speed</blockquote>
        <b>Definition</b>
<blockquote><i>getWheelShapeAxleSpeed(integer transformId,integer wheelShapeIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>axleSpeed</i></td>
                <td>axle speed</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getWheelShapeContactPoint"></a>
        <h3>getWheelShapeContactPoint</h3>
        <b>Description</b>
        <blockquote>Get wheel shape contact point</blockquote>
        <b>Definition</b>
<blockquote><i>getWheelShapeContactPoint(integer transformId,integer wheelShapeIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>positionX</i></td>
                <td>position x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionY</i></td>
                <td>position y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionZ</i></td>
                <td>position z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>contactSkinWidth</i></td>
                <td>skinWidth of contact object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getWheelShapePosition"></a>
        <h3>getWheelShapePosition</h3>
        <b>Description</b>
        <blockquote>Get wheel shape contact point</blockquote>
        <b>Definition</b>
<blockquote><i>getWheelShapePosition(integer transformId,integer wheelShapeIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>positionX</i></td>
                <td>position x</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionY</i></td>
                <td>position y</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionZ</i></td>
                <td>position z</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>rotation</i></td>
                <td>rotation</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="computeWheelShapeTireForces"></a>
        <h3>computeWheelShapeTireForces</h3>
        <b>Description</b>
        <blockquote>Calculate wheel shape tire forces</blockquote>
        <b>Definition</b>
<blockquote><i>computeWheelShapeTireForces(integer transformId,integer wheelShapeIndex,float longSlipRatio,float latSlipAngle,float tireLoad)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>longSlipRatio</i></td>
                <td>longitudal slip ratio</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>latSlipAngle</i></td>
                <td>lateral slip angle</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>tireLoad</i></td>
                <td>tire load</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>longForce</i></td>
                <td>longitudal force</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>latForce</i></td>
                <td>lateral force</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getWheelShapeContactObject"></a>
        <h3>getWheelShapeContactObject</h3>
        <b>Description</b>
        <blockquote>Get wheel shape contact object</blockquote>
        <b>Definition</b>
<blockquote><i>getWheelShapeContactObject(integer transformId,integer wheelShapeIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeContactObject</i></td>
                <td>wheel shape contact object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getWheelShapeContactNormal"></a>
        <h3>getWheelShapeContactNormal</h3>
        <b>Description</b>
        <blockquote>Get wheel shape contact normal</blockquote>
        <b>Definition</b>
<blockquote><i>getWheelShapeContactNormal(integer transformId,integer wheelShapeIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x value of contact normal</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y value of contact normal</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z value of contact normal</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getWheelShapeContactForce"></a>
        <h3>getWheelShapeContactForce</h3>
        <b>Description</b>
        <blockquote>Get wheel shape contact force</blockquote>
        <b>Definition</b>
<blockquote><i>getWheelShapeContactForce(integer transformId,integer wheelShapeIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>contactForce</i></td>
                <td>contact force</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getWheelShapeSlip"></a>
        <h3>getWheelShapeSlip</h3>
        <b>Description</b>
        <blockquote>Get wheel shape slip</blockquote>
        <b>Definition</b>
<blockquote><i>getWheelShapeSlip(integer transformId,integer wheelShapeIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>wheelShapeIndex</i></td>
                <td>wheel shape index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>wheelShapeSlip</i></td>
                <td>longitudal slip</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>wheelShapeSlip</i></td>
                <td>lateral slip</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getLinearVelocity"></a>
        <h3>getLinearVelocity</h3>
        <b>Description</b>
        <blockquote>Get linear velocity of transform object</blockquote>
        <b>Definition</b>
<blockquote><i>getLinearVelocity(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>velocityX</i></td>
                <td>x value of velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityY</i></td>
                <td>y value of velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityZ</i></td>
                <td>z value of velocity</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setLinearVelocity"></a>
        <h3>setLinearVelocity</h3>
        <b>Description</b>
        <blockquote>Set linear velocity of transform object</blockquote>
        <b>Definition</b>
<blockquote><i>setLinearVelocity(integer transformId,float velocityX,float velocityY,float velocityZ)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityX</i></td>
                <td>x value of velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityY</i></td>
                <td>y value of velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityZ</i></td>
                <td>z value of velocity</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAngularVelocity"></a>
        <h3>getAngularVelocity</h3>
        <b>Description</b>
        <blockquote>Get angular velocity of transform object</blockquote>
        <b>Definition</b>
<blockquote><i>getAngularVelocity(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>velocityX</i></td>
                <td>x value of angular velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityY</i></td>
                <td>y value of angular velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityZ</i></td>
                <td>z value of angular velocity</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setAngularVelocity"></a>
        <h3>setAngularVelocity</h3>
        <b>Description</b>
        <blockquote>Set angular velocity of transform object</blockquote>
        <b>Definition</b>
<blockquote><i>setAngularVelocity(integer transformId,float velocityX,float velocityY,float velocityZ)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityX</i></td>
                <td>x value of angular velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityY</i></td>
                <td>y value of angular velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityZ</i></td>
                <td>z value of angular velocity</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getVelocityAtWorldPos"></a>
        <h3>getVelocityAtWorldPos</h3>
        <b>Description</b>
        <blockquote>Get velocity at world position of transform object</blockquote>
        <b>Definition</b>
<blockquote><i>getVelocityAtWorldPos(integer transformId,float positionX,float positionY,float positionZ)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionX</i></td>
                <td>x value of world position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionY</i></td>
                <td>y value of world position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionZ</i></td>
                <td>z value of world position</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>velocityX</i></td>
                <td>x value of velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityY</i></td>
                <td>y value of velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityZ</i></td>
                <td>z value of velocity</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getVelocityAtLocalPos"></a>
        <h3>getVelocityAtLocalPos</h3>
        <b>Description</b>
        <blockquote>Get velocity at local position of transform object</blockquote>
        <b>Definition</b>
<blockquote><i>getVelocityAtLocalPos(integer transformId,float positionX,float positionY,float positionZ)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionX</i></td>
                <td>x value of local position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionY</i></td>
                <td>y value of local position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>positionZ</i></td>
                <td>z value of local position</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>velocityX</i></td>
                <td>x value of velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityY</i></td>
                <td>y value of velocity</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>velocityZ</i></td>
                <td>z value of velocity</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="addVehicleLink"></a>
        <h3>addVehicleLink</h3>
        <b>Description</b>
        <blockquote>Add vehicle link</blockquote>
        <b>Definition</b>
<blockquote><i>addVehicleLink(integer transformId,integer transformId2)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>transformId2</i></td>
                <td>id of second transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="addDifferential"></a>
        <h3>addDifferential</h3>
        <b>Description</b>
        <blockquote>Add differential</blockquote>
        <b>Definition</b>
<blockquote><i>addDifferential(integer transformId,integer index0,boolean isWheel0,integer index1,boolean isWheel1,float ratio,float bias)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>index0</i></td>
                <td></td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isWheel0</i></td>
                <td>is wheel state</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>index1</i></td>
                <td></td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isWheel1</i></td>
                <td>is wheel state</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>ratio</i></td>
                <td>ratio</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>bias</i></td>
                <td>bias</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="updateDifferential"></a>
        <h3>updateDifferential</h3>
        <b>Description</b>
        <blockquote>update differential</blockquote>
        <b>Definition</b>
<blockquote><i>updateDifferential(integer transformId,integer index,float ratio,float bias)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>index</i></td>
                <td></td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>ratio</i></td>
                <td>ratio</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>bias</i></td>
                <td>bias</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="removeAllDifferentials"></a>
        <h3>removeAllDifferentials</h3>
        <b>Description</b>
        <blockquote>remove all differential</blockquote>
        <b>Definition</b>
<blockquote><i>removeAllDifferentials(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setVehicleProps"></a>
        <h3>setVehicleProps</h3>
        <b>Description</b>
        <blockquote>Set vehicle properties</blockquote>
        <b>Definition</b>
<blockquote><i>setVehicleProps(integer transformId,float torque,float maxDriveSpeed,float gearRatio,float maxClutchTorque)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>torque</i></td>
                <td>torque</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxDriveSpeed</i></td>
                <td>maximum driving speed</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>gearRatio</i></td>
                <td>gear ratio</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxClutchTorque</i></td>
                <td>maximum clutch torque</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getMotorRotationSpeed"></a>
        <h3>getMotorRotationSpeed</h3>
        <b>Description</b>
        <blockquote>Set vehicle properties</blockquote>
        <b>Definition</b>
<blockquote><i>getMotorRotationSpeed(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>motorRotSpeed</i></td>
                <td>motor rotation speed</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>clutchRotSpeed</i></td>
                <td>clutch rotation speed</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>motorLoad</i></td>
                <td>maximum motor load</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setRigidBodyType"></a>
        <h3>setRigidBodyType</h3>
        <b>Description</b>
        <blockquote>Set rigid body type</blockquote>
        <b>Definition</b>
<blockquote><i>setRigidBodyType(integer transformId,string type)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>type</i></td>
                <td>rigid body type ("Static", "Dynamic", "Kinematic" or "NoRigidBody")</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getRigidBodyType"></a>
        <h3>getRigidBodyType</h3>
        <b>Description</b>
        <blockquote>Get rigid body type</blockquote>
        <b>Definition</b>
<blockquote><i>getRigidBodyType(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>type</i></td>
                <td>rigid body type ("Static", "Dynamic", "Kinematic" or "NoRigidBody")</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="addToPhysics"></a>
        <h3>addToPhysics</h3>
        <b>Description</b>
        <blockquote>Add to physics</blockquote>
        <b>Definition</b>
<blockquote><i>addToPhysics(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="removeFromPhysics"></a>
        <h3>removeFromPhysics</h3>
        <b>Description</b>
        <blockquote>Remove from physics</blockquote>
        <b>Definition</b>
<blockquote><i>removeFromPhysics(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setCollisionMask"></a>
        <h3>setCollisionMask</h3>
        <b>Description</b>
        <blockquote>Set collision mask</blockquote>
        <b>Definition</b>
<blockquote><i>setCollisionMask(integer transformId,integer mask)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>mask</i></td>
                <td>collision mask</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getCollisionMask"></a>
        <h3>getCollisionMask</h3>
        <b>Description</b>
        <blockquote>Get collision mask</blockquote>
        <b>Definition</b>
<blockquote><i>getCollisionMask(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>mask</i></td>
                <td>collision mask</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getCenterOfMass"></a>
        <h3>getCenterOfMass</h3>
        <b>Description</b>
        <blockquote>Get center of mass</blockquote>
        <b>Definition</b>
<blockquote><i>getCenterOfMass(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setCenterOfMass"></a>
        <h3>setCenterOfMass</h3>
        <b>Description</b>
        <blockquote>Set center of mass</blockquote>
        <b>Definition</b>
<blockquote><i>setCenterOfMass(integer transformId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setSolverIterationCount"></a>
        <h3>setSolverIterationCount</h3>
        <b>Description</b>
        <blockquote>Set solver iteration count</blockquote>
        <b>Definition</b>
<blockquote><i>setSolverIterationCount(integer transformId,integer count)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>count</i></td>
                <td>number of iteration</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setMass"></a>
        <h3>setMass</h3>
        <b>Description</b>
        <blockquote>Set mass</blockquote>
        <b>Definition</b>
<blockquote><i>setMass(integer transformId,float mass)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>mass</i></td>
                <td>mass</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getMass"></a>
        <h3>getMass</h3>
        <b>Description</b>
        <blockquote>Get mass</blockquote>
        <b>Definition</b>
<blockquote><i>getMass(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>mass</i></td>
                <td>mass</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getDensity"></a>
        <h3>getDensity</h3>
        <b>Description</b>
        <blockquote>Get density</blockquote>
        <b>Definition</b>
<blockquote><i>getDensity(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>density</i></td>
                <td>density</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getVolume"></a>
        <h3>getVolume</h3>
        <b>Description</b>
        <blockquote>Get volume</blockquote>
        <b>Definition</b>
<blockquote><i>getVolume(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>volume</i></td>
                <td>volume</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getLinearDamping"></a>
        <h3>getLinearDamping</h3>
        <b>Description</b>
        <blockquote>Get linear damping</blockquote>
        <b>Definition</b>
<blockquote><i>getLinearDamping(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>linearDamping</i></td>
                <td>linear damping</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setLinearDamping"></a>
        <h3>setLinearDamping</h3>
        <b>Description</b>
        <blockquote>Set linear damping</blockquote>
        <b>Definition</b>
<blockquote><i>setLinearDamping(integer transformId,float linearDamping)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>linearDamping</i></td>
                <td>linear damping</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAngularDamping"></a>
        <h3>getAngularDamping</h3>
        <b>Description</b>
        <blockquote>Get angular damping</blockquote>
        <b>Definition</b>
<blockquote><i>getAngularDamping(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>angularDamping</i></td>
                <td>angular damping</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setAngularDamping"></a>
        <h3>setAngularDamping</h3>
        <b>Description</b>
        <blockquote>Set angular damping</blockquote>
        <b>Definition</b>
<blockquote><i>setAngularDamping(integer transformId,float angularDamping)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>angularDamping</i></td>
                <td>angular damping</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_spline"></a><h2>Spline Function Reference</h2>
<br>

<a name="getSplinePosition"></a>
        <h3>getSplinePosition</h3>
        <b>Description</b>
        <blockquote>Get spline position</blockquote>
        <b>Definition</b>
<blockquote><i>getSplinePosition(integer shapeId,float time)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>id of curve shape object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>time</i></td>
                <td>time [0,1]</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z coordinate</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getSplineOrientation"></a>
        <h3>getSplineOrientation</h3>
        <b>Description</b>
        <blockquote>Get spline orientation</blockquote>
        <b>Definition</b>
<blockquote><i>getSplineOrientation(integer shapeId,float time,float upDirX,float upDirY,float upDirZ)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>id of curve shape object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>time</i></td>
                <td>time [0,1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>upDirX</i></td>
                <td>up direction x coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>upDirY</i></td>
                <td>up direction y coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>upDirZ</i></td>
                <td>up direction z coordinate</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>rx</i></td>
                <td>x rotation</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>ry</i></td>
                <td>y rotation</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>rz</i></td>
                <td>z rotation</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getSplineLength"></a>
        <h3>getSplineLength</h3>
        <b>Description</b>
        <blockquote>Get spline length</blockquote>
        <b>Definition</b>
<blockquote><i>getSplineLength(integer shapeId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>id of curve shape object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>length</i></td>
                <td>length of spline</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getSplineNumOfCV"></a>
        <h3>getSplineNumOfCV</h3>
        <b>Description</b>
        <blockquote>Get number of spline control vertices</blockquote>
        <b>Definition</b>
<blockquote><i>getSplineNumOfCV(integer shapeId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>id of curve shape object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>num</i></td>
                <td>number of spline control vertices</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getSplineCV"></a>
        <h3>getSplineCV</h3>
        <b>Description</b>
        <blockquote>Get spline control vertex</blockquote>
        <b>Definition</b>
<blockquote><i>getSplineCV(integer shapeId,integer index)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>shapeId</i></td>
                <td>id of curve shape object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>index</i></td>
                <td>control vertex index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>control vertex x coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>control vertex y coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>control vertex z coordinate</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>


<a name="runtime_function_reference_animation"></a><h2>Animation Function Reference</h2>
<br>

<a name="getAnimCharacterSet"></a>
        <h3>getAnimCharacterSet</h3>
        <b>Description</b>
        <blockquote>Returns the character set driving the transform group</blockquote>
        <b>Definition</b>
<blockquote><i>getAnimCharacterSet(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform group</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>id</i></td>
                <td>id of character set object, 0 if no character set is assigned to the transform group</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="enableAnimTrack"></a>
        <h3>enableAnimTrack</h3>
        <b>Description</b>
        <blockquote>Enable animation track</blockquote>
        <b>Definition</b>
<blockquote><i>enableAnimTrack(integer characterSetId,integer track)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="disableAnimTrack"></a>
        <h3>disableAnimTrack</h3>
        <b>Description</b>
        <blockquote>Disable  animation track</blockquote>
        <b>Definition</b>
<blockquote><i>disableAnimTrack(integer characterSetId,integer track)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="isAnimTrackEnabled"></a>
        <h3>isAnimTrackEnabled</h3>
        <b>Description</b>
        <blockquote>Is animation track enabled</blockquote>
        <b>Definition</b>
<blockquote><i>isAnimTrackEnabled(integer characterSetId,integer track)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>state</i></td>
                <td>enable state</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setAnimTrackSpeedScale"></a>
        <h3>setAnimTrackSpeedScale</h3>
        <b>Description</b>
        <blockquote>Set animation track speed scale</blockquote>
        <b>Definition</b>
<blockquote><i>setAnimTrackSpeedScale(integer characterSetId,integer track,float speedScale)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>speedScale</i></td>
                <td>speed scale</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setAnimTrackLoopState"></a>
        <h3>setAnimTrackLoopState</h3>
        <b>Description</b>
        <blockquote>Set animation track loop state</blockquote>
        <b>Definition</b>
<blockquote><i>setAnimTrackLoopState(integer characterSetId,integer track,boolean loopState)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>loopState</i></td>
                <td>loop state</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setAnimTrackTime"></a>
        <h3>setAnimTrackTime</h3>
        <b>Description</b>
        <blockquote>Set animation track time</blockquote>
        <b>Definition</b>
<blockquote><i>setAnimTrackTime(integer characterSetId,integer track,float time,boolean immediateUpdate (optional))</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>time</i></td>
                <td>time</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>immediateUpdate (optional)</i></td>
                <td>if set to true, the animation is updated 
immediately, otherwise it is only updated the next frame. For 
performance reasons, only set this to true if you really need the 
immediate update.</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAnimTrackTime"></a>
        <h3>getAnimTrackTime</h3>
        <b>Description</b>
        <blockquote>Get animation track loop state</blockquote>
        <b>Definition</b>
<blockquote><i>getAnimTrackTime(integer characterSetId,integer track)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>time</i></td>
                <td>time</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAnimClipDuration"></a>
        <h3>getAnimClipDuration</h3>
        <b>Description</b>
        <blockquote>Get the duration of the clip at the given index</blockquote>
        <b>Definition</b>
<blockquote><i>getAnimClipDuration(integer characterSetId,integer index)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>index</i></td>
                <td>clip index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>duration</i></td>
                <td>duration</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setAnimTrackBlendWeight"></a>
        <h3>setAnimTrackBlendWeight</h3>
        <b>Description</b>
        <blockquote>Set animation track blend weight</blockquote>
        <b>Definition</b>
<blockquote><i>setAnimTrackBlendWeight(integer characterSetId,integer track,float weight)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>weight</i></td>
                <td>blend weight</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAnimTrackBlendWeight"></a>
        <h3>getAnimTrackBlendWeight</h3>
        <b>Description</b>
        <blockquote>Get animation track blend weight</blockquote>
        <b>Definition</b>
<blockquote><i>getAnimTrackBlendWeight(integer characterSetId,integer track)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>weight</i></td>
                <td>blend weight</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAnimClipIndex"></a>
        <h3>getAnimClipIndex</h3>
        <b>Description</b>
        <blockquote>Returns the index of the clip with the given name</blockquote>
        <b>Definition</b>
<blockquote><i>getAnimClipIndex(integer characterSetId,string clipName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>clipName</i></td>
                <td>the name of the clip to find</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>index</i></td>
                <td>index of the clip, -1 if clip was not found</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="assignAnimTrackClip"></a>
        <h3>assignAnimTrackClip</h3>
        <b>Description</b>
        <blockquote>Assign clip to animation track</blockquote>
        <b>Definition</b>
<blockquote><i>assignAnimTrackClip(integer characterSetId,integer track,float clipIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>clipIndex</i></td>
                <td>clip index number</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="isAnimTrackClipAssigned"></a>
        <h3>isAnimTrackClipAssigned</h3>
        <b>Description</b>
        <blockquote>Is clip assigned to animation track</blockquote>
        <b>Definition</b>
<blockquote><i>isAnimTrackClipAssigned(integer characterSetId,integer track)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>state</i></td>
                <td>assigned state</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAnimTrackAssignedClip"></a>
        <h3>getAnimTrackAssignedClip</h3>
        <b>Description</b>
        <blockquote>Get animation track assigned clip index number</blockquote>
        <b>Definition</b>
<blockquote><i>getAnimTrackAssignedClip(integer characterSetId,integer track)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>clipIndex</i></td>
                <td>clip index number</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="clearAnimTrackClip"></a>
        <h3>clearAnimTrackClip</h3>
        <b>Description</b>
        <blockquote>Clear animation track clip assignment</blockquote>
        <b>Definition</b>
<blockquote><i>clearAnimTrackClip(integer characterSetId,integer track)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>track</i></td>
                <td>track number</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAnimNumOfClips"></a>
        <h3>getAnimNumOfClips</h3>
        <b>Description</b>
        <blockquote>Get number of clips</blockquote>
        <b>Definition</b>
<blockquote><i>getAnimNumOfClips(integer characterSetId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>characterSetId</i></td>
                <td>id of CharacterSet object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>clips</i></td>
                <td>number of clips</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>


<a name="runtime_function_reference_overlays"></a><h2>Overlays Function Reference</h2>
<br>

<a name="createImageOverlay"></a>
        <h3>createImageOverlay</h3>
        <b>Description</b>
        <blockquote>Create overlay object</blockquote>
        <b>Definition</b>
<blockquote><i>createImageOverlay(string textureFilename)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>textureFilename</i></td>
                <td>texture file name</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setOverlayColor"></a>
        <h3>setOverlayColor</h3>
        <b>Description</b>
        <blockquote>Set overlay color</blockquote>
        <b>Definition</b>
<blockquote><i>setOverlayColor(integer overlayId,float red,float green,float blue,float alpha)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>overlayId</i></td>
                <td>texture file name</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>red</i></td>
                <td>red value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>green</i></td>
                <td>green value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>blue</i></td>
                <td>blue value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>alpha</i></td>
                <td>alpha value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setOverlayUVs"></a>
        <h3>setOverlayUVs</h3>
        <b>Description</b>
        <blockquote>Set overlay uv coordinates</blockquote>
        <b>Definition</b>
<blockquote><i>setOverlayUVs(integer overlayId,float v0,float u0,float v1,float u1,float v2,float u2,float v3,float u3)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>overlayId</i></td>
                <td>texture file name</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>v0</i></td>
                <td>v0 texture coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>u0</i></td>
                <td>u0 texture coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>v1</i></td>
                <td>v1 texture coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>u1</i></td>
                <td>u1 texture coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>v2</i></td>
                <td>v2 texture coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>u2</i></td>
                <td>u2 texture coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>v3</i></td>
                <td>v3 texture coordinate</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>u3</i></td>
                <td>u3 texture coordinate</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="renderOverlay"></a>
        <h3>renderOverlay</h3>
        <b>Description</b>
        <blockquote>Render overlay</blockquote>
        <b>Definition</b>
<blockquote><i>renderOverlay(integer overlayId,float x,float y,float width,float height)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>overlayId</i></td>
                <td>texture file name</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position [0,1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y position [0,1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>width</i></td>
                <td>width [0,1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>height</i></td>
                <td>height [0,1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="createVideoOverlay"></a>
        <h3>createVideoOverlay</h3>
        <b>Description</b>
        <blockquote>Create video overlay object</blockquote>
        <b>Definition</b>
<blockquote><i>createVideoOverlay(string videoFilename,boolean loopVideo,float soundVolume)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>videoFilename</i></td>
                <td>video file name</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>loopVideo</i></td>
                <td>loop video</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>soundVolume</i></td>
                <td>sound volume [0,1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="playVideoOverlay"></a>
        <h3>playVideoOverlay</h3>
        <b>Description</b>
        <blockquote>Play video overlay object</blockquote>
        <b>Definition</b>
<blockquote><i>playVideoOverlay(integer videoOverlayId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>videoOverlayId</i></td>
                <td>overlay id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="stopVideoOverlay"></a>
        <h3>stopVideoOverlay</h3>
        <b>Description</b>
        <blockquote>Stop  video overlay object</blockquote>
        <b>Definition</b>
<blockquote><i>stopVideoOverlay(integer videoOverlayId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>videoOverlayId</i></td>
                <td>overlay id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="updateVideoOverlay"></a>
        <h3>updateVideoOverlay</h3>
        <b>Description</b>
        <blockquote>Update video overlay object</blockquote>
        <b>Definition</b>
<blockquote><i>updateVideoOverlay(integer videoOverlayId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>videoOverlayId</i></td>
                <td>overlay id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getVideoOverlayDuration"></a>
        <h3>getVideoOverlayDuration</h3>
        <b>Description</b>
        <blockquote>Get video overlay duration</blockquote>
        <b>Definition</b>
<blockquote><i>getVideoOverlayDuration(integer videoOverlayId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>videoOverlayId</i></td>
                <td>overlay id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>videoDuration</i></td>
                <td>video duration in milliseconds</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getVideoOverlayCurrentTime"></a>
        <h3>getVideoOverlayCurrentTime</h3>
        <b>Description</b>
        <blockquote>Get video overlay current time</blockquote>
        <b>Definition</b>
<blockquote><i>getVideoOverlayCurrentTime(integer videoOverlayId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>videoOverlayId</i></td>
                <td>overlay id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>videoCurrentTime</i></td>
                <td>video current time in milliseconds</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setVideoOverlayPosition"></a>
        <h3>setVideoOverlayPosition</h3>
        <b>Description</b>
        <blockquote>Set video overlay current position</blockquote>
        <b>Definition</b>
<blockquote><i>setVideoOverlayPosition(integer videoOverlayId,float position)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>videoOverlayId</i></td>
                <td>overlay id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>position</i></td>
                <td>position [0, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="isVideoOverlayPlaying"></a>
        <h3>isVideoOverlayPlaying</h3>
        <b>Description</b>
        <blockquote>Get is video overlay playing</blockquote>
        <b>Definition</b>
<blockquote><i>isVideoOverlayPlaying(integer videoOverlayId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>videoOverlayId</i></td>
                <td>overlay id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>isVideoOverlayPlaying</i></td>
                <td>is video overlay playing</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setVideoOverlayVolume"></a>
        <h3>setVideoOverlayVolume</h3>
        <b>Description</b>
        <blockquote>Set video overlay volume</blockquote>
        <b>Definition</b>
<blockquote><i>setVideoOverlayVolume(integer videoOverlayId,float volume)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>videoOverlayId</i></td>
                <td>overlay id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>volume</i></td>
                <td>volume [0, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_sound"></a><h2>Sound Function Reference</h2>
<br>

<a name="createSample"></a>
        <h3>createSample</h3>
        <b>Description</b>
        <blockquote>Create sample object</blockquote>
        <b>Definition</b>
<blockquote><i>createSample(string objectName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>objectName</i></td>
                <td>sample object name</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>sampleId</i></td>
                <td>id of the created sample</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="loadSample"></a>
        <h3>loadSample</h3>
        <b>Description</b>
        <blockquote>Load sample object</blockquote>
        <b>Definition</b>
<blockquote><i>loadSample(integer objectId,integer sampleFilename,boolean b3DSound)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>sampleFilename</i></td>
                <td>Sample filename (.wav)</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>b3DSound</i></td>
                <td>true=enables 3D Sound-Rendering, false=disables 3D Sound-Rendering</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="playSample"></a>
        <h3>playSample</h3>
        <b>Description</b>
        <blockquote>Play sample object</blockquote>
        <b>Definition</b>
<blockquote><i>playSample(integer objectId,integer loops,float volume,float offset)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>loops</i></td>
                <td>number of loops [0,n] 0 = endless looping</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>volume</i></td>
                <td>volume [0,1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>offset</i></td>
                <td>offset in milliseconds</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="stopSample"></a>
        <h3>stopSample</h3>
        <b>Description</b>
        <blockquote>Stop  sample object</blockquote>
        <b>Definition</b>
<blockquote><i>stopSample(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setSamplePitch"></a>
        <h3>setSamplePitch</h3>
        <b>Description</b>
        <blockquote>Set sample pitch</blockquote>
        <b>Definition</b>
<blockquote><i>setSamplePitch(integer objectId,float pitch)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>pitch</i></td>
                <td>pitch value [0.5-2.0]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getSamplePitch"></a>
        <h3>getSamplePitch</h3>
        <b>Description</b>
        <blockquote>Set sample pitch</blockquote>
        <b>Definition</b>
<blockquote><i>getSamplePitch(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>pitch</i></td>
                <td>pitch of sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setSampleVolume"></a>
        <h3>setSampleVolume</h3>
        <b>Description</b>
        <blockquote>Set sample volume</blockquote>
        <b>Definition</b>
<blockquote><i>setSampleVolume(integer objectId,float volume)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>volume</i></td>
                <td>volume value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getSampleVolume"></a>
        <h3>getSampleVolume</h3>
        <b>Description</b>
        <blockquote>Get sample volume</blockquote>
        <b>Definition</b>
<blockquote><i>getSampleVolume(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>volume</i></td>
                <td>volume value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getSampleDuration"></a>
        <h3>getSampleDuration</h3>
        <b>Description</b>
        <blockquote>Get sample duration</blockquote>
        <b>Definition</b>
<blockquote><i>getSampleDuration(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>duration</i></td>
                <td>duration value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setSampleVelocity"></a>
        <h3>setSampleVelocity</h3>
        <b>Description</b>
        <blockquote>Set velocity of a sample object</blockquote>
        <b>Definition</b>
<blockquote><i>setSampleVelocity(integer objectId,float x,float y,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>velocity value towards x value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>velocity value towards y value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>velocity value towards z value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getSampleVelocity"></a>
        <h3>getSampleVelocity</h3>
        <b>Description</b>
        <blockquote>Get  velocity of a sample object</blockquote>
        <b>Definition</b>
<blockquote><i>getSampleVelocity(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>velocity value towards x value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>velocity value towards y value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>velocity value towards z value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="createStreamedSample"></a>
        <h3>createStreamedSample</h3>
        <b>Description</b>
        <blockquote>Create streamed sample object</blockquote>
        <b>Definition</b>
<blockquote><i>createStreamedSample(string objectName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>objectName</i></td>
                <td>streamed sample object name</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>sampleId</i></td>
                <td>id of the created sample</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="loadStreamedSample"></a>
        <h3>loadStreamedSample</h3>
        <b>Description</b>
        <blockquote>Load streamed sample object</blockquote>
        <b>Definition</b>
<blockquote><i>loadStreamedSample(integer objectId,string bgmusicFilename)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of streamed sample object</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>bgmusicFilename</i></td>
                <td>streamed sample filename (.ogg)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="playStreamedSample"></a>
        <h3>playStreamedSample</h3>
        <b>Description</b>
        <blockquote>Play streamed sample object</blockquote>
        <b>Definition</b>
<blockquote><i>playStreamedSample(integer objectId,integer repeat)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of streamed sample object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>repeat</i></td>
                <td>number of recurrences. 0 means endless loop</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="pauseStreamedSample"></a>
        <h3>pauseStreamedSample</h3>
        <b>Description</b>
        <blockquote>Pause streamed sample object</blockquote>
        <b>Definition</b>
<blockquote><i>pauseStreamedSample(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of streamed sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="resumeStreamedSample"></a>
        <h3>resumeStreamedSample</h3>
        <b>Description</b>
        <blockquote>Resume streamed sample</blockquote>
        <b>Definition</b>
<blockquote><i>resumeStreamedSample(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of streamed sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="stopStreamedSample"></a>
        <h3>stopStreamedSample</h3>
        <b>Description</b>
        <blockquote>Stop  streamed sample</blockquote>
        <b>Definition</b>
<blockquote><i>stopStreamedSample(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of streamed sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setStreamedSampleVolume"></a>
        <h3>setStreamedSampleVolume</h3>
        <b>Description</b>
        <blockquote>Set streamed sample volume</blockquote>
        <b>Definition</b>
<blockquote><i>setStreamedSampleVolume(integer objectId,float volume)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of streamed sample object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>volume</i></td>
                <td>volume value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getStreamedSampleVolume"></a>
        <h3>getStreamedSampleVolume</h3>
        <b>Description</b>
        <blockquote>Get  streamed sample volume</blockquote>
        <b>Definition</b>
<blockquote><i>getStreamedSampleVolume(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>id of streamed sample object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>volume</i></td>
                <td>volume value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="createAudioSource"></a>
        <h3>createAudioSource</h3>
        <b>Description</b>
        <blockquote>Create audio source object for 3D sounds</blockquote>
        <b>Definition</b>
<blockquote><i>createAudioSource(string audioSourceName,string sampleFilename,float radius,float innerRadius,float volume,integer loops)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>audioSourceName</i></td>
                <td>audio source name</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>sampleFilename</i></td>
                <td>sample file name (.wav or .ogg)</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>radius</i></td>
                <td>radius</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>innerRadius</i></td>
                <td>inner radius</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>volume</i></td>
                <td>volume [0,1]</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>loops</i></td>
                <td>number of loops</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getAudioSourceSample"></a>
        <h3>getAudioSourceSample</h3>
        <b>Description</b>
        <blockquote>Gets the sample id of an audio source</blockquote>
        <b>Definition</b>
<blockquote><i>getAudioSourceSample(id objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>id</i></td>
                <td><i>objectId</i></td>
                <td>id of the audio source</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>sampleId</i></td>
                <td>sample id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_input"></a><h2>Input Function Reference</h2>
<br>

<a name="getNumOfGamepads"></a>
        <h3>getNumOfGamepads</h3>
        <b>Description</b>
        <blockquote>Get number of joysticks/gampads</blockquote>
        <b>Definition</b>
<blockquote><i>getNumOfGamepads()</i></blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numOfGamepads</i></td>
                <td>number of joysticks/gampads</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getGamepadName"></a>
        <h3>getGamepadName</h3>
        <b>Description</b>
        <blockquote>Get name of joystick/gampad</blockquote>
        <b>Definition</b>
<blockquote><i>getGamepadName(integer gamepadIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>gamepadIndex</i></td>
                <td>joystick/gampad index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>gamepadName</i></td>
                <td>name of joystick/gampad</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getInputAxis"></a>
        <h3>getInputAxis</h3>
        <b>Description</b>
        <blockquote>Get joystick/gampad axis value</blockquote>
        <b>Definition</b>
<blockquote><i>getInputAxis(integer axisNumber,integer gamepadIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>axisNumber</i></td>
                <td>axis number [0=Input.AXIS_1, 5=Input.AXIS_6]</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>gamepadIndex</i></td>
                <td>joystick/gampad index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>axisValue</i></td>
                <td>axis value [-1, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getInputButton"></a>
        <h3>getInputButton</h3>
        <b>Description</b>
        <blockquote>Get joystick/gampad button value</blockquote>
        <b>Definition</b>
<blockquote><i>getInputButton(integer buttonNumber,integer gamepadIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>buttonNumber</i></td>
                <td>button number [0=Input.BUTTON_1, 15==Input.BUTTON_16]</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>gamepadIndex</i></td>
                <td>joystick/gampad index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>buttonValue</i></td>
                <td>button value [0, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getGamepadButtonLabel"></a>
        <h3>getGamepadButtonLabel</h3>
        <b>Description</b>
        <blockquote>Get joystick/gampad button label</blockquote>
        <b>Definition</b>
<blockquote><i>getGamepadButtonLabel(integer buttonNumber,integer gamepadIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>buttonNumber</i></td>
                <td>button number [0=Input.BUTTON_1, 15==Input.BUTTON_16]</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>gamepadIndex</i></td>
                <td>joystick/gampad index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>buttonLabel</i></td>
                <td>button label</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getGamepadAxisLabel"></a>
        <h3>getGamepadAxisLabel</h3>
        <b>Description</b>
        <blockquote>Get joystick/gampad axis label</blockquote>
        <b>Definition</b>
<blockquote><i>getGamepadAxisLabel(integer axisNumber,integer gamepadIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>axisNumber</i></td>
                <td>axis number [0=Input.AXIS_1, 5=Input.AXIS_6]</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>gamepadIndex</i></td>
                <td>joystick/gampad index</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>axisLabel</i></td>
                <td>axis label</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setGamepadVibration"></a>
        <h3>setGamepadVibration</h3>
        <b>Description</b>
        <blockquote>Set joystick/gampad vibration</blockquote>
        <b>Definition</b>
<blockquote><i>setGamepadVibration(integer low,integer high,integer duration,integer gamepadIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>low</i></td>
                <td>low</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>high</i></td>
                <td>high</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>duration</i></td>
                <td>duration</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>gamepadIndex</i></td>
                <td>joystick/gampad index</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setGamepadDeadzone"></a>
        <h3>setGamepadDeadzone</h3>
        <b>Description</b>
        <blockquote>Set joystick/gampad vibration</blockquote>
        <b>Definition</b>
<blockquote><i>setGamepadDeadzone(float deadZone,integer gamepadIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>deadZone</i></td>
                <td>dead zone</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>gamepadIndex</i></td>
                <td>joystick/gampad index</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><h3><a href="#runtime_function_reference_callbacks">keyEvent and mouseEvent callbacks</a></h3>

<a name="runtime_function_reference_xml"></a><h2>XML Function Reference</h2>
<br>

<a name="xml_path"></a><h3>XML Path</h3>
<blockquote>
XML paths used in the getXML... and setXML... functions have the following format:<br>
node1.node2.....nodeN<br>or<br>node1.node2.....nodeN#attribute.<br>
<br>
Example:<br>
&lt;test&gt;<br>
&nbsp;&nbsp;&nbsp;&lt;test1 attr="test"&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is some text<br>
&nbsp;&nbsp;&nbsp;&lt;/test1&gt;<br>
&lt;/test&gt;<br>
<br>
To get the attribute "attr", use the path test.test1#attr.<br>
To get the content of test1, use the path test.test1.<br>
</blockquote>
<br>



<a name="createXMLFile"></a>
        <h3>createXMLFile</h3>
        <b>Description</b>
        <blockquote>Create an empty XML file</blockquote>
        <b>Definition</b>
<blockquote><i>createXMLFile(string objectName,string filename,string rootNodeName)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>objectName</i></td>
                <td>internal name for the object created</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>filename</i></td>
                <td>filename (full path)</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>rootNodeName</i></td>
                <td>name of the root node</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="loadXMLFile"></a>
        <h3>loadXMLFile</h3>
        <b>Description</b>
        <blockquote>Load XML file</blockquote>
        <b>Definition</b>
<blockquote><i>loadXMLFile(string objectName,string filename)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>objectName</i></td>
                <td>internal name for the object created</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>filename</i></td>
                <td>filename (full path)</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="saveXMLFile"></a>
        <h3>saveXMLFile</h3>
        <b>Description</b>
        <blockquote>Save  XML file</blockquote>
        <b>Definition</b>
<blockquote><i>saveXMLFile(integer objectId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getXMLInt"></a>
        <h3>getXMLInt</h3>
        <b>Description</b>
        <blockquote>Get XML file integer attribute. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>getXMLInt(integer objectId,string attributePath)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributePath</i></td>
                <td>attribute path</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>attribute value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getXMLFloat"></a>
        <h3>getXMLFloat</h3>
        <b>Description</b>
        <blockquote>Get XML file float attribute. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>getXMLFloat(integer objectId,string attributePath)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributePath</i></td>
                <td>attribute path</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>value</i></td>
                <td>attribute value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getXMLBool"></a>
        <h3>getXMLBool</h3>
        <b>Description</b>
        <blockquote>Get XML file boolean attribute. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>getXMLBool(integer objectId,string attributePath)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributePath</i></td>
                <td>attribute path</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>value</i></td>
                <td>attribute value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getXMLString"></a>
        <h3>getXMLString</h3>
        <b>Description</b>
        <blockquote>Get XML file string attribute. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>getXMLString(integer objectId,string attributePath)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributePath</i></td>
                <td>attribute path</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string </i></td>
                <td><i>value</i></td>
                <td>attribute value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setXMLInt"></a>
        <h3>setXMLInt</h3>
        <b>Description</b>
        <blockquote>Set XML file integer attribute. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>setXMLInt(integer objectId,string attributePath,integer value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributePath</i></td>
                <td>attribute path</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setXMLFloat"></a>
        <h3>setXMLFloat</h3>
        <b>Description</b>
        <blockquote>Set XML file float attribute. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>setXMLFloat(integer objectId,string attributePath,float value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributePath</i></td>
                <td>attribute path</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setXMLBool"></a>
        <h3>setXMLBool</h3>
        <b>Description</b>
        <blockquote>Set XML file boolean attribute. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>setXMLBool(integer objectId,string attributePath,boolean  value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributePath</i></td>
                <td>attribute path</td>
                </tr>
<tr>
                <td><i>boolean </i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setXMLString"></a>
        <h3>setXMLString</h3>
        <b>Description</b>
        <blockquote>Set XML file string attribute. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>setXMLString(integer objectId,string attributePath,string  value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributePath</i></td>
                <td>attribute path</td>
                </tr>
<tr>
                <td><i>string </i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="hasXMLProperty"></a>
        <h3>hasXMLProperty</h3>
        <b>Description</b>
        <blockquote>Returns if an XML path is available in the file. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>hasXMLProperty(integer objectId,string attributePath)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>attributePath</i></td>
                <td>path to a node or an attribute</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>value</i></td>
                <td>is the given property available in the xml file</td>
                </tr>
</tbody></table>
            </blockquote>
<br>
            <b>Notes</b>
<blockquote><i>available since 4.1.5</i></blockquote>
<br><br><br><br><a name="removeXMLProperty"></a>
        <h3>removeXMLProperty</h3>
        <b>Description</b>
        <blockquote>Removes xml property. See <a href="http://gdn.giants-software.com/scriptingReferenceXML.php#xml_path">XML Path</a></blockquote>
        <b>Definition</b>
<blockquote><i>removeXMLProperty(integer objectId,string propertyPath)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>objectId</i></td>
                <td>object id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>propertyPath</i></td>
                <td>path to a node or an attribute</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>succeeded</i></td>
                <td>removal state</td>
                </tr>
</tbody></table>
            </blockquote>
<br>
            <b>Notes</b>
<blockquote><i>available since 6.0.0</i></blockquote>
<br><br><br><br>

<a name="runtime_function_reference_network"></a><h2>Network Function Reference</h2>
<br>


<a name="streamWriteBool"></a>
        <h3>streamWriteBool</h3>
        <b>Description</b>
        <blockquote>Stream write boolean</blockquote>
        <b>Definition</b>
<blockquote><i>streamWriteBool(integer streamId,boolean value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamWriteInt8"></a>
        <h3>streamWriteInt8</h3>
        <b>Description</b>
        <blockquote>Stream write 8bit signed integer</blockquote>
        <b>Definition</b>
<blockquote><i>streamWriteInt8(integer streamId,integer value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value [-127, 127]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamWriteInt16"></a>
        <h3>streamWriteInt16</h3>
        <b>Description</b>
        <blockquote>Stream write 16bit signed integer</blockquote>
        <b>Definition</b>
<blockquote><i>streamWriteInt16(integer streamId,integer value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value [-32768, 32768]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamWriteInt32"></a>
        <h3>streamWriteInt32</h3>
        <b>Description</b>
        <blockquote>Stream write 32bit  signed integer</blockquote>
        <b>Definition</b>
<blockquote><i>streamWriteInt32(integer streamId,integer value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamWriteIntN"></a>
        <h3>streamWriteIntN</h3>
        <b>Description</b>
        <blockquote>Stream write N bit signed integer. 0&lt;N&lt;32.</blockquote>
        <b>Definition</b>
<blockquote><i>streamWriteIntN(integer streamId,integer value,integer numberofBits)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value [-2^(N-1), 2^(N-1)]</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numberofBits</i></td>
                <td>number of bits</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamWriteFloat32"></a>
        <h3>streamWriteFloat32</h3>
        <b>Description</b>
        <blockquote>Stream write 32bit float</blockquote>
        <b>Definition</b>
<blockquote><i>streamWriteFloat32(integer streamId,float value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamWriteString"></a>
        <h3>streamWriteString</h3>
        <b>Description</b>
        <blockquote>Stream write string</blockquote>
        <b>Definition</b>
<blockquote><i>streamWriteString(integer streamId,string value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>value</i></td>
                <td>value, max 64k characters</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamReadBool"></a>
        <h3>streamReadBool</h3>
        <b>Description</b>
        <blockquote>Stream read boolean</blockquote>
        <b>Definition</b>
<blockquote><i>streamReadBool(integer streamId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamReadInt8"></a>
        <h3>streamReadInt8</h3>
        <b>Description</b>
        <blockquote>Stream read 8bit signed integer</blockquote>
        <b>Definition</b>
<blockquote><i>streamReadInt8(integer streamId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamReadInt16"></a>
        <h3>streamReadInt16</h3>
        <b>Description</b>
        <blockquote>Stream read 16bit signed integer</blockquote>
        <b>Definition</b>
<blockquote><i>streamReadInt16(integer streamId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamReadInt32"></a>
        <h3>streamReadInt32</h3>
        <b>Description</b>
        <blockquote>Stream read 32bit signed integer</blockquote>
        <b>Definition</b>
<blockquote><i>streamReadInt32(integer streamId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamReadIntN"></a>
        <h3>streamReadIntN</h3>
        <b>Description</b>
        <blockquote>Stream read 32bit signed integer</blockquote>
        <b>Definition</b>
<blockquote><i>streamReadIntN(integer streamId,integer numberofBits)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numberofBits</i></td>
                <td>number of bits</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamReadFloat32"></a>
        <h3>streamReadFloat32</h3>
        <b>Description</b>
        <blockquote>Stream read 32bit float</blockquote>
        <b>Definition</b>
<blockquote><i>streamReadFloat32(integer streamId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamReadString"></a>
        <h3>streamReadString</h3>
        <b>Description</b>
        <blockquote>Stream read 32bit float</blockquote>
        <b>Definition</b>
<blockquote><i>streamReadString(integer streamId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamGetNumOfUnreadBits"></a>
        <h3>streamGetNumOfUnreadBits</h3>
        <b>Description</b>
        <blockquote>Stream get number of unread bits</blockquote>
        <b>Definition</b>
<blockquote><i>streamGetNumOfUnreadBits(integer streamId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>number of unread bit</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamGetReadOffset"></a>
        <h3>streamGetReadOffset</h3>
        <b>Description</b>
        <blockquote>Stream get read offset</blockquote>
        <b>Definition</b>
<blockquote><i>streamGetReadOffset(integer streamId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>offset</i></td>
                <td>Read offset</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamSetReadOffset"></a>
        <h3>streamSetReadOffset</h3>
        <b>Description</b>
        <blockquote>Sets the read pointer to the given offset in bytes</blockquote>
        <b>Definition</b>
<blockquote><i>streamSetReadOffset(integer streamId,integer offset)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>offset</i></td>
                <td>read offset in bytes</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamGetWriteOffset"></a>
        <h3>streamGetWriteOffset</h3>
        <b>Description</b>
        <blockquote>Returns the write pointer offset in bytes</blockquote>
        <b>Definition</b>
<blockquote><i>streamGetWriteOffset(integer streamId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>offset</i></td>
                <td>Write offset</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="streamSetWriteOffset"></a>
        <h3>streamSetWriteOffset</h3>
        <b>Description</b>
        <blockquote>Sets the write pointer to the given offset in bytes</blockquote>
        <b>Definition</b>
<blockquote><i>streamSetWriteOffset(integer streamId,integer offset)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>streamId</i></td>
                <td>stream id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>offset</i></td>
                <td>write offset in bytes</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_callbacks"></a><h2>Callbacks Function Reference</h2>
<br>
<h2>Default callbacks</h2>

<a name="init"></a>
        <h3>init</h3>
        <b>Description</b>
        <blockquote>This function is called once on startup. Create and load objects here.</blockquote>
        <b>Definition</b>
<blockquote><i>init(string args)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>args</i></td>
                <td>command line arguments</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>success</i></td>
                <td>return true if successful</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="keyEvent"></a>
        <h3>keyEvent</h3>
        <b>Description</b>
        <blockquote>This function is called when a key event occurs.</blockquote>
        <b>Definition</b>
<blockquote><i>keyEvent(float unicode,float sym,float modifier,boolean isDown)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>unicode</i></td>
                <td>unicode value</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>sym</i></td>
                <td>sym key</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>modifier</i></td>
                <td>key modifier</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isDown</i></td>
                <td>is down state</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="mouseEvent"></a>
        <h3>mouseEvent</h3>
        <b>Description</b>
        <blockquote>This function is called when a mouse event occurs.</blockquote>
        <b>Definition</b>
<blockquote><i>mouseEvent(float posX,float posY,boolean isDown,boolean isUp,float button)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>posX</i></td>
                <td>x position [0,1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>posY</i></td>
                <td>y position [0,1]</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isDown</i></td>
                <td>is down state</td>
                </tr>
<tr>
                <td><i>boolean</i></td>
                <td><i>isUp</i></td>
                <td>is up  state</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>button</i></td>
                <td>button number</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="update"></a>
        <h3>update</h3>
        <b>Description</b>
        <blockquote>This function is called once per frame to update game state.</blockquote>
        <b>Definition</b>
<blockquote><i>update(float dt)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>dt</i></td>
                <td>time between this frame and last frame in milliseconds</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="draw"></a>
        <h3>draw</h3>
        <b>Description</b>
        <blockquote>This function is called once per frame to draw game objects. Call render functions here.</blockquote>
        <b>Definition</b>
<blockquote><i>draw()</i></blockquote>
<br><br><br><br><h2>Custom callbacks</h2>
<h3>trigger callback</h3>
<b>Description</b><br>
<blockquote>This function is called when a trigger event occurs.</blockquote>
<br>
<b>Definition</b><br>
<blockquote><i>function triggerFunctionName(integer triggerId, string otherId, boolean onEnter, boolean onLeave, boolean onStay)</i></blockquote>
<br>
<b>Arguments</b><br>
<blockquote><table class="scripting">
<tbody><tr><td><i>integer</i></td><td><i>triggerId</i></td><td>id of the trigger node</td></tr>
<tr><td><i>integer</i></td><td><i>otherId</i></td><td>id of the other node</td></tr>
<tr><td><i>boolean</i></td><td><i>onEnter</i></td><td>on enter state</td></tr>
<tr><td><i>boolean</i></td><td><i>onLeave</i></td><td>on leave state</td></tr>
<tr><td><i>boolean</i></td><td><i>onStay</i></td><td>on stay state</td></tr>
</tbody></table></blockquote>
<br><br><br>

<a name="function_callback_contactCallback"></a><h3>contact callback</h3>
<b>Description</b><br>
<blockquote>This function is called when a contact event occurs.</blockquote>
<br>
<b>Definition</b><br>
<blockquote><i>function onContact(integer objectId, integer otherObjectId, boolean isStart, float normalForce, float tangentialForce)</i></blockquote>
<br>
<b>Arguments</b><br>
<blockquote><table class="scripting">
<tbody><tr><td><i>integer</i></td><td><i>objectId</i></td><td>id of the object</td></tr>
<tr><td><i>integer</i></td><td><i>otherObjectId</i></td><td>id of the other object</td></tr>
<tr><td><i>boolean</i></td><td><i>isStart</i></td><td>is start touch</td></tr>
<tr><td><i>float</i></td><td><i>normalForce</i></td><td>normal contact force</td></tr>
<tr><td><i>float</i></td><td><i>tangentialForce</i></td><td>tangential contact force</td></tr>
</tbody></table></blockquote>
<br><br><br>

<a name="function_callback_raycastCallback"></a><h3>raycast callback</h3>
<b>Description</b><br>
<blockquote>This function is called when a raycast hit event occurs.<br>
See <a href="http://gdn.giants-software.com/documentation_scripting.php#function_physics_raycastAll">raycastAll</a> and <a href="http://gdn.giants-software.com/documentation_scripting.php#function_physics_raycastClosest">raycastClosest</a></blockquote>
<br>
<b>Definition</b><br>
<blockquote><i>function raycastFunctionName(integer hitObjectId, float 
x, float y, float z, float distance, float nx, float ny, float nz, 
integer subShapeIndex)</i></blockquote>
<br>
<b>Arguments</b><br>
<blockquote><table class="scripting">
<tbody><tr><td><i>integer</i></td><td><i>hitObjectId</i></td><td>id of the hit node</td></tr>
<tr><td><i>float</i></td><td><i>x</i></td><td>world impact x</td></tr>
<tr><td><i>float</i></td><td><i>y</i></td><td>world impact y</td></tr>
<tr><td><i>float</i></td><td><i>z</i></td><td>world impact z</td></tr>
<tr><td><i>float</i></td><td><i>distance</i></td><td>distance</td></tr>
<tr><td><i>float</i></td><td><i>nx</i></td><td>world normal x (only valid if generateNormal was true)</td></tr>
<tr><td><i>float</i></td><td><i>ny</i></td><td>world normal y (only valid if generateNormal was true)</td></tr>
<tr><td><i>float</i></td><td><i>nz</i></td><td>world normal z (only valid if generateNormal was true)</td></tr>
<tr><td><i>integer</i></td><td><i>subShapeIndex</i></td><td>sub shape index of destructible object. Negative if normal rigid body (check for subShapeIndex &gt;= 0)</td></tr>
</tbody></table></blockquote>
<br>
<b>Return Values</b><br>
<blockquote><table class="scripting">
<tbody><tr><td><i>boolean</i></td><td><i>continue</i></td><td>continue raycasting</td></tr>
</tbody></table></blockquote>
<br>
<br><br><br>

<h3>create callback</h3>
<b>Description</b><br>
<blockquote>Create callbacks are called during i3d loads.</blockquote>
<br>
<b>Definition</b><br>
<blockquote><i>function createFunctionName(integer objectId)</i></blockquote>
<br>
<b>Arguments</b><br>
<blockquote><table class="scripting">
<tbody><tr><td><i>integer</i></td><td><i>objectId</i></td><td>id of the object</td></tr>
</tbody></table></blockquote>
<br>
<br><br><br>


<h3>timer callback</h3>
<b>Description</b><br>
<blockquote>This function is called when a timer event occurs.</blockquote>
<br>
<b>Definition</b><br>
<blockquote><i>function timerFunctionName()</i></blockquote>
<br>
<b>Return Values</b><br>
<blockquote><table class="scripting">
<tbody><tr><td><i>boolean</i></td><td><i>keepTimer</i></td><td>return false if the timer should be removed</td></tr>
</tbody></table></blockquote>
<br>
<br><br><br>


<h3>packet received callback</h3>
<b>Description</b><br>
<blockquote>This function is called when a network packet was received.</blockquote>
<br>
<b>Definition</b><br>
<blockquote><i>function packetReceived(packetType, timestamp, streamId)</i></blockquote>
<br>
<b>Arguments</b><br>
<blockquote><table class="scripting">
<tbody><tr><td><i>integer</i></td><td><i>packetType</i></td><td>type of the packet. All available types are stored in the Network table</td></tr>
<tr><td><i>integer</i></td><td><i>timestamp</i></td><td>timestamp of when the packet was sent</td></tr>
<tr><td><i>integer</i></td><td><i>streamId</i></td><td>id of the stream containing the packet data</td></tr>
</tbody></table></blockquote>
<br>
<br><br><br>



<a name="runtime_function_reference_textrendering"></a><h2>Text Rendering Reference</h2>
<br>

<a name="renderText"></a>
        <h3>renderText</h3>
        <b>Description</b>
        <blockquote>Render text to viewport. See <a href="http://gdn.giants-software.com/scriptingReferenceGeneral.php#asciiToUtf8">asciiToUtf8</a> to convert to utf8</blockquote>
        <b>Definition</b>
<blockquote><i>renderText(float x,float y,float size,string str)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y position [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>size</i></td>
                <td>font size</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>str</i></td>
                <td>utf8 encoded string to print</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setTextColor"></a>
        <h3>setTextColor</h3>
        <b>Description</b>
        <blockquote>Set the text color to be used for the following renderText calls</blockquote>
        <b>Definition</b>
<blockquote><i>setTextColor(float r,float g,float b,float a)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>r</i></td>
                <td>red color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g</i></td>
                <td>green color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b</i></td>
                <td>blue color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>a</i></td>
                <td>alpha (opacity) [0, 1]</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setTextBold"></a>
        <h3>setTextBold</h3>
        <b>Description</b>
        <blockquote>Set the text boldness to be used for the following renderText calls</blockquote>
        <b>Definition</b>
<blockquote><i>setTextBold(boolean isBold)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>boolean</i></td>
                <td><i>isBold</i></td>
                <td>bold state</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setTextAlignment"></a>
        <h3>setTextAlignment</h3>
        <b>Description</b>
        <blockquote>Set the text alignment to be used for the following renderText calls</blockquote>
        <b>Definition</b>
<blockquote><i>setTextAlignment(integer alignment)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>alignment</i></td>
                <td>alignment (RenderText.ALIGN_LEFT, RenderText.ALIGN_CENTER or RenderText.ALIGN_RIGHT)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setTextWidthScale"></a>
        <h3>setTextWidthScale</h3>
        <b>Description</b>
        <blockquote>Set the text scale width to be used for the following renderText calls</blockquote>
        <b>Definition</b>
<blockquote><i>setTextWidthScale(float scaleWidth)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>scaleWidth</i></td>
                <td>scale width</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setTextWidthScale"></a>
        <h3>setTextWidthScale</h3>
        <b>Description</b>
        <blockquote>Set the text scale width to be used for the following renderText calls</blockquote>
        <b>Definition</b>
<blockquote><i>setTextWidthScale(float scaleWidth)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>scaleWidth</i></td>
                <td>scale width</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getTextWidth"></a>
        <h3>getTextWidth</h3>
        <b>Description</b>
        <blockquote>Get text width</blockquote>
        <b>Definition</b>
<blockquote><i>getTextWidth(float fontSize,string utf8string)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>fontSize</i></td>
                <td>font size</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 encoded string</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>textWidth</i></td>
                <td>text width</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getTextHeight"></a>
        <h3>getTextHeight</h3>
        <b>Description</b>
        <blockquote>Get text height</blockquote>
        <b>Definition</b>
<blockquote><i>getTextHeight(float fontSize,string utf8string)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>fontSize</i></td>
                <td>font size</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 encoded string</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>textHeight</i></td>
                <td>text height</td>
                </tr>
<tr>
                <td><i>int</i></td>
                <td><i>numLines</i></td>
                <td>number of lines</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getTextLength"></a>
        <h3>getTextLength</h3>
        <b>Description</b>
        <blockquote>Get text length</blockquote>
        <b>Definition</b>
<blockquote><i>getTextLength(float fontSize,string utf8string,integer maxNumLines)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>fontSize</i></td>
                <td>font size</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 encoded string</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>maxNumLines</i></td>
                <td>max numbers of lines</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numChars</i></td>
                <td>number of characters</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getTextLineLength"></a>
        <h3>getTextLineLength</h3>
        <b>Description</b>
        <blockquote>Get text length</blockquote>
        <b>Definition</b>
<blockquote><i>getTextLineLength(float fontSize,string utf8string,float maxWidth)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>fontSize</i></td>
                <td>font size</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>utf8string</i></td>
                <td>utf8 encoded string</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>maxWidth</i></td>
                <td>max width</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numChars</i></td>
                <td>number of characters</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_terraindetailtransformgroup"></a><h2>Terrain Detail Transform Group Reference</h2>
<br>

<a name="setDensityNewTypeIndexMode"></a>
        <h3>setDensityNewTypeIndexMode</h3>
        <b>Description</b>
        <blockquote>TODO</blockquote>
        <b>Definition</b>
<blockquote><i>setDensityNewTypeIndexMode(integer transformId,integer newTypeIndexMode)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>newTypeIndexMode</i></td>
                <td>0=UPDATE_INDEX,1=KEEP_INDEX,2=SET_INDEX_TO_ZERO</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setDensityTypeIndexCompareMode"></a>
        <h3>setDensityTypeIndexCompareMode</h3>
        <b>Description</b>
        <blockquote>TODO</blockquote>
        <b>Definition</b>
<blockquote><i>setDensityTypeIndexCompareMode(integer transformId,integer indexComopareMode)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>indexComopareMode</i></td>
                <td>0=TYPE_COMPARE_EQUAL, 1=TYPE_COMPARE_NOTEQUAL, 2=TYPE_COMPARE_NONE</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setDensityReturnValueShift"></a>
        <h3>setDensityReturnValueShift</h3>
        <b>Description</b>
        <blockquote>TODO</blockquote>
        <b>Definition</b>
<blockquote><i>setDensityReturnValueShift(integer transformId,integer shift)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>shift</i></td>
                <td>shift value</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setDensityCompareParams"></a>
        <h3>setDensityCompareParams</h3>
        <b>Description</b>
        <blockquote>Sets density compare parameters</blockquote>
        <b>Definition</b>
<blockquote><i>setDensityCompareParams(integer transformId,string comparator,integer a,void b,void b,void b)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>comparator</i></td>
                <td>greater, between</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>a</i></td>
                <td>?</td>
                </tr>
<tr>
                <td><i>void</i></td>
                <td><i>b</i></td>
                <td>?</td>
                </tr>
<tr>
                <td><i>void</i></td>
                <td><i>b</i></td>
                <td>?</td>
                </tr>
<tr>
                <td><i>void</i></td>
                <td><i>b</i></td>
                <td>?</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setDensityMaskParams"></a>
        <h3>setDensityMaskParams</h3>
        <b>Description</b>
        <blockquote>Sets density mask</blockquote>
        <b>Definition</b>
<blockquote><i>setDensityMaskParams(integer transformId,string comparator,integer a,void b,void b,void b)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>string</i></td>
                <td><i>comparator</i></td>
                <td>greater, between</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>a</i></td>
                <td>?</td>
                </tr>
<tr>
                <td><i>void</i></td>
                <td><i>b</i></td>
                <td>?</td>
                </tr>
<tr>
                <td><i>void</i></td>
                <td><i>b</i></td>
                <td>?</td>
                </tr>
<tr>
                <td><i>void</i></td>
                <td><i>b</i></td>
                <td>?</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getDensityAtWorldPos"></a>
        <h3>getDensityAtWorldPos</h3>
        <b>Description</b>
        <blockquote>Get density at world position</blockquote>
        <b>Definition</b>
<blockquote><i>getDensityAtWorldPos(integer transformId,float x,float z)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>density</i></td>
                <td>density</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getDensityParallelogramArea"></a>
        <h3>getDensityParallelogramArea</h3>
        <b>Description</b>
        <blockquote>Get density parallelogram area</blockquote>
        <b>Definition</b>
<blockquote><i>getDensityParallelogramArea(integer transformId,float x,float z,float dX1,float dZ1,float dX2,float dZ2)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX1</i></td>
                <td>x value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ1</i></td>
                <td>z value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX2</i></td>
                <td>x value of 2nd direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ2</i></td>
                <td>z value of 2nd direction</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>density</i></td>
                <td>density</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getDensityParallelogram"></a>
        <h3>getDensityParallelogram</h3>
        <b>Description</b>
        <blockquote>Get density parallelogram</blockquote>
        <b>Definition</b>
<blockquote><i>getDensityParallelogram(integer transformId,float x,float
 z,float dX1,float dZ1,float dX2,float dZ2,integer firstChannel,integer 
numChannels)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX1</i></td>
                <td>x value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ1</i></td>
                <td>z value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX2</i></td>
                <td>x value of 2nd direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ2</i></td>
                <td>z value of 2nd direction</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>firstChannel</i></td>
                <td>first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>density</i></td>
                <td>density</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numPixels</i></td>
                <td>number of pixels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>totalNumPixels</i></td>
                <td>total number of pixels</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setDensityParallelogram"></a>
        <h3>setDensityParallelogram</h3>
        <b>Description</b>
        <blockquote>Set density parallelogram</blockquote>
        <b>Definition</b>
<blockquote><i>setDensityParallelogram(integer transformId,float x,float
 z,float dX1,float dZ1,float dX2,float dZ2,integer firstChannel,integer 
numChannels,integer value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX1</i></td>
                <td>x value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ1</i></td>
                <td>z value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX2</i></td>
                <td>x value of 2nd direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ2</i></td>
                <td>z value of 2nd direction</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>firstChannel</i></td>
                <td>first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>density</i></td>
                <td>density</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numPixels</i></td>
                <td>number of pixels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>totalNumPixels</i></td>
                <td>total number of pixels</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getDensityMaskedParallelogram"></a>
        <h3>getDensityMaskedParallelogram</h3>
        <b>Description</b>
        <blockquote>Get density masked parallelogram</blockquote>
        <b>Definition</b>
<blockquote><i>getDensityMaskedParallelogram(integer transformId,float 
x,float z,float dX1,float dZ1,float dX2,float dZ2,integer 
firstChannel,integer numChannels,integer id,integer 
maskFirstChannel,integer maskNumChannels)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX1</i></td>
                <td>x value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ1</i></td>
                <td>z value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX2</i></td>
                <td>x value of 2nd direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ2</i></td>
                <td>z value of 2nd direction</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>firstChannel</i></td>
                <td>first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>id</i></td>
                <td>id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>maskFirstChannel</i></td>
                <td>mark first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>maskNumChannels</i></td>
                <td>mask number of channels</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>density</i></td>
                <td>density</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numPixels</i></td>
                <td>number of pixels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>totalNumPixels</i></td>
                <td>total number of pixels</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setDensityMaskedParallelogram"></a>
        <h3>setDensityMaskedParallelogram</h3>
        <b>Description</b>
        <blockquote>Set density masked parallelogram</blockquote>
        <b>Definition</b>
<blockquote><i>setDensityMaskedParallelogram(integer transformId,float 
x,float z,float dX1,float dZ1,float dX2,float dZ2,integer 
firstChannel,integer numChannels,integer id,integer 
maskFirstChannel,integer maskNumChannels,integer mask id)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX1</i></td>
                <td>x value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ1</i></td>
                <td>z value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX2</i></td>
                <td>x value of 2nd direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ2</i></td>
                <td>z value of 2nd direction</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>firstChannel</i></td>
                <td>first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>id</i></td>
                <td>id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>maskFirstChannel</i></td>
                <td>mark first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>maskNumChannels</i></td>
                <td>mask number of channels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>mask id</i></td>
                <td>mask id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>density</i></td>
                <td>density</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numPixels</i></td>
                <td>number of pixels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>totalNumPixels</i></td>
                <td>total number of pixels</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="addDensityParallelogram"></a>
        <h3>addDensityParallelogram</h3>
        <b>Description</b>
        <blockquote>Set density masked parallelogram</blockquote>
        <b>Definition</b>
<blockquote><i>addDensityParallelogram(integer transformId,float x,float
 z,float dX1,float dZ1,float dX2,float dZ2,integer firstChannel,integer 
numChannels,integer value)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX1</i></td>
                <td>x value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ1</i></td>
                <td>z value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX2</i></td>
                <td>x value of 2nd direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ2</i></td>
                <td>z value of 2nd direction</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>firstChannel</i></td>
                <td>first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>value</i></td>
                <td>value</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>density</i></td>
                <td>density</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChangedPixels</i></td>
                <td>number of changed pixels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>totalDelta</i></td>
                <td>total number of changed pixels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>totalNumPixels</i></td>
                <td>total number of pixels</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="addDensityMaskedParallelogram"></a>
        <h3>addDensityMaskedParallelogram</h3>
        <b>Description</b>
        <blockquote>Add density masked parallelogram</blockquote>
        <b>Definition</b>
<blockquote><i>addDensityMaskedParallelogram(integer transformId,float 
x,float z,float dX1,float dZ1,float dX2,float dZ2,integer 
firstChannel,integer numChannels,integer id,integer 
maskFirstChannel,integer maskNumChannels,integer mask id)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX1</i></td>
                <td>x value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ1</i></td>
                <td>z value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX2</i></td>
                <td>x value of 2nd direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ2</i></td>
                <td>z value of 2nd direction</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>firstChannel</i></td>
                <td>first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>id</i></td>
                <td>id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>maskFirstChannel</i></td>
                <td>mark first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>maskNumChannels</i></td>
                <td>mask number of channels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>mask id</i></td>
                <td>mask id</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>density</i></td>
                <td>density</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChangedPixels</i></td>
                <td>number of changed pixels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>totalDelta</i></td>
                <td>total number of changed pixels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>totalNumPixels</i></td>
                <td>total number of pixels</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="setTypeIndexMaskedParallelogram"></a>
        <h3>setTypeIndexMaskedParallelogram</h3>
        <b>Description</b>
        <blockquote>Set indexed mask parallelogram type</blockquote>
        <b>Definition</b>
<blockquote><i>setTypeIndexMaskedParallelogram(integer transformId,float
 x,float z,float dX1,float dZ1,float dX2,float dZ2,integer mask 
id,integer firstChannel,integer numChannels)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX1</i></td>
                <td>x value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ1</i></td>
                <td>z value of 1st direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dX2</i></td>
                <td>x value of 2nd direction</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dZ2</i></td>
                <td>z value of 2nd direction</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>mask id</i></td>
                <td>mask id</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>firstChannel</i></td>
                <td>first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numChangedPixels</i></td>
                <td>number of changed pixels</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>totalNumPixels</i></td>
                <td>total number of pixels</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getDensityRegion"></a>
        <h3>getDensityRegion</h3>
        <b>Description</b>
        <blockquote>Get density region</blockquote>
        <b>Definition</b>
<blockquote><i>getDensityRegion(integer transformId,float x,float z,float width,float height,integer firstChannel,integer numChannels)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>width</i></td>
                <td>width</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>height</i></td>
                <td>height</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>firstChannel</i></td>
                <td>first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>density sum</i></td>
                <td>density sum</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getDensityRegionWorld"></a>
        <h3>getDensityRegionWorld</h3>
        <b>Description</b>
        <blockquote>Get density region world</blockquote>
        <b>Definition</b>
<blockquote><i>getDensityRegionWorld(integer transformId,float x,float z,float width,float height,integer firstChannel,integer numChannels)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>width</i></td>
                <td>width</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>height</i></td>
                <td>height</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>firstChannel</i></td>
                <td>first channel</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>type</i></td>
                <td>type</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getDensityMapFileName"></a>
        <h3>getDensityMapFileName</h3>
        <b>Description</b>
        <blockquote>Get density map file name</blockquote>
        <b>Definition</b>
<blockquote><i>getDensityMapFileName(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>fileName</i></td>
                <td>file name</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getDensityMapSize"></a>
        <h3>getDensityMapSize</h3>
        <b>Description</b>
        <blockquote>Get density map file name</blockquote>
        <b>Definition</b>
<blockquote><i>getDensityMapSize(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>mapSize</i></td>
                <td>map size</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getTerrainDetailNumChannels"></a>
        <h3>getTerrainDetailNumChannels</h3>
        <b>Description</b>
        <blockquote>Get number of terrain detail channels</blockquote>
        <b>Definition</b>
<blockquote><i>getTerrainDetailNumChannels(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>numChannels</i></td>
                <td>number of channels</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getTerrainDetailViewDistance"></a>
        <h3>getTerrainDetailViewDistance</h3>
        <b>Description</b>
        <blockquote>Get terrain detail view distance</blockquote>
        <b>Definition</b>
<blockquote><i>getTerrainDetailViewDistance(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>float</i></td>
                <td><i>viewDistance</i></td>
                <td>view distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="getTerrainDetailName"></a>
        <h3>getTerrainDetailName</h3>
        <b>Description</b>
        <blockquote>Get terrain detail name</blockquote>
        <b>Definition</b>
<blockquote><i>getTerrainDetailName(integer transformId)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>transformId</i></td>
                <td>id of transform object</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>string</i></td>
                <td><i>viewDistance</i></td>
                <td>view distance</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br>

<a name="runtime_function_reference_tyretracs"></a><h2>Tyre Track Reference</h2>
<br>

<a name="createTrack"></a>
        <h3>createTrack</h3>
        <b>Description</b>
        <blockquote>Creates a tyre track system</blockquote>
        <b>Definition</b>
<blockquote><i>createTrack(integer systemId,float width,integer atlasIndex)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>systemId</i></td>
                <td>id of tyre track object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>width</i></td>
                <td>Tyre track width</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>atlasIndex</i></td>
                <td>Index of Atlas</td>
                </tr>
</tbody></table>
            </blockquote>
<b>Return Values</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>trackid</i></td>
                <td>id of tyre track</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="destroyTrack"></a>
        <h3>destroyTrack</h3>
        <b>Description</b>
        <blockquote>Destroys a tyre track system</blockquote>
        <b>Definition</b>
<blockquote><i>destroyTrack(integer systemid,integer trackid)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>systemid</i></td>
                <td>id of tyre track object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>trackid</i></td>
                <td>id of tyre track</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="addTrackPoint"></a>
        <h3>addTrackPoint</h3>
        <b>Description</b>
        <blockquote>Adds a tyre track position</blockquote>
        <b>Definition</b>
<blockquote><i>addTrackPoint(integer systemid,integer trackid,float 
x,float y,float z,float x,float y,float z,float r,float g,float b,float 
a,float uw,float dTheta)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>systemid</i></td>
                <td>id of tyre track object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>trackid</i></td>
                <td>id of tyre track</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x position of track object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y position of tyre track object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z position of tyre track object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>x</i></td>
                <td>x part of up vector</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>y</i></td>
                <td>y part of up vector</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>z</i></td>
                <td>z part of up vector</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>r</i></td>
                <td>red color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>g</i></td>
                <td>green color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>b</i></td>
                <td>blue color component [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>a</i></td>
                <td>alpha (used to determine the amount of dirt) [0, 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>uw</i></td>
                <td>Bumpiness [0 1]</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>dTheta</i></td>
                <td>Wheel dtheta/dt (used to determine forward/backward motion of wheel)</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="cutTrack"></a>
        <h3>cutTrack</h3>
        <b>Description</b>
        <blockquote>Relinquish Track Segments</blockquote>
        <b>Definition</b>
<blockquote><i>cutTrack(integer systemid,integer trackid)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>systemid</i></td>
                <td>id of tyre track object</td>
                </tr>
<tr>
                <td><i>integer</i></td>
                <td><i>trackid</i></td>
                <td>id of tyre track</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="eraseParallelogram"></a>
        <h3>eraseParallelogram</h3>
        <b>Description</b>
        <blockquote>Erase Segments Inside Parallelogram</blockquote>
        <b>Definition</b>
<blockquote><i>eraseParallelogram(integer systemid,float 
startWorldX,float startWorldZ,float widthWorldX,float widthWorldZ,float 
heightWorldX,float heightWorldZ)</i></blockquote>
<b>Arguments</b>
            <blockquote>
            <table class="scripting">
<tbody><tr>
                <td><i>integer</i></td>
                <td><i>systemid</i></td>
                <td>id of tyre track object</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>startWorldX</i></td>
                <td>Parallelogram x start position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>startWorldZ</i></td>
                <td>Parallelogram y start position in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>widthWorldX</i></td>
                <td>Parallelogram x width in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>widthWorldZ</i></td>
                <td>Parallelogram z width in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>heightWorldX</i></td>
                <td>Parallelogram x height in world space</td>
                </tr>
<tr>
                <td><i>float</i></td>
                <td><i>heightWorldZ</i></td>
                <td>Parallelogram z height in world space</td>
                </tr>
</tbody></table>
            </blockquote>
<br><br><br><br><a name="runtime_foundation_reference"></a><h2>Foundation Reference</h2>
<br><a name="runtime_foundation_reference_scenegraph"></a><h2>Scenegraph</h2><br>
<h3>translate</h3>
<b>Description</b><br>
<blockquote>Translate object (transform)</blockquote><br>
<b>Definition</b><br>
<blockquote><i>function translate(integer objectId, float dx, float dy, float dz)</i></blockquote><br>
<b>Arguments</b><br>
<blockquote>
    <table class="scripting">
        <tbody><tr>
            <td><i>integer</i></td>
            <td><i>objectId</i></td>
            <td>object id (transform)</td>
        </tr>
        <tr>
            <td><i>float</i></td>
            <td><i>dx</i></td>
            <td>x relative translation value</td>
        </tr>
        <tr>
            <td><i>float</i></td>
            <td><i>dy</i></td>
            <td>y relative translation value</td>
        </tr>
        <tr>
            <td><i>float</i></td>
            <td><i>dz</i></td>
            <td>z relative translation value</td>
        </tr>
    </tbody></table>
</blockquote><br>
<b>Source file</b><br>
<blockquote>shared/foundation/scenegraph.lua</blockquote>
<br><br><br><br>

<h3>rotate</h3>
<b>Description</b><br>
<blockquote>Rotate object (transform)</blockquote><br>
<b>Definition</b><br>
<blockquote><i>function rotate(integer objectId, float dx, float dy, float dz)</i></blockquote><br>
<b>Arguments</b><br>
<blockquote>
    <table class="scripting">
        <tbody><tr>
            <td><i>integer</i></td>
            <td><i>objectId</i></td>
            <td>object id (transform)</td>
        </tr>
        <tr>
            <td><i>float</i></td>
            <td><i>dx</i></td>
            <td>x relative rotation value</td>
        </tr>
        <tr>
            <td><i>float</i></td>
            <td><i>dy</i></td>
            <td>y relative rotation value</td>
        </tr>
        <tr>
            <td><i>float</i></td>
            <td><i>dz</i></td>
            <td>z relative rotation value</td>
        </tr>
    </tbody></table>
</blockquote><br>
<b>Source file</b><br>
<blockquote>shared/foundation/scenegraph.lua</blockquote>
<br><br><br><br>

<h3>toggleVisibility</h3>
<b>Description</b><br>
<blockquote>Toggle visibility of a scenegraph object</blockquote><br>
<b>Definition</b><br>
<blockquote><i>function toggleVisibility(integer objectId)</i></blockquote><br>
<b>Arguments</b><br>
<blockquote>
    <table class="scripting">
        <tbody><tr>
            <td><i>integer</i></td>
            <td><i>objectId</i></td>
            <td>id of scenegraph object</td>
        </tr>
    </tbody></table>
</blockquote><br>
<b>Source file</b><br>
<blockquote>shared/foundation/scenegraph.lua</blockquote>
<br><br><br><br>

<h3>printScenegraph</h3>
<b>Description</b><br>
<blockquote>Prints scenegraph object</blockquote><br>
<b>Definition</b><br>
<blockquote><i>function printScenegraph(integer objectId)</i></blockquote><br>
<b>Arguments</b><br>
<blockquote>
    <table class="scripting">
        <tbody><tr>
            <td><i>integer</i></td>
            <td><i>objectId</i></td>
            <td>id of scenegraph object</td>
        </tr>
    </tbody></table>
</blockquote><br>
<b>Source file</b><br>
<blockquote>shared/foundation/scenegraph.lua</blockquote>
<br><br><br><br>

<a name="runtime_foundation_reference_input"></a><h2>Input</h2>
<br>

<h3>Key values</h3>
<b>Description</b><br>
<blockquote>Key values used by keyEvent function</blockquote><br>
<b>Definition</b><br>
<blockquote>
    <table class="scripting">
        <tbody><tr>
            <td><i>Variable</i></td>
            <td>Value</td>
            <td>Description</td>
        </tr>
        <tr>
            <td><i>Input.KEY_a</i></td>
            <td><i>97</i></td>
            <td>Value of key a</td>
        </tr>
        <tr>
            <td><i>Input.KEY_b</i></td>
            <td><i>98</i></td>
            <td>Value of key b</td>
        </tr>
        <tr>
            <td><i>...</i></td>
            <td><i>...</i></td>
            <td>..</td>
        </tr>
        <tr>
            <td><i>Input.KEY_z</i></td>
            <td><i>122</i></td>
            <td>Value of key z</td>
        </tr>
        <tr>
            <td><i>Input.KEY_esc</i></td>
            <td><i>27</i></td>
            <td>Value of escape key</td>
        </tr>
    </tbody></table>
</blockquote><br>
<b>Source file</b><br>
<blockquote>shared/foundation/input.lua</blockquote>
<br><br><br><br>

<h3>Mouse values</h3>
<b>Description</b><br>
<blockquote>Mouse values used by mouseEvent function</blockquote><br>
<b>Definition</b><br>
<blockquote>
    <table class="scripting">
        <tbody><tr>
            <td><i>Variable</i></td>
            <td>Value</td>
            <td>Description</td>
        </tr>
        <tr>
            <td><i>Input.MOUSE_BUTTON_NONE</i></td>
            <td><i>0</i></td>
            <td>none mouse button</td>
        </tr>
        <tr>
            <td><i>Input.MOUSE_BUTTON_LEFT</i></td>
            <td><i>1</i></td>
            <td>left mouse button</td>
        </tr>
        <tr>
            <td><i>Input.MOUSE_BUTTON_MIDDLE</i></td>
            <td><i>2</i></td>
            <td>middle mouse button</td>
        </tr>
        <tr>
            <td><i>Input.MOUSE_BUTTON_RIGHT</i></td>
            <td><i>3</i></td>
            <td>right mouse button</td>
        </tr>
    </tbody></table>
</blockquote><br>
<b>Source file</b><br>
<blockquote>shared/foundation/input.lua</blockquote>
<br><br><br><br>

<h3>Gamepad/Joystick values</h3>
<b>Description</b><br>
<blockquote>Gamepad/Joystick axis values used by getInputAxis function</blockquote>
<br>
<b>Definition</b><br>
<blockquote>
    <table class="scripting">
        <tbody><tr><td><i>Variable</i></td>
            <td>Value</td>
            <td>Description</td>
        </tr>
        <tr>
            <td><i>Input.AXIS_X</i></td>
            <td><i>0</i></td>
            <td>x axis</td>
        </tr>
        <tr>
            <td><i>Input.AXIS_Y</i></td>
            <td><i>1</i></td>
            <td>y axis</td>
        </tr>
        <tr>
            <td><i>Input.AXIS_Z</i></td>
            <td><i>2</i></td>
            <td>z axis</td>
        </tr>
        <tr>
            <td><i>Input.AXIS_W</i></td>
            <td><i>3</i></td>
            <td>w axis</td>
        </tr>
    </tbody></table>
</blockquote><br>
<b>Source file</b><br>
<blockquote>shared/foundation/input.lua</blockquote>
<br><br><br><br>
<h1 id="exporter" style="page-break-before:always">Exporter</h1>
<br><br>
<a name="exporter_maya_installation"><h2>Autodesk Maya i3d exporter</h2></a>
<br><br>
To generate i3d files of your 3d-models you can use the exporter plugin for Autodesk Maya.
The GIANTS Editor and the GIANTS Engine can only load i3d files. This section of the documentation will show you,
how to export i3d files with the I3D exporter plugins in Autodesk Maya.
<br><br>
The first thing you probably want to do is to install the exporter plugins in Autodesk Maya.
<br><br>
<h3>Installing I3D exporter plugin</h3>

<b>Step 1</b><br>
Place the files I3DExportUI.mel and I3DExporter2014-x64.mll into the folder
"C:/Documents and Settings/&lt;USERNAME&gt;/My Documents/maya/scripts".<br>
<br>
<b>Step 2</b><br>
Start Maya and open the Script Editor window.<br>
<br>

<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/exporter_install.png" alt="">
<br>
<br>

<b>Step 3</b><br>
Select custom shelf tab<br>
<br>

<b>Step 4</b><br>
Type the following commands in the lower portion of the Script Editor:<br>
<br>

    <div id="code">
        loadPlugin -qt "C:/Documents and Settings/&lt;USERNAME&gt;/My Documents/maya/scripts/I3DExporter2014-x64.mll";<br>
        source I3DExportUI;<br>
        I3DExport;<br>
    </div>
Highlight the commands, then use the middle mouse button, to drag the highlighted MEL commands to the shelf.<br>
<br>
<b>Note:</b>
<ul>
    <li>Maya don't like backslashes so replace them with slashes.</li>
    <li>Replace <i>&lt;USERNAME&gt;</i> with your username.</li>
    <li>The file path can be different depending on the language of your operating system
    (eg. C:/Documents and Settings/&lt;USERNAME&gt;/My Documents/maya/scripts/I3DExporter2014-x64.mll)</li>
</ul>
<br>
<b>Step 5</b><br>
Copy the I3D_icon.bmp into the folder "C:/Documents and Settings/&lt;USERNAME&gt;/My Documents/maya/2014/prefs/icons".
Edit shelf to replace the default icon with the one enclosed.<br>
<br>
<br>

<h3>Preparing your 3d-model for export</h3>

Before you can actually use the exporter, it’s wise to check certain things with your 3d-model in Maya
which can cause issues later in the editor or the engine.<br>
<br>
In the Channel-Box you see the transformations of your selected object.<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/exporter_scale.png" alt=""><br>
<br>
The ScaleX, ScaleY and ScaleZ of your object should be 1 1 1.<br>

If you just plan to use this object as a static mesh or with no physics at all
you could export it with any scale you want, but if you want to simulate your
object in the engine (as a dynamic or kinematic rigid body object) the scale must
be 1 1 1 otherwise the physics simulation will produce incorrect results.<br>

<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/exporter_freeze.png" alt=""><br>
<br>

If you have an object with scale, you can easily get rid of the scale. Go to the
Modify-Panel, and select the option box right of the Freeze Transformations.
The Freeze Transformations dialog window opens. You can select the checkbox scale
and hit apply.<br>
<br>
<b>Note:</b> Please refer to the artwork guide for further information about asset conditioning for the engine.<br>
<br>
<br>

<h3>I3D exporter usage</h3>

Start the exporter dialog with a click on the I3D exporter icon you have
created on your custom shelf (<i>see Installing I3D exporter plugins</i>)<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/exporter_export.png" alt=""><br>
<br>
<b>Export Panel</b><br>
The export panel is quite self-explanatory. In the export options part you can include
and exclude parts from exporting (IK, Animation, Shapes, Nurbs Curves, Lights,
Cameras, Particle Systems and/or Default Cameras). The Shape Export Subparts
section allows you to control which subshape attributes are exported (Normals,
vertex Colors, Texture Coordinates and/or Skin Weights).<br>
<br>
The miscellaneous section has this options:<br>
<ul>
    <li><b>Verbose</b>, display verbose information in output window during the export</li>
    <li><b>Relative Paths</b>, generate relative paths for texture files</li>
    <li><b>Float Epsilon</b>, truncate values within epsilon range to zero. Epsilon: [-1e-5, 1e-5]</li>
</ul>
<br>

<b>Buttons</b>
<ul>
    <li><b>Preview</b>, exports whole scene to a temporary file and starts the editor</li>
    <li><b>Export All</b>, exports the whole scene</li>
    <li><b>Export</b>, exports only currently selected objects</li>
</ul>
<br>

<b>Attributes Panel</b><br>
In the attributes panel you can load and save attributes of your objects those
attributes will be saved into the Maya file and are translated into the correct
i3d attributes when you export to a i3d file.<br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/exporter_attributes.png" alt=""><br>
<br>
The first thing you have to do here is, that you must press the "Load Current"
button at the bottom in order to load the attibutes of your object. Otherwise
everything is unchecked and is not showing the attributes that are currently active
on you object. So be sure, to hit this button first.<br>
<br>
<b>Current Node</b><br>
Here you can see the name of your current working object.<br>
<br>
<b>Rigid Body</b><br>
This section handles all the attributes regarding to physics rigid bodies.<br>
<br>
<b>Joint</b><br>
Here you can define your joint-attributes in detail. One thing you might miss
here are the joint limits, they must be defined within Maya, since your object
can have many joints with different limits. You can define the limit of a joint
angle by the limit informations of your transform-object.<br>
<br>
<b>Rendering</b><br>
<ul>
    <li><b>Occlusion Culling</b>, Objects that are entirely covered by other objects
        may be culled and thus not rendered at all. This option can increase
        the rendering performace in the engine if you have big objects
        containing much smaller objects, for instance a house. If you activate
        the occlusion culling on the root-node of the house all its childs are also
        not rendered, if the house is complete covered behind other objects. However,
        you should not apply this attribute on too many small objects because it is
        one more task for the engine.
    </li>
    <li><b>Non Renderable</b>, With this option a objects will not be rendered at any time.
        Use this option for collision geometry. If you have
        complex objects with sub-objects attached, be careful with this checkbox since
        this attribute is also going to affect all the attached children.
    </li>
    <li><b>Clip Distance</b>, This value defines how far the object is still going to be
        rendered. If you have a large scene and tons of objects this is a powerful
        method to keep your framerate high.
    </li>
</ul>

After you have defined all your attributes, you have to hit the "Save Current"
button to save your attributes. If you have lots of objects with the same
attributes, you can select them all, and then use apply selected to apply the
current settings to all the selected objects. Remove current resets the
attributes to the default values and if you want do reset multiple objects,
you can select them all and hit "Remove Selected"<br>
<br>
<b>Validate Panel</b><br>
With this panel you can validate if one of your objects have an incorrect
pivot. In Maya your pivot can have a local and a world space attribute which
you can find in the attribute editor on the right side. The x y and z values of
both, local and world-space have to be 0 0 0 otherwise you will get a warning.
You can fix incorrect pivots with the FreeezeToPivot option in the tools panel.<br>
<br>
<b>Tools</b><br>
If you have validated your objects and a local pivot was not set to 0 0 0, you can
quickly fix affected objects with the FreeezeToPivot button.<br>
<br>
<br>

<a name="exporter_maya_material"><h3>Material export options</h3></a>

<b>Mapping between Maya and i3d material attributes</b><br>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/export_material.gif" alt="">
<br>
<br>
<b>Material Attributes</b><br>
<ul>
    <li><b>Custom Shader:</b> Use the attribute name 'customShader' with a string type to add a custom shader to the material.<br>
        The value specifies the path of the custom shader xml file relative to the maya file.
    </li>
    <li><b>Custom Shader Parameter:</b> Use the attribute name 
'customParameter_&lt;parameterName&gt;' with a string type to specify 
the value of a custom shader parameter. The values should be space 
separated.<br>
        &lt;parameterName&gt; is the name of the parameter as specified in the custom shader.
    </li>
    <li><b>Custom Shader Texture:</b>: Use the attribute 'customTexture_&lt;textureName&gt;' with a string type to specify the texture of a custom shader texture.<br>
        The value specifies the path of the texture file relative to the maya file.<br>
        &lt;textureName&gt; is the name of the texture as specified in the custom shader.
    </li>
</ul>

<!-- 3DS MAX EXPORTER DOCUMENTATION BEGIN -->
<a name="exporter_max_installation"><h2>Autodesk 3ds MAX i3d exporter</h2></a>
<br>
<h3>Installing I3D exporter plugin</h3>
<p>Copy the plugin file into this directory:<br>
    <i>%3DSMAX installation path%/plugins/</i><br>
    <br>
On a Windows 7 (english version) this would be the path <b>C:\Program Files\Autodesk\3ds Max 2014\plugins</b> for example.</p>

<br>
<h3>How to export your 3ds MAX documents as I3D</h3>
<p>Simply select "Export" from the file menu within 3DS max and select 
"GIANTS I3D (*.i3d)" as the file type. After selecting the output file, 
you'll be prompted with the export options dialog.</p>
<h3>Export options dialog</h3>
<p>The export options dialog will present you with important options. These control how your scene file is exported:</p>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/maxExporter_ExportSettings.png">
<p>These options are available:</p>
<ol>
    <li>Will export scene geometry</li>
    <li>Will export point, spot and directional lights</li>
    <li>By default, empty transform groups (without meaningful childs) 
are ignored. Check this to disable omission of empty transform groups 
during export</li>
    <li>Will export camera nodes</li>
    <li>Will export animations</li>
    <li>Check this to add per-vertex normal to the exported scene geometry</li>
    <li>Check this to add per-vertex texture U/V coordinates to the exported scene geometry</li>
    <li>Check this to add per-vertex colors to the exported scene geometry</li>
    <li>If checked, the resulting I3D file will be opened (usually the 
GIANTS editor will open it, but if it is not installed you'll be 
prompted to select a program to open the file with)</li>
    <li>Enables relative paths for texture references. If enabled, all 
texture paths are relative from the I3D target path. Of course, all 
textures should reside on the same drive or you'll get absolute paths 
anyways.</li>
    <li>Forces small values near zero to be rounded to zero.</li>
    <li>The timeline is samples each frame instead just at keyframe positions. Use this if you have extremely sparse <b>curve</b> keys (bezier, etc.), as the engine won't make use of the keyframe tangents</li>
    <li>Will remove keyframes which are not relevant (e.g. when three equal positions occur in a row, the middle one could be omitted)</li>
    <li>Will load an animation definition from a text file (you'll be prompted with a file selector)</li>
    <li>Enter animation clip definitions here (see below for format explanation). Used only when animation export is actually enabled</li>
    <li>Hit this button to actually export the I3D</li>
    <li>Cancels export process</li>
</ol>
<h3>Animation export</h3>
<p>To export animations, the 3ds MAX timeline has to be split into 
individual clips. This is accomplished by entering textual information 
into the "Animation Definition" text field or load this information from
 a text file. The textual information defines one clip per line. 
Comments can be inserted by prefixing the line with a hash. Example:</p>
    <pre>        # The line format is:
        # clipname firstframe lastframe
        # Frame numbers are inclusive: [firstframe, lastframe]

        # Walking animation
        walk 0 30

        # jumping animation
        jump 31 60

        # running
        run 61 120
    </pre>
<p>This animation definition will divide the 3ds MAX timeline into three
 clips named "walk", "jump" and "run" which can be accessed individually
 in the I3D.
</p>
<h3>Unit setup</h3>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/maxExporter_UnitSetup.png">
<p>The I3D exporter will act unit-agnostic and react to the unit 
settings in your 3ds MAX scene file. If configured properly, the output 
file will always have the right scaling.</p>
<h3>I3D custom attributes</h3>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/maxExporter_addI3dUtilitiesButton.png">
<p>The export plugin also exposes custom attributes to configure special
 I3D flags for nodes in the scenegraph. To change flags and options for a
 specific nodes, the I3D attributes have to be attached to the node. To 
do this, enable the "I3D Utilities" panel, which will present you with a
 big "Add I3D attributes" button. All you have to do then is to select a
 node and hit the button. There is a separate set of attributes for 
lights, as they have other options than the normal nodes.</p>
<h3>Supported node attributes</h3>
<p>Here, all supported attributes of 3ds MAX nodes are depicted. Values 
from the I3D rollouts are always supported, values from the stock 
attributes are marked with a number and explained below.</p>
<p>To find out more about the actual meaning of the attributes in the I3D please consider the <a href="http://gdn.giants-software.com/documentation_i3d.php">I3D documentation</a>.</p>
<div style="overflow: auto">
	<div style="float: left; padding: 5px; max-width: 190px;">
		<h4>Generic</h4>
		<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/maxExporter_AttributesRollout.png"><br>
		Generic I3D attributes
    </div>
	<div style="float: left; padding: 5px; max-width: 190px;">
		<h4>Cameras</h4>
		<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/maxExporter_CameraSetup.htm"><br>
		Camera attributes
		<ol>
            <li>FOV angle</li>
            <li>Near clip plane</li>
            <li>Far clip plane</li>
        </ol>
    </div>
	<div style="float: left; padding: 5px; max-width: 190px;">
		<h4>Lights</h4>
		<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/maxExporter_LightsSetup.png"><br>
		Light attributes
		<ol>
            <li>Light type</li>
            <li>Light color</li>
            <li>Inner cone angle</li>
            <li>Outer cone angle</li>
            <li>Attenuation distance</li>
            <li>I3D specific attributes</li>
        </ol>
    </div>
</div>
<h3>Material mapping</h3>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/maxExporter_MaterialSetup.png">
<ol>
    <li>Ambient color</li>
    <li>Diffuse color</li>
    <li>Specular color</li>
    <li>Specular level</li>
    <li>Glossiness / specular power</li>
    <li>Albedo map</li>
    <li>Glossmap</li>
    <li>Bumpmap</li>
    <li>Bumpmap opacity controls bump depth for I3D material</li>
    <li>Opacity maps to the alpha channel of the I3D material diffuse color</li>
</ol>
<p>The I3D exporter will automatically fetch material information from 
the 3ds MAX standard material. The ambient, diffuse and specular colors 
as well as the specular power (glossiness) and specular level are 
directly transferred into the I3D material. The opacity level will be 
exported as the alpha channel of the diffuse color. From the texture map
 channels, the diffuse channel defines the albedo map, either the 
specula, shininess or shininess strength channel is used as the gloss 
map and the bumpmap channel is uses as the normalmap. The bumpDepth 
parameter of the bumpmap is derived from the opacity of the bump map 
channel and is calculated as bumpDepth = opacity * 3.3333</p>
<h3>Node export order</h3>
<p>As 3ds MAX does not allow strict ordering of nodes on the same 
hierarchy level, the I3D exporter will sort the nodes by their names. 
Because it's not always wanted that nodes are named awkwardly, the I3D 
exporter allows for prefixes in the form "prefix.name" (.e.g "A.house", 
"B.house", "C.house", ...). The part before the dot and the dot itself 
will be removed from the node name in the exported I3D (so the examples 
will all be named "house" in the I3D file). That way, you can choose the
 export order by changing the prefix without being worried that you have
 to mangle the names in the I3D.</p>
<h3>LOD export</h3>
<p>To define LODs for a specific node, you'll have to attach the I3D 
attributes to it. The LOD view distances can be defined there. The 
actual geometry nodes must be directly parented under the LOD node and 
sorted descendent by their LOD level. So, if "LODHouse" is the node with
 the LOD attributes configured to have 1 additional LOD, you'll need 
"A.house" and "B.house" parented to the "LODHouse" node. A.house will 
become the first LOD and B.house the second LOD level.</p>
<!-- 3DS MAX EXPORTER DOCUMENTATION END -->
<br>
<br>
<a name="exporter_blender_installation"><h2>Blender i3d exporter</h2></a>

<h3>Installing I3D exporter plugin (Windows)</h3>

<ol>
	<li>Install Blender 2.6.2 32 or 64bit or higher here: <a target="BLENDERORG" href="http://www.blender.org/download/get-blender/">http://www.blender.org/download/get-blender/</a></li>
	<li>Extract the io_scene_i3d folder from the exporter zip archive and place it in your Blender addons folder.
    Example addons folder path: C:\Program Files\Blender Foundation\Blender\2.62\scripts\addons</li>
	<li>Launch Blender and go to "File -&gt; User Preferences...".</li>
	<li>Click on "Install Addon..." in the "Addons" section.</li>
	<li>Browse to the io_scene_i3d folder previously extracted.
    Example path: C:\Program Files\Blender Foundation\Blender\2.62\scripts\addons\io_scene_i3d</li>
	<li>Select the file __init__.py and click "Install Addon...".</li>
	<li>Select and enable the "Import-Export: I3D format" addon in the right list.
    Hint: Apply the "Community" and "Import-Export" filters on the left for less items to browse.</li>
	<li>Click on the "Save as Default" button to automatically load the addon each time you launch Blender.</li>
	<li>Now, you can export with "File -&gt; Export" to "GIANTS (.i3d)".</li>
</ol>
<br>
<img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/blenderExporter_install.png">

<br><br><br><br>
<i>Autodesk 3ds MAX and Autodesk Maya are registered trademarks of the Autodesk Corp.</i><br>
<br><br><br>
<h1 id="artwork_guide" style="page-break-before:always">Content Creation - Artwork Guide</h1>
<br><br>
<a name="artwork_guide_maya"><h2>Autodesk Maya</h2></a>
<a name="Fix_normals"><h3>Set correct normals</h3></a>
<p>Adjust normals to match topology. Use hard edges for cubic and soft edges for curved surfaces.</p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/fixNormals1.jpg" alt="fixNormals1"></p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/fixNormals2.jpg" alt="fixNormals2"></p><br><br>
<a name="Double_sided"><h3>Disable double sided option</h3></a>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/doubleSided.jpg" alt="doubleSided"></p><br><br>
<a name="Remove_zero_area_polygons"><h3>Remove zero area polygons</h3></a>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/zero_area_poly.jpg" alt="zero_area_poly"></p><br><br>
<a name="Eliminate_t-injunction"><h3>Eliminate T-Injunction</h3></a>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/t-injunction.jpg" alt="t-injunction"></p><br><br>
<a name="artwork_guide_max"><h2>Autodesk 3DS MAX</h2></a>
<br><br>
<a name="artwork_guide_Remove_useless_polygons"><h3>Remove useless polygons</h3></a>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/unusedPolygons.jpg" alt="Remove useless polygons"></p><br><br>
<a name="artwork_guide_Generate_Normalmaps"><h3>Generate normalmaps for details</h3></a>
<p>Generate Normalmaps for appropriate details in the geometry.</p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/useNormalmaps.jpg" alt="Generate Normalmaps"></p><br><br>
<a name="artwork_guide_Flip_edges"><h3>Flip edges</h3></a>
<p>Flip/turn edges to match topology of the polygon mesh.</p>
<p>Retriangulation of the polygon mesh is a good starting point. This works only with Editable Polys</p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/retriangulate.jpg" alt="retriangulate"></p>
<p>Convert to a Editable Mesh</p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/convertToMesh.jpg" alt="convertToMesh"></p>
<p>Flip/Turn individual edges manually</p>
<p>
    <img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/flipEdges1.jpg" alt="Flip edges 1"><br>
    <img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/flipEdges2.jpg" alt="Flip edges 2">
</p><br><br>
<a name="artwork_guide_Remove_two_sided_materials"><h3>Disable two sided material option</h3></a>
<p>Two sided materials are not supported in the engine and have to be replaced by an inverted copy of the affected polygons.</p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/2sided1.jpg" alt="2sided1"></p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/2sided2.jpg" alt="2sided2"></p>
<p>Used operations</p>
<ul>
    <li>Disable 2-Sided checkbox material property</li>
    <li>Select Mesh</li>
    <li>Clone</li>
    <li>Select clone</li>
    <li>Modifier: Polygon mode, select affected polygons and flip normals</li>
    <li>Delete unused faces from cloned mesh</li>
    <li>Attach cloned mesh to original mesh</li>
    <li>Modifier: Vertex mode and weld vertices</li>
</ul>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/2sided3.jpg" alt="2sided3"></p><br><br>
<a name="artwork_guide_Fix_normals"><h3>Set correct normals</h3></a>
<p>Adjust normals to match topology. Use hard edges for cubic and soft edges for curved surfaces.</p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/fixNormals1_002.jpg" alt="fixNormals1"></p>
<p>Used operations</p>
<ul>
    <li>Select Mesh</li>
    <li>Normal Modifier</li>
    <li>Select affected normals and break them</li>
    <li>Fine tune normals manually (optional)</li>
</ul>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/fixNormals1b.jpg" alt="fixNormals1b"></p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/fixNormals2_002.jpg" alt="fixNormals2"></p><br><br>
<a name="artwork_guide_Merge_to_single_mesh"><h3>Merge to single polygon mesh</h3></a>
<p>Merge groups of objects to a single mesh for optimal in-game performance.</p>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/mergeToSingleMesh1.jpg" alt="mergeToSingleMesh1"></p>
<p>Used operations</p>
<ul>
    <li>Select one object</li>
    <li>Modifier: Object mode and attach list</li>
    <li>Select objects to merge</li>
</ul>
<p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/mergeToSingleMesh2.jpg" alt="mergeToSingleMesh2"></p><br><br>
<a name="artwork_guide_texturing"><h2>Texturing</h2></a>
<a name="artwork_guide_JEPG_compression_artifacts"><h3>JPEG compression artifacts</h3></a>
<p>Never use the JPG format to store textures. Each time a jpg file is 
stored the quality of the image decreases. Even if the compression 
quality is set to 100%.</p>
<p>
    <img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/jpg_artifacts1.png" alt="jpg_artifacts1">
    <img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/jpg_artifacts2.jpg" alt="jpg_artifacts2">
    <br>
    Saved once as png from orignal texture (left), saved multiple times as jpg (right)
</p>
<a name="artwork_guide_non_power_of_two"><h3>Non-Power-of-Two textures</h3></a>
<p>Use power-of-two textures but you can use non-squared textures. As a general
    rule you should make your textures as big as they are in pixels when beeing
    projected onto the screen in the game.<br>
Eg. if you want to texture a fullscreen squad, you probably want to use a 1024x1024px to 2048x1024px sized texture.<br>Normalmap textures should be at least as big as the diffuse textures or even twice as big.</p>
<a name="artwork_guide_non_power_of_two"><h3>Texture size</h3></a>
<p>Texture size must be 2048x2048 pixels or smaller. Bigger textures are not
supported on older graphics cards (eg. GeforceFX, Radeon9xxx, Radeon8xx and Intel onboard graphic chips).</p>
<br>
<a name="artwork_guide_parallaxmapping"><h3>Generate maps for parallaxmapping</h3></a>
<p><b>Requirements</b><br>
    The Nvidia Photoshop Normal Map Filter plug-in from Nvidia. This plug-in can be downloaded from
    <a target="_NEW" href="http://developer.nvidia.com/object/photoshop_dds_plugins.html">developer.nvidia.com</a>
</p>
<b>Description</b><br>
<ul>
    <li>First, you need a greyscale image or a bump map as the base for the Parallax Map. Please note that
        most of the time, you will have to convert this greyscale image to a RGB image. You can do this with
    select Image &gt; Mode &gt; RGB Color (menu bar). </li>
    <li>Go to the "Window" tab and select "Show Channels". In the channel window, click the
    'Create New Channel' icon on the bottom right, just left of the Trash Icon.  A new channel "Alpha 1" will appear.</li>
    <br>
    <p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/ps_alpha.jpg" alt="NV_Settings"></p>
    <br>
    <li>Click one of the Color channels, press CTRL-A then CTRL-C to copy the channel informations to the clipboard for later use. </li>
    <li>In the channel window select the RGB channel with shift and the 
left mouse button. All channel tabs should now be marked or accordingly 
selected. </li>
    <li>Go now to the "Filter" menu and select "nvTools/NormalMapFilter...". In the Height Generation section, select InvertY.
        To create a Parallax Map you also have to select Height in the Alpha Field Section.
        With the "Scale" setting you can alter the intensity (depth) of the normal map. The "Filter Type" setting,
        defines how precise the normal map has to be. "4 sample" means precise, whereas 9x9 means rough. Click "OK" to proceed. <br>
    </li>
    <br>
    <p><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/ps_nv_settings.jpg" alt="NV_Settings"></p>
    <br>
    <li>You should now have a normal map, combined with a bump map in the Alpha Channel.</li>
    <li>Now you have to insert the previous saved channel information to the "Alpha 1" channel.
    Select the alpha channel with your left mouse button and then press CTRL-V to paste the Heightmap image into the channel. </li>
    <li>To increase the quality of your Parallax Map you can try also to apply a low
    gaussian filter to the alpha channel. Further you can reduce the contrast to get better results.</li>
    <li>Save the Image as png with transparency (RGBA 32 bit).</li>
</ul><br><br><br><br>
<h1 id="i3d" style="page-break-before:always">I3D Format</h1>
<br><br>
<a name="i3d_introduction"><h2>Introduction</h2></a>
<br>
I3D is an eXtensible Markup Language (XML) file format.<br>
<br>
A vaild I3D file has up to seven parts: Textures, Materials, Shapes, Dynamics, Scene graph, Animation and Userdata.
Dependent on application each part can be omitted.<br>
<br>
The XML Schema language is used to describe the I3D feature set. Download: <a href="http://i3d.giants.ch/schema/i3d-1.6.xsd">I3D 1.6 Schema</a><br>
<br>

<a name="i3d_features"><h2>Features</h2></a>
<ul>
	<li>Scenegraph hierarchy with
		<ul>
			<li>TransformGroups/Bones: translation, rotation, scale and visibility</li>
			<li>Lights: ambient, point, directional and spot lights</li>
			<li>Cameras: field of view, near and far clipping plane</li>
			<li>Shapes: meshes and nurbs curves (supports geometry instancing)</li>
			<li>Particle Systems</li>
        </ul>
    </li>
	<li>Animation
		<ul>
			<li>Animation sets</li>
			<li>Clips</li>
			<li>Keyframes: translation, rotation, scale and visibility</li>
			<li>Morph Targets</li>
        </ul>
    </li>
	<li>User Attributes</li>
	<li>Dynamics
		<ul>
			<li>Particle Systems (Sprite based)
                <ul>
                    <li>Surface Emitter</li>
                    <li>Gravity Fields</li>
                    <li>Air Fields</li>
                </ul>
            </li>
        </ul>
    </li>
	<li>Meshes
		<ul>
			<li>Vertices</li>
			<li>Normals</li>
			<li>Vertex colors</li>
			<li>Skin weights</li>
			<li>Texture coordinates (including multiple uv sets)</li>
			<li>Faces (vertex color, normals and texture coordinates per face)</li>
        </ul>
    </li>
	<li>Curves
		<ul>
			<li>Nurbscurves</li>
        </ul>
    </li>
	<li>Shader/Materials
		<ul>
			<li>Multitextures (arbitrary layered textures)</li>
			<li>Lightmaps</li>
			<li>Bumpmaps/Normalmaps</li>
			<li>Environmentmaps</li>
			<li>Specularmaps</li>
        </ul>
    </li>
</ul>

<a name="i3d_overview"><h2>Overview</h2></a><br><br>
<a href="http://gdn.giants-software.com/images/i3d/i3d-1.6.gif" title="Click to enlarge"><img src="GIANTS%20Game%20Engine%20v5%20Documentation_bestanden/i3d-1.png" alt="Overview"></a>
<br>
<br>

<a name="i3d_specification"><h2>Specification</h2></a>
<a name="i3d_general_layout"><h3>General Layout</h3></a>
<div class="code">
    &nbsp;&nbsp;&lt;?xml&nbsp;version="1.0"&nbsp;encoding="iso-8859-1"?&gt;<br>
    
&nbsp;&nbsp;&lt;i3D&nbsp;name="MyScene"&nbsp;version="1.6"&nbsp;xsi:noNamespaceSchemaLocation="http://i3d.giants.ch/schema/i3d-1.6.xsd"&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;Files&gt;..&lt;/Files&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;Materials&gt;..&lt;/Materials&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;Shapes&gt;..&lt;/Shapes&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;Dynamics&gt;..&lt;/Dynamics&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;Scene&gt;..&lt;/Scene&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;Animation&gt;..&lt;/Animation&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;UserAttributes&gt;..&lt;/UserAttributes&gt;<br>
    &nbsp;&nbsp;&lt;/i3D&gt;<br>
</div>

<br>
<h3>Coordinate Systems</h3>
I3D uses a right-handed coordinate system.<br>
<br>
<br>
<h3>Files</h3>
<br>
All used file references are defined here. File handles are mapped to the corresponding filenames.<br>
<br>
<div class="code">
    &nbsp;&nbsp;&lt;Files&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;File&nbsp;fileId="1"&nbsp;filename="myTexture1.png"&nbsp;relativePath="true"/&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;...<br>
    &nbsp;&nbsp;&lt;/Files&gt;<br>
</div>

<br>
<a name="i3d_materials"><h3>Materials</h3></a>
<br>
Materials used in the materials attribute of Shape nodes within the scenegraph section are defined in this section.<br>
<br>
<div class="code">
    &nbsp;&nbsp;&lt;Materials&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;Material&nbsp;name="myShader_001"&nbsp;materialId="12"&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Texture&nbsp;fileId="1"/&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/Material&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;...<br>
    &nbsp;&nbsp;&lt;/Materials&gt;<br>
</div>
<br>

<a name="i3d_shapes"><h3>Shapes</h3></a>
<br>
Shapes are defined here and referenced from the scene graph section.
This mechanism allows multiple instancing of shapes.
<br>
<br>
<a name="i3d_dynamics"><h3>Dynamics</h3></a>
<br>
Dynamic objects are defined in this part and referenced from the Scene graph section.<br>
<br>
<div class="code">
    &nbsp;&nbsp;&lt;Dynamics&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;ParticleSystem name="emitter1" dynamicId="1" type="sprite" rate="0.004" lifespanInfinite="false"<br>
    &nbsp;&nbsp;&nbsp;&nbsp;speed="0.01" speedRandom="0" tangentSpeed="0" normalSpeed="1" lifespan="10000" maxCount="1000"<br>
    &nbsp;&nbsp;&nbsp;&nbsp;spriteScaleX="50" spriteScaleY="50" 
depthSort="false" emitterShape="pCubeShape1" shader="lambert2"&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Gravity force="0 -3 0"/&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Air velocity="2 0 0"/&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ParticleSystem&gt;<br>
    &nbsp;&nbsp;&lt;/Dynamics&gt;<br>
</div>
<br>

<a name="i3d_scenegraph"><h3>Scenegraph</h3></a>
<br>
The Scene graph hierarchy (transformations, bones, joints, shapes, lights, cameras and particle systems) are stored in this
section. Shapes, materials and particle systems are stored as references.<br>
<br>
<div class="code">
    &nbsp;&nbsp;&lt;Scene&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;TransformGroup&nbsp;name="myGroup1"&nbsp;translation="1.25&nbsp;0&nbsp;-9"&nbsp;nodeId="47"&gt;<br>
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Shape&nbsp;name="mySphere"&nbsp;materialIds="1"&nbsp;shapeId="1"&nbsp;nodeId="48"/&gt;<br>
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;TransformGroup&nbsp;name="myGroup2"&nbsp;rotation="90&nbsp;0&nbsp;270"&nbsp;nodeId="49"&gt;<br>
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Shape&nbsp;name="mySphere2"&nbsp;materialIds="1"&nbsp;shapeId="2"&nbsp;nodeId="50"/&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/TransformGroup&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/TransformGroup&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;...<br>
    &nbsp;&nbsp;&lt;/Scene&gt;<br>
</div>
<br>
<h3>Scene graph node types</h3>
<br>

<h3>TransformGroup</h3>
<table>
    <tbody><tr>
        <th class="list" align="left" width="150"><b>Attribute</b></th>
        <th class="list" align="left" width="300"><b>Description</b></th>
        <th class="list" align="left" width="60"><b>Type</b></th>
        <th class="list" align="left" width="70"><b>Optional</b></th>
    </tr>
    <tr>
        <td class="list">name</td>
        <td class="list">Name of TransformGroup</td>
        <td class="list">string</td>
        <td class="list">no</td>
    </tr>
    <tr>
        <td class="list">translation</td>
        <td class="list">Translation</td>
        <td class="list">complex</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">rotation</td>
        <td class="list">Rotation, euler order ZY'X''</td>
        <td class="list">complex</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">scale</td>
        <td class="list">Scale</td>
        <td class="list">complex</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">visibility</td>
        <td class="list">Visibility</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">kinematic</td>
        <td class="list">Kinematic object</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">dynamic</td>
        <td class="list">Dynamic object</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">static</td>
        <td class="list">Static object</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">compound</td>
        <td class="list">Compound parent</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">compoundChild</td>
        <td class="list">Compound child</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">collision</td>
        <td class="list">Enable collision</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">ccd</td>
        <td class="list">Continuous collision detection</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">trigger</td>
        <td class="list">Trigger</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">cloth</td>
        <td class="list">Cloth</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">restitution</td>
        <td class="list">Restitution</td>
        <td class="list">float</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">staticFriction</td>
        <td class="list">Static friction</td>
        <td class="list">float</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">dynamicFriction</td>
        <td class="list">Dynamic friction</td>
        <td class="list">float</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">skinWidth</td>
        <td class="list">Skin width</td>
        <td class="list">float</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">density</td>
        <td class="list">Density</td>
        <td class="list">float</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">collisionMask</td>
        <td class="list">Collision mask</td>
        <td class="list">integer</td>
        <td class="list">yes</td>
    </tr>

    <tr>
        <td class="list">joint</td>
        <td class="list">Joint</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">breakableJoint</td>
        <td class="list">Breakable joint</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">jointBreakForce</td>
        <td class="list">Joint break force</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">jointBreakTorque</td>
        <td class="list">Joint break torque</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">projection</td>
        <td class="list">Enable joint projection</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">xAxisDrive</td>
        <td class="list">Enable x axis drive</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">yAxisDrive</td>
        <td class="list">Enable y axis drive</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">zAxisDrive</td>
        <td class="list">Enable z axis drive</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">drivePos</td>
        <td class="list">Enable drive position</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">projDistance</td>
        <td class="list">Projection distance</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">driveForceLimit</td>
        <td class="list">Drive force limit</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">driveSpring</td>
        <td class="list">Drive spring</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">driveSpring</td>
        <td class="list">Drive spring</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">solverIterationCount</td>
        <td class="list">Solver iteration count</td>
        <td class="list">integer</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">rotMinX</td>
        <td class="list">Rotation minimum x</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">rotMinY</td>
        <td class="list">Rotation minimum y</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">rotMinZ</td>
        <td class="list">Rotation minimum z</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">rotMaxX</td>
        <td class="list">Rotation maximum x</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">rotMaxY</td>
        <td class="list">Rotation maximum y</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">rotMaxZ</td>
        <td class="list">Rotation maximum z</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">transMinX</td>
        <td class="list">Translation minimum x</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">transMinY</td>
        <td class="list">Translation minimum y</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">transMinZ</td>
        <td class="list">Translation minimum z</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">transMaxX</td>
        <td class="list">Translation maximum x</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">transMaxY</td>
        <td class="list">Translation maximum y</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">transMaxZ</td>
        <td class="list">Translation maximum z</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">objectMask</td>
        <td class="list">Object mask</td>
        <td class="list">integer</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">nodeId</td>
        <td class="list">Node reference id, used for Animation and UserAttributes section</td>
        <td class="list">integer</td>
        <td class="list">no</td>
    </tr>
</tbody></table>
<br>
<table>
    <tbody><tr>
        <th class="list" align="left" width="150"><b>Element</b></th>
        <th class="list" align="left" width="300"><b>Description</b></th>
        <th class="list" align="left" width="60"><b>Type</b></th>
        <th class="list" align="left" width="70"><b>Cardinality</b></th>
    </tr>
    <tr>
        <td class="list">TransformGroup</td>
        <td class="list" valign="top" width="300">Transform group node</td>
        <td class="list">complex</td>
        <td class="list">0..N</td>
    </tr>
    <tr>
        <td class="list">Shape</td>
        <td class="list" valign="top" width="300">Shape node</td>
        <td class="list">complex</td>
        <td class="list">0..N</td>
    </tr>
    <tr>
        <td class="list">Camera</td>
        <td class="list" valign="top" width="300">Camera node</td>
        <td class="list">complex</td>
        <td class="list">0..N</td>
    </tr>
    <tr>
        <td class="list">Light</td>
        <td class="list" valign="top" width="300">Light node</td>
        <td class="list">complex</td>
        <td class="list">0..N</td>
    </tr>
    <tr>
        <td class="list">Dynamic</td>
        <td class="list" valign="top" width="300">Dynamic node (eg. particle system)</td>
        <td class="list">complex</td>
        <td class="list">0..N</td>
    </tr>
</tbody></table>
<br>

<h3>Shape</h3>
<table>
    <tbody><tr>
        <th class="list" align="left" width="150"><b>Attribute</b></th>
        <th class="list" align="left" width="300"><b>Description</b></th>
        <th class="list" align="left" width="60"><b>Type</b></th>
        <th class="list" align="left" width="70"><b>Optional</b></th>
    </tr>
    <tr>
        <td class="list">shapeId</td>
        <td class="list" valign="top" width="300">Shape reference id (reference to shapes section)</td>
        <td class="list">string</td>
        <td class="list">no</td>
    </tr>
    <tr>
        <td class="list">materialIds</td>
        <td class="list" valign="top" width="300">List of used material ids (reference to materials section)</td>
        <td class="list">string</td>
        <td class="list">no</td>
    </tr>
    <tr>
        <td class="list">skinBindNodeIds</td>
        <td class="list" valign="top" width="300">Skin bind node ids</td>
        <td class="list">string</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">castsShadows</td>
        <td class="list" valign="top" width="300">Casts shadows</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">receiveShadows</td>
        <td class="list" valign="top" width="300">Receive shadows</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">clipDistance</td>
        <td class="list" valign="top" width="300">Clip distance</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">nonRenderable</td>
        <td class="list" valign="top" width="300">Non renderable</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>

</tbody></table>
<br>
<br>

<h3>Camera</h3>
<table>
    <tbody><tr>
        <th class="list" align="left" width="150"><b>Attribute</b></th>
        <th class="list" align="left" width="300"><b>Description</b></th>
        <th class="list" align="left" width="60"><b>Type</b></th>
        <th class="list" align="left" width="70"><b>Optional</b></th>
    </tr>
    <tr>
        <td class="list">fov</td>
        <td class="list" valign="top" width="300">Field of view</td>
        <td class="list">double</td>
        <td class="list">no</td>
    </tr>
    <tr>
        <td class="list">nearClip</td>
        <td class="list" valign="top" width="300">Near clipping plane</td>
        <td class="list">double</td>
        <td class="list">no</td>
    </tr>
    <tr>
        <td class="list">farClip</td>
        <td class="list" valign="top" width="300">Far clipping plane</td>
        <td class="list">double</td>
        <td class="list">no</td>
    </tr>
</tbody></table>
<br>

<h3>Light</h3>
<table>
    <tbody><tr>
        <th class="list" align="left" width="150"><b>Attribute</b></th>
        <th class="list" align="left" width="300"><b>Description</b></th>
        <th class="list" align="left" width="60"><b>Type</b></th>
        <th class="list" align="left" width="70"><b>Optional</b></th>
    </tr>
    <tr>
        <td class="list">type</td>
        <td class="list">Light type</td>
        <td class="list">string</td>
        <td class="list">no</td>
    </tr>
    <tr>
        <td class="list">diffuseColor</td>
        <td class="list">Diffuse color</td>
        <td class="list">complex</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">emitDiffuse</td>
        <td class="list">Emit diffuse</td>
        <td class="list">string</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">specularColor</td>
        <td class="list">Specular color</td>
        <td class="list">complex</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">emitSpecular</td>
        <td class="list">Emit specular</td>
        <td class="list">string</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">castShadowMap</td>
        <td class="list">Cast shadow Map</td>
        <td class="list">boolean</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">depthMapBias</td>
        <td class="list">Depth map bias</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">depthMapResolution</td>
        <td class="list">Depth map resolution</td>
        <td class="list">integer</td>
        <td class="list">yes</td>
    </tr>

    <tr>
        <td class="list">shadowFarDistance</td>
        <td class="list">Shadow far fistance</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>

    <tr>
        <td class="list">shadowTextureOffset</td>
        <td class="list">Shadow texture offset</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">shadowExtrusionDistance</td>
        <td class="list">Shadow extrusion distance</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">decayRate</td>
        <td class="list">Decay rate</td>
        <td class="list">integer</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">coneAngle</td>
        <td class="list">coneAngle</td>
        <td class="list">double</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">dropOff</td>
        <td class="list">dropOff</td>
        <td class="list">integer</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">projTexture</td>
        <td class="list">Projective texture name</td>
        <td class="list">string</td>
        <td class="list">yes</td>
    </tr>
    <tr>
        <td class="list">range</td>
        <td class="list">Range</td>
        <td class="list">double</td>
        <td class="list">no</td>
    </tr>
</tbody></table>
<br>
<h3>5 Dynamic</h3>
<table>
    <tbody><tr>
        <th class="list" align="left" width="150"><b>Attribute</b></th>
        <th class="list" align="left" width="300"><b>Description</b></th>
        <th class="list" align="left" width="60"><b>Type</b></th>
        <th class="list" align="left" width="70"><b>Optional</b></th>
    </tr>
    <tr>
        <td class="list">dynamicId</td>
        <td class="list" valign="top" width="300">Dynamic id (reference to dynamics section)</td>
        <td class="list">string</td>
        <td class="list">no</td>
    </tr>
</tbody></table>
<br>
<br>

<br>
<h3>Example</h3>
<div class="code">
    &lt;Scene&gt;<br>
    &nbsp;&nbsp;&lt;Camera name="camera1" translation="0 2.00 6.47" 
rotation="-13.07 0 0" fov="54.43" nearClip="0.01" farClip="1000" 
nodeId="34"/&gt;<br>
    &nbsp;&nbsp;&lt;Light name="pointLight1" translation="6.56 5.76 
4.04" type="point" diffuseColor="1 1 1" range="10" nodeId="35"/&gt;<br>
    &nbsp;&nbsp;&lt;TransformGroup name="group1" translation="1.35 0.96 0.81" nodeId="36"&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Shape name="pCubeShape1" 
rotation="-23.94 6.49 14.29" materialIds="1 2" shapeId="1" 
nodeId="37"/&gt;<br>
    &nbsp;&nbsp;&lt;/TransformGroup&gt;<br>
    &lt;/Scene&gt;<br>
</div>
<br>
<a name="i3d_animation"><h3>Animation</h3></a>
<br>
Motions are defined in this part. Clips are the basic building block and allow Non-Linear Animation by composing multiple clips.<br>
<br>
<div class="code">
    &nbsp;&nbsp;&lt;Animation&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;AnimationSets&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;AnimationSet&nbsp;name="walk_crouched"&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Clip&nbsp;name="walk_crouched1Source"&nbsp;duration="1000"&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Keyframes&nbsp;nodeId="Hips"&gt;<br>
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Keyframe&nbsp;time="0"&nbsp;translation="-0.467&nbsp;13.504&nbsp;39.842"/&gt;<br>
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Keyframe&nbsp;time="333"&nbsp;translation="-0.559&nbsp;12.915&nbsp;39.370"/&gt;<br>
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Keyframe&nbsp;time="1000"&nbsp;translation="-2.610&nbsp;11.917&nbsp;35.462"/&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Keyframes&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Keyframes&nbsp;node="Chest"&gt;<br>
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Keyframe&nbsp;time="0"&nbsp;rotation="-1.013&nbsp;-4.465&nbsp;0.890"/&gt;<br>
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Keyframe&nbsp;time="666"&nbsp;rotation="10.009&nbsp;-6.667&nbsp;4.381"/&gt;<br>
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Keyframe&nbsp;time="1000"&nbsp;rotation="11.638&nbsp;-3.906&nbsp;4.115"/&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Keyframes&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Clip&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/AnimationSet&gt;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/AnimationSets&gt;<br>
    &nbsp;&nbsp;&lt;/Animation&gt;<br>
</div><br><br><br>    
    </body></html>