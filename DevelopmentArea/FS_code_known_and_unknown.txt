-- this is a information sheet for developers.
-- here we paste all the known g_ and basemission code we found that are
-- not alway's public for the Farming Simulator community
-- use print(type()) or for k,v in pairs() do print(k,v) end

FSBaseMission
getUserProfileAppPath()

g_currentMission
g_currentMission.missionInfo
g_currentMission.ingameNews
g_currentMission.environment.weatherTemperaturesDay
g_currentMission.environment.weatherTemperaturesNight
g_currentMission.ingameMap.isFullSize
g_currentMission.ingameMap:createMapHotspot(tostring(fieldDef.fieldNumber), "dataS2/menu/blank.png", x, z, 0, 0, false, false, true, 0);
g_currentMission:addSharedMoney(value);
g_currentMission:addMoneyChange(value, FSBaseMission.MONEY_TYPE_SINGLE, true);
g_currentMission.economyManager:getCurrentGreatDemand(self.tipTriggers[1].stationName, fillType);
g_currentMission.missionStats.difficulty; -- 1  2  3
g_currentMission:addExtraPrintText(g_i18n:getText("fill_level")..string.format(" %d (%d%%)", fillLevelPrint, fillLevelPercent));
 g_currentMission.bunkerScore
 g_currentMission.controlPlayer
 g_currentMission.player.rootNode
 g_currentMission.environment:addMinuteChangeListener(instance);
 g_currentMission.environment:removeMinuteChangeListener(self);
 g_currentMission.fieldDefinitionBase
 g_currentMission:getIsServer()
 g_currentMission:getIsClient()
 (2 * math.pi) * (g_currentMission.environment.dayTime / (1000 * 60 * 60 * 12));
 (2 * math.pi) * (g_currentMission.environment.dayTime / (1000 * 60 * 60));
 g_currentMission.controlledVehicle 
 
g_currentModDirectory

g_screenAspectRatio
g_inGameMenu
g_gui.currentGui
_G
g_i18n
g_screenWidth
g_screenHeight
g_languageShort

if g_currentMission.missionInfo.customEnvironment ~= nil then
    i18n = _G[g_currentMission.missionInfo.customEnvironment].g_i18n;
  else
    i18n = g_i18n;
  end;
 g_currentMission.missionStats:getStatisticData()
 
 g_grassUsagePerAnimalPerDay[animalName]
 g_silageUsagePerAnimalPerDay[animalName]
 g_forageUsagePerAnimalPerDay[animalName]
 g_strawUsagePerAnimalPerDay[animalName]
 g_liquidManureLitersPerAnimalPerDay[animalName]
 g_manureLitersPerAnimalPerDay[animalName]
 g_palletFillLevelPerAnimalPerDay[animalName]
 g_pickupObjectsPerAnimalPerDay[animalName]
 g_milkLitersPerAnimalPerDay[animalName]
 
 
 g_currentMission.husbandries[animalName]
 AnimalHusbandry.playerWrappers[connection];
 
 g_currentMission:getSiloAmount()
 g_currentMission:setSiloAmount()
 
 g_onCreateUtil.addOnCreateFunction("functionName", "ClassName".onCreate);
 g_onCreateUtil.addOnCreateFunction("sampleAA", sampleAA.onCreate);
 
 g_currentMission.onCreateLoadedObjects
 
 g_mouseControlsHelp
 
 g_client
 
 g_isDemo
 
   --table.insert(g_currentMission.updateables, helpIcons);
g_currentMission.helpIconsBase = helpIcons;
g_currentMission.missionStats.foundHelpIcons 
messageNumber = helpIcon.helpIconCustomNumber;


 -- throw player out of field dialog if he's currently got it open
            if g_gui.currentGui ~= nil and g_gui.currentGuiName == "FieldDialog" and g_gui.currentGui.target.currentField == fieldDef then
                g_gui.currentGui.target:onBackClick();
end;

local infoDialog = g_gui:showGui("InfoDialog");
        infoDialog.target:setText(g_i18n:getText("NotPossibleInDemo"));
infoDialog.target:setCallbacks(nil, nil, true);

 g_fieldDialog:setReturnScreen("");
g_gui:showGui("FieldDialog");

if g_currentMission.controlPlayer then
            if g_currentMission.player ~= nil then
                playerPosition[1], playerPosition[2], playerPosition[3] = getWorldTranslation(g_currentMission.player.rootNode);
            end
    	elseif g_currentMission.controlledVehicle ~= nil then
    		playerPosition[1], playerPosition[2], playerPosition[3] = getWorldTranslation(g_currentMission.controlledVehicle.rootNode);
    	end;

